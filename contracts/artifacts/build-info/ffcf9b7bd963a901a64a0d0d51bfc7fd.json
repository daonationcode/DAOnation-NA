{"id":"ffcf9b7bd963a901a64a0d0d51bfc7fd","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/DAOnation.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract DAOnation {\r\n  struct dao_uri_struct {\r\n    string dao_wallet;\r\n    string dao_uri;\r\n    string finished;\r\n  }\r\n  struct goal_uri_struct {\r\n    string dao_id;\r\n    string goal_uri;\r\n  }\r\n\r\n  struct ideas_uri_struct {\r\n    string goal_id;\r\n    string ideas_uri;\r\n    uint256 donation;\r\n  }\r\n\r\n  struct donation_struct {\r\n    string ideas_id;\r\n    uint256 userid;\r\n    uint256 donation;\r\n  }\r\n\r\n  struct smart_contract_uri_struct {\r\n    uint256 smart_contract_id;\r\n    uint256 ideas_id;\r\n    string smart_contract_uri;\r\n  }\r\n  struct goal_ideas_votes_struct {\r\n    string goal_id;\r\n    string ideas_id;\r\n    uint256 user_id;\r\n  }\r\n  struct message_struct {\r\n    uint256 message_id;\r\n    string ideas_id;\r\n    string message;\r\n    string sender;\r\n  }\r\n  struct message_read_struct {\r\n    uint256 message_id;\r\n    uint256 ideas_id;\r\n    uint256 user_id;\r\n    string msg_type;\r\n  }\r\n  struct reply_struct {\r\n    uint256 reply_id;\r\n    uint256 message_id;\r\n    uint256 ideas_id;\r\n    string message;\r\n  }\r\n\r\n  struct UnbondingRequest {\r\n    int64 completionTime;\r\n    uint256 amount;\r\n  }\r\n\r\n  struct join_struct {\r\n    string daoId;\r\n    uint256 user_id;\r\n    string joined_date;\r\n  }\r\n\r\n  struct user_badge_struct {\r\n    uint256 user_id;\r\n    bool dao;\r\n    bool joined;\r\n    bool goal;\r\n    bool ideas;\r\n    bool vote;\r\n    bool donation;\r\n    bool comment;\r\n    bool reply;\r\n  }\r\n\r\n  struct feed_struct {\r\n    uint256 feed_id;\r\n    uint256 date;\r\n    string Type;\r\n    string data;\r\n  }\r\n  uint256 public _dao_ids;\r\n  uint256 public _donations_ids;\r\n  uint256 public _goal_ids;\r\n  uint256 public _ideas_ids;\r\n  uint256 public _join_ids;\r\n  uint256 public _smart_contract_ids;\r\n  uint256 public _ideas_vote_ids;\r\n  uint256 public _message_ids;\r\n  uint256 public _message_read_ids;\r\n  uint256 public _reply_ids;\r\n  uint256 public _feed_ids;\r\n  mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\r\n  mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\r\n  mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\r\n\r\n  mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\r\n  mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\r\n  mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\r\n  mapping(uint256 => feed_struct) public _feeds; //_feed_ids            => (feed_struct)\r\n  mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\r\n  mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\r\n  mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\r\n\r\n  mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\r\n\r\n  mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\r\n\r\n  mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\r\n  mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\r\n\r\n  //Daos\r\n  function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template, uint256 user_id) public returns (uint256) {\r\n    //Create Dao into _dao_uris\r\n    _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\r\n    _template_uris[_dao_ids] = _template;\r\n    _user_badges[user_id].dao = true;\r\n    _dao_ids++;\r\n\r\n    return _dao_ids;\r\n  }\r\n\r\n  function update_template(uint256 _dao_id, string memory _template) public {\r\n    _template_uris[_dao_id] = _template;\r\n  }\r\n\r\n  function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\r\n    //Set Dao of wallet and uri\r\n    _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n    _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n  }\r\n\r\n  function get_all_daos() public view returns (string[] memory) {\r\n    //Getting all doas\r\n    string[] memory _StoreInfo = new string[](_dao_ids);\r\n    for (uint256 i = 0; i < _dao_ids; i++) {\r\n      _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n    //Getting one dao URI\r\n    return _dao_uris[_dao_id].dao_uri;\r\n  }\r\n\r\n  function add_Feed(string memory feed_text, string memory _type) public {\r\n    _feeds[_feed_ids] = feed_struct(_feed_ids, block.timestamp, _type, feed_text);\r\n    _feed_ids++;\r\n  }\r\n\r\n  //Goals\r\n  function create_goal(string memory _goal_uri, string memory _dao_id, uint256 _user_id, string memory _feed) public returns (uint256) {\r\n    //Create goal into _goal_uris\r\n    _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n\r\n    _user_badges[_user_id].goal = true;\r\n    _goal_ids++;\r\n    add_Feed(_feed, 'goal');\r\n\r\n    return _goal_ids;\r\n  }\r\n\r\n  function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n    //Set goal uri\r\n    _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n  }\r\n\r\n  function get_all_goals() public view returns (string[] memory) {\r\n    //Getting all goals\r\n    string[] memory _StoreInfo = new string[](_goal_ids);\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\r\n    //Getting all goals by dao id\r\n    string[] memory _StoreInfo = new string[](_goal_ids);\r\n    uint256 _store_id;\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\r\n        _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n        _store_id++;\r\n      }\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\r\n    //Getting goal id by uri\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n  \r\n  // function get_dao_id_by_ideas_id(uint256 ideas_id) public view returns (string memory) {\r\n    \r\n  //   string memory  goal_id= _ideas_uris[ideas_id].goal_id;\r\n  //   string memory dao_id = _goal_uris[goal_id].dao_id;\r\n    \r\n  //   return dao_id;\r\n  // }\r\n\r\n  function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n    //Getting one goal URI\r\n    return _goal_uris[_goal_id].goal_uri;\r\n  }\r\n\r\n  //Ideas\r\n  function create_ideas(string memory _ideas_uri, string memory _goal_id, string[] memory _smart_contracts, uint256 _user_id, string memory _feed) public returns (uint256) {\r\n    //Create ideas into _ideas_uris\r\n    _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\r\n    _user_badges[_user_id].ideas = true;\r\n    _ideas_ids++;\r\n\r\n    for (uint256 i = 0; i < _smart_contracts.length; i++) {\r\n      create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\r\n      _smart_contract_ids++;\r\n    }\r\n    add_Feed(_feed, 'idea');\r\n\r\n    return _ideas_ids;\r\n  }\r\n\r\n  function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\r\n    _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\r\n  }\r\n\r\n  function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n    _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n  }\r\n\r\n  function add_donation(string memory _ideas_id, uint256 _doantion, uint256 _userid, string memory _feed1, string memory _feed2) public {\r\n    if (_user_badges[_userid].donation == false) {\r\n      add_Feed(_feed1, 'badge');\r\n    }\r\n    add_Feed(_feed2, 'donation');\r\n\r\n    _user_badges[_userid].donation = true;\r\n    _donated[_userid] += _doantion;\r\n    _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\r\n    _donations_ids++;\r\n  }\r\n\r\n  function join_community(string memory dao_id, uint256 person,string memory joined_date, string memory _feed) public {\r\n    _user_badges[person].joined = true;\r\n    _joined_person[_join_ids] = join_struct({daoId: dao_id, user_id: person,joined_date:joined_date});\r\n    _join_ids++;\r\n    add_Feed(_feed, 'join');\r\n  }\r\n\r\n  function leave_community(uint256 join_id) public {\r\n    _joined_person[join_id] = join_struct({daoId: \"9999\", user_id: 9999,joined_date:\"\"});\r\n  }\r\n\r\n  function is_person_joined(string memory dao_id, uint256 person) public view returns (bool) {\r\n    for (uint256 i = 0; i < _join_ids; i++) {\r\n      if ((_joined_person[i].user_id == person) && (keccak256(bytes(_joined_person[i].daoId)) == keccak256(bytes(dao_id)))) return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function get_person_joinedID(string memory dao_id, uint256 person) public view returns (uint256) {\r\n    for (uint256 i = 0; i < _join_ids; i++) {\r\n      if ((_joined_person[i].user_id == person) && (keccak256(bytes(_joined_person[i].daoId)) == keccak256(bytes(dao_id)))) return i;\r\n    }\r\n\r\n    return 9999;\r\n  }\r\n\r\n  function get_all_ideas() public view returns (string[] memory) {\r\n    //Getting all ideas\r\n    string[] memory _StoreInfo = new string[](_ideas_ids);\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_all_ideas_by_goal_id(string memory  _goal_id) public view returns (string[] memory) {\r\n    //Getting all ideas by goal id\r\n    string[] memory _StoreInfo = new string[](_ideas_ids);\r\n    uint256 _store_id;\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (keccak256(bytes(_ideas_uris[i].goal_id)) == keccak256(bytes(_goal_id))) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n      _store_id++;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n    //Getting ideas id by uri\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (string memory) {\r\n    //Getting ideas id by uri\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n    //Getting one ideas URI\r\n    return _ideas_uris[_ideas_id].ideas_uri;\r\n  }\r\n\r\n  //Votes\r\n  function create_goal_ideas_vote(string memory _goal_id, string memory _ideas_id, uint256 _user_id, string memory _feed,bool  feed_add) public returns (uint256) {\r\n    _user_badges[_user_id].vote = true;\r\n    //Create votes into all_goal_ideas_votes\r\n    all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\r\n    _ideas_vote_ids++;\r\n    if (feed_add){\r\n        add_Feed(_feed, 'vote');\r\n    }\r\n\r\n    return _ideas_vote_ids;\r\n  }\r\n  \r\n    //Messages\r\n  function sendMsg(string memory _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\r\n    _user_badges[_user_id].comment = true;\r\n    //Create messsage into all_messages\r\n    all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\r\n    _message_ids++;\r\n\r\n    return _message_ids;\r\n  }\r\n\r\n  function getMsgIDs(string memory ideas_id) public view returns (uint256[] memory) {\r\n    //Getting all messages ids by idea id\r\n    uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\r\n    uint256 _msg_id;\r\n    for (uint256 i = 0; i < _message_ids; i++) {\r\n      if (keccak256(bytes(all_messages[i].ideas_id)) == keccak256(bytes(ideas_id))) {\r\n        _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\r\n        _msg_id++;\r\n      }\r\n    }\r\n\r\n    return _All_Ideas_Messages;\r\n  }\r\n\r\n  function sendReply(uint256 _message_id, string memory _reply, uint256 ideas_id, uint256 _userid) public returns (uint256) {\r\n    _user_badges[_userid].reply = true;\r\n    //Create reply into all_replies\r\n    all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id, ideas_id, _reply);\r\n    _reply_ids++;\r\n\r\n    return _reply_ids;\r\n  }\r\n\r\n  function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\r\n    //Getting all messages ids by idea id\r\n    uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\r\n    uint256 _reply_id;\r\n    for (uint256 i = 0; i < _reply_ids; i++) {\r\n      if (all_replies[i].message_id == message_id) {\r\n        _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\r\n        _reply_id++;\r\n      }\r\n    }\r\n\r\n    return _All_Messages_Replys;\r\n  }\r\n\r\n  function sendReadMsg(uint256 _message_id, uint256 _ideas_id, uint256 _wallet, string memory msg_type) public returns (uint256) {\r\n    //Create messsage into all_messages\r\n    all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet, msg_type);\r\n    _message_read_ids++;\r\n\r\n    return _message_read_ids;\r\n  }\r\n\r\n  function getReadMsg(uint256 _message_id, string memory msg_type) public view returns (bool) {\r\n    bool read = false;\r\n    for (uint256 i = 0; i < _message_read_ids; i++) {\r\n      if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\r\n        read = true;\r\n      }\r\n    }\r\n\r\n    return read;\r\n  }\r\n\r\n  function reset_all() public {\r\n    for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\r\n    for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\r\n    for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\r\n    for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\r\n    for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\r\n    for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\r\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\r\n    _dao_ids = 0;\r\n    _goal_ids = 0;\r\n    _ideas_ids = 0;\r\n    _message_ids = 0;\r\n    _reply_ids = 0;\r\n    _ideas_vote_ids = 0;\r\n  }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[711],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":665,"src":"130:22:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":690,"src":"153:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":712,"src":"195:33:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Context","nameLocations":["1419:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":711,"src":"1419:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"1419:7:0"},{"baseName":{"id":8,"name":"IERC20","nameLocations":["1428:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1428:6:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"1428:6:0"},{"baseName":{"id":10,"name":"IERC20Metadata","nameLocations":["1436:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1436:14:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1436:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"230:1170:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,689,664,711],"name":"ERC20","nameLocation":"1410:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":15,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:0","nodeType":"VariableDeclaration","scope":586,"src":"1457:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":21,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:0","nodeType":"VariableDeclaration","scope":586,"src":"1509:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":20,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":19,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":23,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:0","nodeType":"VariableDeclaration","scope":586,"src":"1583:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"1633:5:0","nodeType":"VariableDeclaration","scope":586,"src":"1618:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:0","nodeType":"VariableDeclaration","scope":586,"src":"1644:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"2032:57:0","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2042:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2050:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":38,"nodeType":"ExpressionStatement","src":"2042:13:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2065:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2075:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":42,"nodeType":"ExpressionStatement","src":"2065:17:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1673:298:0","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"name_","nameLocation":"2002:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1988:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:0","nodeType":"VariableDeclaration","scope":44,"src":"2009:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2032:0:0"},"scope":586,"src":"1976:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[676],"body":{"id":53,"nodeType":"Block","src":"2223:29:0","statements":[{"expression":{"id":51,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2240:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"2233:12:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2095:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:0","nodeType":"FunctionDefinition","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:0"},"parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2167:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2208:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":48,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:0"},"scope":586,"src":"2154:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[682],"body":{"id":63,"nodeType":"Block","src":"2436:31:0","statements":[{"expression":{"id":61,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2453:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":60,"id":62,"nodeType":"Return","src":"2446:14:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2258:102:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:0","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:0"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2380:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2421:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:0"},"scope":586,"src":"2365:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[688],"body":{"id":73,"nodeType":"Block","src":"3156:26:0","statements":[{"expression":{"hexValue":"3138","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":70,"id":72,"nodeType":"Return","src":"3166:9:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2473:613:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3108:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"3149:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:0"},"scope":586,"src":"3091:91:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":83,"nodeType":"Block","src":"3312:36:0","statements":[{"expression":{"id":81,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3329:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":80,"id":82,"nodeType":"Return","src":"3322:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3188:49:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:0","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:0"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3262:2:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"3303:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:0"},"scope":586,"src":"3242:106:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[621],"body":{"id":97,"nodeType":"Block","src":"3489:42:0","statements":[{"expression":{"baseExpression":{"id":93,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"3506:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":95,"indexExpression":{"id":94,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3516:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":92,"id":96,"nodeType":"Return","src":"3499:25:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3354:47:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:0","nodeType":"FunctionDefinition","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:0"},"parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nameLocation":"3433:7:0","nodeType":"VariableDeclaration","scope":98,"src":"3425:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"3480:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:0"},"scope":586,"src":"3406:125:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[631],"body":{"id":122,"nodeType":"Block","src":"3812:104:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"3830:5:0","nodeType":"VariableDeclaration","scope":122,"src":"3822:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3838:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:0"},{"expression":{"arguments":[{"id":115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3870:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3877:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3881:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3860:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"ExpressionStatement","src":"3860:28:0"},{"expression":{"hexValue":"74727565","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":108,"id":121,"nodeType":"Return","src":"3898:11:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3537:185:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":123,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"to","nameLocation":"3753:2:0","nodeType":"VariableDeclaration","scope":123,"src":"3745:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount","nameLocation":"3765:6:0","nodeType":"VariableDeclaration","scope":123,"src":"3757:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":123,"src":"3806:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:0"},"scope":586,"src":"3727:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[641],"body":{"id":140,"nodeType":"Block","src":"4072:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4089:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4101:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":138,"indexExpression":{"id":137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4108:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":133,"id":139,"nodeType":"Return","src":"4082:34:0"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"3922:47:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:0","nodeType":"FunctionDefinition","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:0"},"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"owner","nameLocation":"4001:5:0","nodeType":"VariableDeclaration","scope":141,"src":"3993:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"4016:7:0","nodeType":"VariableDeclaration","scope":141,"src":"4008:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:0"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"4063:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:0"},"scope":586,"src":"3974:149:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":165,"nodeType":"Block","src":"4520:108:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4538:5:0","nodeType":"VariableDeclaration","scope":165,"src":"4530:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4546:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:0"},{"expression":{"arguments":[{"id":158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4577:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4584:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4593:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4568:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4568:32:0"},{"expression":{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":151,"id":164,"nodeType":"Return","src":"4610:11:0"}]},"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4129:297:0","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"spender","nameLocation":"4456:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4448:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"amount","nameLocation":"4473:6:0","nodeType":"VariableDeclaration","scope":166,"src":"4465:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"4514:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:0"},"scope":586,"src":"4431:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[663],"body":{"id":198,"nodeType":"Block","src":"5323:153:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"5341:7:0","nodeType":"VariableDeclaration","scope":198,"src":"5333:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5351:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5351:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:0"},{"expression":{"arguments":[{"id":185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5389:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5395:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5404:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5373:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"5373:38:0"},{"expression":{"arguments":[{"id":191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5431:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5437:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5441:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5421:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5421:27:0"},{"expression":{"hexValue":"74727565","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":178,"id":197,"nodeType":"Return","src":"5458:11:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4634:551:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:0","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:0"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"from","nameLocation":"5229:4:0","nodeType":"VariableDeclaration","scope":199,"src":"5221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"5251:2:0","nodeType":"VariableDeclaration","scope":199,"src":"5243:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"amount","nameLocation":"5271:6:0","nodeType":"VariableDeclaration","scope":199,"src":"5263:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"5317:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:0"},"scope":586,"src":"5190:286:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"5965:140:0","statements":[{"assignments":[210],"declarations":[{"constant":false,"id":210,"mutability":"mutable","name":"owner","nameLocation":"5983:5:0","nodeType":"VariableDeclaration","scope":227,"src":"5975:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5991:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:0"},{"expression":{"arguments":[{"id":215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6022:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6029:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6048:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6055:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6038:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6066:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6013:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"6013:64:0"},{"expression":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":208,"id":226,"nodeType":"Return","src":"6087:11:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5482:384:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"5906:7:0","nodeType":"VariableDeclaration","scope":228,"src":"5898:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:0","nodeType":"VariableDeclaration","scope":228,"src":"5915:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5959:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:0"},"scope":586,"src":"5871:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":268,"nodeType":"Block","src":"6691:328:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"6709:5:0","nodeType":"VariableDeclaration","scope":268,"src":"6701:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":242,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:0"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:0","nodeType":"VariableDeclaration","scope":268,"src":"6739:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"arguments":[{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6776:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6783:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6766:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6809:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":252,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6829:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"6801:85:0"},{"id":265,"nodeType":"UncheckedBlock","src":"6896:95:0","statements":[{"expression":{"arguments":[{"id":258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6929:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6936:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6945:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":261,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6964:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":257,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6920:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6920:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"6920:60:0"}]},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":237,"id":267,"nodeType":"Return","src":"7001:11:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"6111:476:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"spender","nameLocation":"6627:7:0","nodeType":"VariableDeclaration","scope":269,"src":"6619:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:0","nodeType":"VariableDeclaration","scope":269,"src":"6636:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"6685:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:0"},"scope":586,"src":"6592:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"7581:710:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7599:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"7591:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7677:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:0","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"7669:64:0"},{"expression":{"arguments":[{"id":300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7765:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7771:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7775:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7744:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"7744:38:0"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:0","nodeType":"VariableDeclaration","scope":345,"src":"7793:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":310,"initialValue":{"baseExpression":{"id":307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7815:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":309,"indexExpression":{"id":308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7825:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7848:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7863:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"7840:72:0"},{"id":332,"nodeType":"UncheckedBlock","src":"7922:273:0","statements":[{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":318,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7946:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":320,"indexExpression":{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7956:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7964:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7978:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"7946:38:0"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":326,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8161:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8171:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8178:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"8161:23:0"}]},{"eventCall":{"arguments":[{"id":334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8219:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8225:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8229:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8210:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8210:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"8205:31:0"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8267:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8273:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8277:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":339,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8247:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"8247:37:0"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"7025:443:0","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"from","nameLocation":"7509:4:0","nodeType":"VariableDeclaration","scope":346,"src":"7501:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"to","nameLocation":"7531:2:0","nodeType":"VariableDeclaration","scope":346,"src":"7523:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"amount","nameLocation":"7551:6:0","nodeType":"VariableDeclaration","scope":346,"src":"7543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"7581:0:0"},"scope":586,"src":"7473:818:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"8632:470:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8650:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8642:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"8642:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:0","typeDescriptions":{}}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8751:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8760:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8718:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"8718:49:0"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8778:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8794:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8778:22:0"},{"id":383,"nodeType":"UncheckedBlock","src":"8810:175:0","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8946:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":379,"indexExpression":{"id":378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8956:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8968:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"8946:28:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:0","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9020:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9029:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8999:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"8994:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:0","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9079:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9088:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9047:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9047:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"9047:48:0"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"8297:265:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"8590:7:0","nodeType":"VariableDeclaration","scope":403,"src":"8582:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"8607:6:0","nodeType":"VariableDeclaration","scope":403,"src":"8599:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:0"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"8632:0:0"},"scope":586,"src":"8567:535:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"9487:594:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9505:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:0","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9516:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9497:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"9497:67:0"},{"expression":{"arguments":[{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9596:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:0","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9605:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9617:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9575:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9575:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"9575:49:0"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:0","nodeType":"VariableDeclaration","scope":474,"src":"9635:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"baseExpression":{"id":432,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9660:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9670:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9696:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9714:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"9688:71:0"},{"id":455,"nodeType":"UncheckedBlock","src":"9769:194:0","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9793:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":445,"indexExpression":{"id":444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9803:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9814:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9831:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"9793:44:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"9930:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9946:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"9930:22:0"}]},{"eventCall":{"arguments":[{"id":457,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9987:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9996:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10008:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9978:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"EmitStatement","src":"9973:42:0"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"10046:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10055:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10067:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"10026:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"10026:48:0"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"9108:309:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:0","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"account","nameLocation":"9445:7:0","nodeType":"VariableDeclaration","scope":475,"src":"9437:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount","nameLocation":"9462:6:0","nodeType":"VariableDeclaration","scope":475,"src":"9454:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"9487:0:0"},"scope":586,"src":"9422:659:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"10617:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10635:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:0","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10627:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"10627:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10713:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10705:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"10705:68:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"10784:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10796:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10803:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10814:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ExpressionStatement","src":"10784:36:0"},{"eventCall":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10844:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10851:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10860:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10835:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"10830:37:0"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"10087:412:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"owner","nameLocation":"10539:5:0","nodeType":"VariableDeclaration","scope":520,"src":"10531:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"spender","nameLocation":"10562:7:0","nodeType":"VariableDeclaration","scope":520,"src":"10554:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"10587:6:0","nodeType":"VariableDeclaration","scope":520,"src":"10579:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:0"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"10617:0:0"},"scope":586,"src":"10504:370:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"11275:321:0","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:0","nodeType":"VariableDeclaration","scope":562,"src":"11285:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11322:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11329:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"11312:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11312:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11351:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11371:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11385:3:0","memberName":"max","nodeType":"MemberAccess","src":"11371:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11347:243:0","trueBody":{"id":560,"nodeType":"Block","src":"11390:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11412:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11432:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11404:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"11404:68:0"},{"id":559,"nodeType":"UncheckedBlock","src":"11486:94:0","statements":[{"expression":{"arguments":[{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11523:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11530:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11539:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11558:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11514:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11514:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"11514:51:0"}]}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"10880:270:0","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"11197:5:0","nodeType":"VariableDeclaration","scope":563,"src":"11189:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"11220:7:0","nodeType":"VariableDeclaration","scope":563,"src":"11212:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"amount","nameLocation":"11245:6:0","nodeType":"VariableDeclaration","scope":563,"src":"11237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"11275:0:0"},"scope":586,"src":"11155:441:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"12299:2:0","statements":[]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"11602:573:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:0","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"from","nameLocation":"12227:4:0","nodeType":"VariableDeclaration","scope":574,"src":"12219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"to","nameLocation":"12249:2:0","nodeType":"VariableDeclaration","scope":574,"src":"12241:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"12269:6:0","nodeType":"VariableDeclaration","scope":574,"src":"12261:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"12299:0:0"},"scope":586,"src":"12180:121:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"13007:2:0","statements":[]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"12307:577:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"from","nameLocation":"12935:4:0","nodeType":"VariableDeclaration","scope":585,"src":"12927:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12957:2:0","nodeType":"VariableDeclaration","scope":585,"src":"12949:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amount","nameLocation":"12977:6:0","nodeType":"VariableDeclaration","scope":585,"src":"12969:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"13007:0:0"},"scope":586,"src":"12889:120:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"1401:11610:0","usedErrors":[]}],"src":"105:12907:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":664,"linearizedBaseContracts":[664],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":598,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":598,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":598,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":598,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":607,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":607,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":607,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":607,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":664,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":621,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":664,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":631,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":631,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":664,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":641,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":641,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":641,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":664,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":651,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":651,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":664,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":663,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":663,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":663,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":664,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":665,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[664],"IERC20Metadata":[689]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":690,"sourceUnit":665,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":669,"name":"IERC20","nameLocations":["305:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"305:6:2"},"id":670,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":689,"linearizedBaseContracts":[689,664],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":689,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":689,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":689,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":690,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[711]},"id":712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":711,"linearizedBaseContracts":[711],"name":"Context","nameLocation":"626:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":700,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:3","memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":696,"id":699,"nodeType":"Return","src":"712:17:3"}]},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:3","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":711,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":709,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:3","memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":705,"id":708,"nodeType":"Return","src":"819:15:3"}]},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:3","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":711,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":712,"src":"608:235:3","usedErrors":[]}],"src":"86:758:3"},"id":3},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1751],"Strings":[886]},"id":887,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":713,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":887,"sourceUnit":1752,"src":"126:25:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"153:34:4","text":" @dev String operations."},"fullyImplemented":true,"id":886,"linearizedBaseContracts":[886],"name":"Strings","nameLocation":"196:7:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":718,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:4","nodeType":"VariableDeclaration","scope":886,"src":"210:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":716,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":721,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:4","nodeType":"VariableDeclaration","scope":886,"src":"270:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":719,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":768,"nodeType":"Block","src":"486:625:4","statements":[{"id":767,"nodeType":"UncheckedBlock","src":"496:609:4","statements":[{"assignments":[730],"declarations":[{"constant":false,"id":730,"mutability":"mutable","name":"length","nameLocation":"528:6:4","nodeType":"VariableDeclaration","scope":767,"src":"520:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":737,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"548:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":731,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"537:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1751_$","typeString":"type(library Math)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:4","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"537:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:4"},{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"buffer","nameLocation":"586:6:4","nodeType":"VariableDeclaration","scope":767,"src":"572:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":738,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":744,"initialValue":{"arguments":[{"id":742,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"606:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":740,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:4"},{"assignments":[746],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"ptr","nameLocation":"635:3:4","nodeType":"VariableDeclaration","scope":767,"src":"627:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":747,"nodeType":"VariableDeclarationStatement","src":"627:11:4"},{"AST":{"nodeType":"YulBlock","src":"708:67:4","statements":[{"nodeType":"YulAssignment","src":"726:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:4"},"nodeType":"YulFunctionCall","src":"745:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:4"},"nodeType":"YulFunctionCall","src":"733:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":739,"isOffset":false,"isSlot":false,"src":"737:6:4","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"753:6:4","valueSize":1},{"declaration":746,"isOffset":false,"isSlot":false,"src":"726:3:4","valueSize":1}],"id":748,"nodeType":"InlineAssembly","src":"699:76:4"},{"body":{"id":763,"nodeType":"Block","src":"801:267:4","statements":[{"expression":{"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:4","subExpression":{"id":750,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"819:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":752,"nodeType":"ExpressionStatement","src":"819:5:4"},{"AST":{"nodeType":"YulBlock","src":"902:84:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:4"},"nodeType":"YulFunctionCall","src":"942:14:4"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:4"},"nodeType":"YulFunctionCall","src":"937:30:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:4"},"nodeType":"YulFunctionCall","src":"924:44:4"},"nodeType":"YulExpressionStatement","src":"924:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":718,"isOffset":false,"isSlot":false,"src":"958:8:4","valueSize":1},{"declaration":746,"isOffset":false,"isSlot":false,"src":"932:3:4","valueSize":1},{"declaration":724,"isOffset":false,"isSlot":false,"src":"946:5:4","valueSize":1}],"id":753,"nodeType":"InlineAssembly","src":"893:93:4"},{"expression":{"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1003:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ExpressionStatement","src":"1003:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1036:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":762,"nodeType":"IfStatement","src":"1032:21:4","trueBody":{"id":761,"nodeType":"Break","src":"1048:5:4"}}]},"condition":{"hexValue":"74727565","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":764,"nodeType":"WhileStatement","src":"788:280:4"},{"expression":{"id":765,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"1088:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":728,"id":766,"nodeType":"Return","src":"1081:13:4"}]}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"320:90:4","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":769,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:4","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"441:5:4","nodeType":"VariableDeclaration","scope":769,"src":"433:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:4"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":769,"src":"471:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":726,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:4"},"scope":886,"src":"415:696:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":788,"nodeType":"Block","src":"1290:100:4","statements":[{"id":787,"nodeType":"UncheckedBlock","src":"1300:84:4","statements":[{"expression":{"arguments":[{"id":778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"1343:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"1362:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":779,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"1350:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1751_$","typeString":"type(library Math)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:4","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"1350:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[789,865,885],"referencedDeclaration":865,"src":"1331:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":776,"id":786,"nodeType":"Return","src":"1324:49:4"}]}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"1117:94:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":789,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:4","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"value","nameLocation":"1245:5:4","nodeType":"VariableDeclaration","scope":789,"src":"1237:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:4"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"1275:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":774,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:4"},"scope":886,"src":"1216:174:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"1603:347:4","statements":[{"assignments":[800],"declarations":[{"constant":false,"id":800,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:4","nodeType":"VariableDeclaration","scope":864,"src":"1613:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":799,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":809,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":804,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"1649:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":801,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:4"},{"expression":{"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":810,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1670:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":812,"indexExpression":{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":815,"nodeType":"ExpressionStatement","src":"1670:15:4"},{"expression":{"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":816,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1695:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":818,"indexExpression":{"hexValue":"31","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":821,"nodeType":"ExpressionStatement","src":"1695:15:4"},{"body":{"id":850,"nodeType":"Block","src":"1765:83:4","statements":[{"expression":{"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":836,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1779:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":838,"indexExpression":{"id":837,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1786:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":839,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"1791:8:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":843,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"1800:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":845,"nodeType":"ExpressionStatement","src":"1779:33:4"},{"expression":{"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"1826:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":849,"nodeType":"ExpressionStatement","src":"1826:11:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1753:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":851,"initializationExpression":{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"i","nameLocation":"1733:1:4","nodeType":"VariableDeclaration","scope":851,"src":"1725:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":829,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":825,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"1741:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:4"},"loopExpression":{"expression":{"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:4","subExpression":{"id":833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1762:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ExpressionStatement","src":"1760:3:4"},"nodeType":"ForStatement","src":"1720:128:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"1865:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"1857:55:4"},{"expression":{"arguments":[{"id":861,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1936:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":859,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:4","typeDescriptions":{}}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":798,"id":863,"nodeType":"Return","src":"1922:21:4"}]},"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"1396:112:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:4","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"value","nameLocation":"1542:5:4","nodeType":"VariableDeclaration","scope":865,"src":"1534:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"length","nameLocation":"1557:6:4","nodeType":"VariableDeclaration","scope":865,"src":"1549:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:4"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":865,"src":"1588:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":796,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:4"},"scope":886,"src":"1513:437:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"2175:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":878,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2220:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":876,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:4","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:4","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":881,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2228:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":873,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[789,865,885],"referencedDeclaration":865,"src":"2192:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":872,"id":883,"nodeType":"Return","src":"2185:59:4"}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"1956:141:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:4","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"addr","nameLocation":"2131:4:4","nodeType":"VariableDeclaration","scope":885,"src":"2123:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:4"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":885,"src":"2160:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":870,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:4"},"scope":886,"src":"2102:149:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":887,"src":"188:2065:4","usedErrors":[]}],"src":"101:2153:4"},"id":4},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1751]},"id":1752,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":888,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"128:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1751,"linearizedBaseContracts":[1751],"name":"Math","nameLocation":"210:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":893,"members":[{"id":890,"name":"Down","nameLocation":"245:4:5","nodeType":"EnumValue","src":"245:4:5"},{"id":891,"name":"Up","nameLocation":"287:2:5","nodeType":"EnumValue","src":"287:2:5"},{"id":892,"name":"Zero","nameLocation":"318:4:5","nodeType":"EnumValue","src":"318:4:5"}],"name":"Rounding","nameLocation":"226:8:5","nodeType":"EnumDefinition","src":"221:122:5"},{"body":{"id":910,"nodeType":"Block","src":"480:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"497:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":904,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"501:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"509:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:5","trueExpression":{"id":906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"505:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":902,"id":909,"nodeType":"Return","src":"490:20:5"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"349:59:5","text":" @dev Returns the largest of two numbers."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:5","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"a","nameLocation":"434:1:5","nodeType":"VariableDeclaration","scope":911,"src":"426:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"b","nameLocation":"445:1:5","nodeType":"VariableDeclaration","scope":911,"src":"437:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:5"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"471:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:5"},"scope":1751,"src":"413:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":928,"nodeType":"Block","src":"655:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"672:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":922,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"676:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"684:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:5","trueExpression":{"id":924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"680:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":920,"id":927,"nodeType":"Return","src":"665:20:5"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"523:60:5","text":" @dev Returns the smallest of two numbers."},"id":929,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"a","nameLocation":"609:1:5","nodeType":"VariableDeclaration","scope":929,"src":"601:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"b","nameLocation":"620:1:5","nodeType":"VariableDeclaration","scope":929,"src":"612:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:5"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":929,"src":"646:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:5"},"scope":1751,"src":"588:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":951,"nodeType":"Block","src":"876:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"931:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"935:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"941:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":944,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"945:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":938,"id":950,"nodeType":"Return","src":"923:28:5"}]},"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"698:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:5","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"a","nameLocation":"830:1:5","nodeType":"VariableDeclaration","scope":952,"src":"822:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"b","nameLocation":"841:1:5","nodeType":"VariableDeclaration","scope":952,"src":"833:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:5"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"867:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:5"},"scope":1751,"src":"805:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"1228:123:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"1316:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":966,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"1330:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"1339:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:5","trueExpression":{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":961,"id":975,"nodeType":"Return","src":"1309:35:5"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"964:188:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:5","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"a","nameLocation":"1182:1:5","nodeType":"VariableDeclaration","scope":977,"src":"1174:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"b","nameLocation":"1193:1:5","nodeType":"VariableDeclaration","scope":977,"src":"1185:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:5"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":977,"src":"1219:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:5"},"scope":1751,"src":"1157:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"1795:3797:5","statements":[{"id":1097,"nodeType":"UncheckedBlock","src":"1805:3781:5","statements":[{"assignments":[990],"declarations":[{"constant":false,"id":990,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:5","nodeType":"VariableDeclaration","scope":1097,"src":"2126:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":991,"nodeType":"VariableDeclarationStatement","src":"2126:13:5"},{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:5","nodeType":"VariableDeclaration","scope":1097,"src":"2198:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":994,"nodeType":"VariableDeclarationStatement","src":"2198:13:5"},{"AST":{"nodeType":"YulBlock","src":"2278:157:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:5"},"nodeType":"YulFunctionCall","src":"2319:6:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:5"},"nodeType":"YulFunctionCall","src":"2306:20:5"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:5","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:5"},"nodeType":"YulFunctionCall","src":"2352:9:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:5"}]},{"nodeType":"YulAssignment","src":"2378:43:5","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:5"},"nodeType":"YulFunctionCall","src":"2391:14:5"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:5"},"nodeType":"YulFunctionCall","src":"2407:13:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:5"},"nodeType":"YulFunctionCall","src":"2387:34:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":990,"isOffset":false,"isSlot":false,"src":"2343:5:5","valueSize":1},{"declaration":990,"isOffset":false,"isSlot":false,"src":"2399:5:5","valueSize":1},{"declaration":990,"isOffset":false,"isSlot":false,"src":"2414:5:5","valueSize":1},{"declaration":993,"isOffset":false,"isSlot":false,"src":"2378:5:5","valueSize":1},{"declaration":980,"isOffset":false,"isSlot":false,"src":"2313:1:5","valueSize":1},{"declaration":980,"isOffset":false,"isSlot":false,"src":"2356:1:5","valueSize":1},{"declaration":982,"isOffset":false,"isSlot":false,"src":"2316:1:5","valueSize":1},{"declaration":982,"isOffset":false,"isSlot":false,"src":"2359:1:5","valueSize":1}],"id":995,"nodeType":"InlineAssembly","src":"2269:166:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2516:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"2512:75:5","trueBody":{"id":1003,"nodeType":"Block","src":"2528:59:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2553:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1000,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"2561:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":988,"id":1002,"nodeType":"Return","src":"2546:26:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"2697:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1007,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2711:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"ExpressionStatement","src":"2689:28:5"},{"assignments":[1012],"declarations":[{"constant":false,"id":1012,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:5","nodeType":"VariableDeclaration","scope":1097,"src":"2973:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1013,"nodeType":"VariableDeclarationStatement","src":"2973:17:5"},{"AST":{"nodeType":"YulBlock","src":"3013:291:5","statements":[{"nodeType":"YulAssignment","src":"3082:38:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:5"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:5"},"nodeType":"YulFunctionCall","src":"3095:25:5"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:5"}]},{"nodeType":"YulAssignment","src":"3202:41:5","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:5"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:5"},"nodeType":"YulFunctionCall","src":"3222:20:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:5"},"nodeType":"YulFunctionCall","src":"3211:32:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:5"}]},{"nodeType":"YulAssignment","src":"3260:30:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:5"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:5"},"nodeType":"YulFunctionCall","src":"3269:21:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":984,"isOffset":false,"isSlot":false,"src":"3108:11:5","valueSize":1},{"declaration":990,"isOffset":false,"isSlot":false,"src":"3236:5:5","valueSize":1},{"declaration":990,"isOffset":false,"isSlot":false,"src":"3260:5:5","valueSize":1},{"declaration":990,"isOffset":false,"isSlot":false,"src":"3273:5:5","valueSize":1},{"declaration":993,"isOffset":false,"isSlot":false,"src":"3202:5:5","valueSize":1},{"declaration":993,"isOffset":false,"isSlot":false,"src":"3215:5:5","valueSize":1},{"declaration":1012,"isOffset":false,"isSlot":false,"src":"3082:9:5","valueSize":1},{"declaration":1012,"isOffset":false,"isSlot":false,"src":"3225:9:5","valueSize":1},{"declaration":1012,"isOffset":false,"isSlot":false,"src":"3280:9:5","valueSize":1},{"declaration":980,"isOffset":false,"isSlot":false,"src":"3102:1:5","valueSize":1},{"declaration":982,"isOffset":false,"isSlot":false,"src":"3105:1:5","valueSize":1}],"id":1014,"nodeType":"InlineAssembly","src":"3004:300:5"},{"assignments":[1016],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"twos","nameLocation":"3619:4:5","nodeType":"VariableDeclaration","scope":1097,"src":"3611:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1024,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3626:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:5","subExpression":{"id":1018,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3642:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:5"},{"AST":{"nodeType":"YulBlock","src":"3681:362:5","statements":[{"nodeType":"YulAssignment","src":"3746:37:5","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:5"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:5"},"nodeType":"YulFunctionCall","src":"3761:22:5"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:5"}]},{"nodeType":"YulAssignment","src":"3850:25:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:5"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:5"},"nodeType":"YulFunctionCall","src":"3859:16:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:5"}]},{"nodeType":"YulAssignment","src":"3990:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:5","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:5"},"nodeType":"YulFunctionCall","src":"4006:12:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:5"},"nodeType":"YulFunctionCall","src":"4002:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:5"},"nodeType":"YulFunctionCall","src":"3998:31:5"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":984,"isOffset":false,"isSlot":false,"src":"3746:11:5","valueSize":1},{"declaration":984,"isOffset":false,"isSlot":false,"src":"3765:11:5","valueSize":1},{"declaration":990,"isOffset":false,"isSlot":false,"src":"3850:5:5","valueSize":1},{"declaration":990,"isOffset":false,"isSlot":false,"src":"3863:5:5","valueSize":1},{"declaration":1016,"isOffset":false,"isSlot":false,"src":"3778:4:5","valueSize":1},{"declaration":1016,"isOffset":false,"isSlot":false,"src":"3870:4:5","valueSize":1},{"declaration":1016,"isOffset":false,"isSlot":false,"src":"3990:4:5","valueSize":1},{"declaration":1016,"isOffset":false,"isSlot":false,"src":"4013:4:5","valueSize":1},{"declaration":1016,"isOffset":false,"isSlot":false,"src":"4020:4:5","valueSize":1}],"id":1025,"nodeType":"InlineAssembly","src":"3672:371:5"},{"expression":{"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1026,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"4109:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1027,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4118:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1028,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4126:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1031,"nodeType":"ExpressionStatement","src":"4109:21:5"},{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:5","nodeType":"VariableDeclaration","scope":1097,"src":"4448:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1040,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1035,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4471:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:5"},{"expression":{"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1041,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4719:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1044,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4733:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1048,"nodeType":"ExpressionStatement","src":"4704:36:5"},{"expression":{"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1049,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4773:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4788:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1052,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1056,"nodeType":"ExpressionStatement","src":"4773:36:5"},{"expression":{"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1057,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4843:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1059,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4858:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1060,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4872:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1064,"nodeType":"ExpressionStatement","src":"4843:36:5"},{"expression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1065,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4913:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4928:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1068,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4942:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1072,"nodeType":"ExpressionStatement","src":"4913:36:5"},{"expression":{"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1073,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4983:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4998:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1076,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1080,"nodeType":"ExpressionStatement","src":"4983:36:5"},{"expression":{"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1081,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5054:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5069:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1084,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5083:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1088,"nodeType":"ExpressionStatement","src":"5054:36:5"},{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5524:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"5533:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1091,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5541:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"5524:24:5"},{"expression":{"id":1095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5569:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":988,"id":1096,"nodeType":"Return","src":"5562:13:5"}]}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"1357:305:5","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:5","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"x","nameLocation":"1700:1:5","nodeType":"VariableDeclaration","scope":1099,"src":"1692:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"y","nameLocation":"1719:1:5","nodeType":"VariableDeclaration","scope":1099,"src":"1711:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:5","nodeType":"VariableDeclaration","scope":1099,"src":"1730:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:5"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"result","nameLocation":"1787:6:5","nodeType":"VariableDeclaration","scope":1099,"src":"1779:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:5"},"scope":1751,"src":"1667:3925:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"5872:189:5","statements":[{"assignments":[1115],"declarations":[{"constant":false,"id":1115,"mutability":"mutable","name":"result","nameLocation":"5890:6:5","nodeType":"VariableDeclaration","scope":1142,"src":"5882:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1121,"initialValue":{"arguments":[{"id":1117,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5906:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1118,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"5909:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1119,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5912:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1116,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1099,1143],"referencedDeclaration":1099,"src":"5899:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"5938:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1123,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5950:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$893_$","typeString":"type(enum Math.Rounding)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":891,"src":"5950:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"src":"5938:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1127,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5972:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1128,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"5975:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1129,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5978:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1126,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1139,"nodeType":"IfStatement","src":"5934:98:5","trueBody":{"id":1138,"nodeType":"Block","src":"5996:36:5","statements":[{"expression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"6010:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ExpressionStatement","src":"6010:11:5"}]}},{"expression":{"id":1140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"6048:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1113,"id":1141,"nodeType":"Return","src":"6041:13:5"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"5598:121:5","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:5","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"x","nameLocation":"5757:1:5","nodeType":"VariableDeclaration","scope":1143,"src":"5749:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"y","nameLocation":"5776:1:5","nodeType":"VariableDeclaration","scope":1143,"src":"5768:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:5","nodeType":"VariableDeclaration","scope":1143,"src":"5787:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:5","nodeType":"VariableDeclaration","scope":1143,"src":"5816:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"typeName":{"id":1108,"nodeType":"UserDefinedTypeName","pathNode":{"id":1107,"name":"Rounding","nameLocations":["5816:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"5816:8:5"},"referencedDeclaration":893,"src":"5816:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:5"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"5863:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:5"},"scope":1751,"src":"5724:337:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1254,"nodeType":"Block","src":"6337:1585:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"6351:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1157,"nodeType":"IfStatement","src":"6347:45:5","trueBody":{"id":1156,"nodeType":"Block","src":"6359:33:5","statements":[{"expression":{"hexValue":"30","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1150,"id":1155,"nodeType":"Return","src":"6373:8:5"}]}},{"assignments":[1159],"declarations":[{"constant":false,"id":1159,"mutability":"mutable","name":"result","nameLocation":"7079:6:5","nodeType":"VariableDeclaration","scope":1254,"src":"7071:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1168,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7099:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1161,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1423,1459],"referencedDeclaration":1423,"src":"7094:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:5"},{"id":1253,"nodeType":"UncheckedBlock","src":"7508:408:5","statements":[{"expression":{"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1169,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7532:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7542:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7551:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7555:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1179,"nodeType":"ExpressionStatement","src":"7532:35:5"},{"expression":{"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7581:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7591:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7600:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7604:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1190,"nodeType":"ExpressionStatement","src":"7581:35:5"},{"expression":{"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7630:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7640:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7649:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7653:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1201,"nodeType":"ExpressionStatement","src":"7630:35:5"},{"expression":{"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7679:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7689:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7698:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7702:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1212,"nodeType":"ExpressionStatement","src":"7679:35:5"},{"expression":{"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7728:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7738:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7747:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7751:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ExpressionStatement","src":"7728:35:5"},{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7777:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7787:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7796:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7800:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1234,"nodeType":"ExpressionStatement","src":"7777:35:5"},{"expression":{"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7826:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7836:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7845:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7849:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1245,"nodeType":"ExpressionStatement","src":"7826:35:5"},{"expression":{"arguments":[{"id":1247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7886:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"7894:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7898:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1246,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"7882:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1150,"id":1252,"nodeType":"Return","src":"7875:30:5"}]}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"6067:208:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1255,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:5","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"a","nameLocation":"6302:1:5","nodeType":"VariableDeclaration","scope":1255,"src":"6294:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:5"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1255,"src":"6328:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:5"},"scope":1751,"src":"6280:1642:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"8098:161:5","statements":[{"id":1289,"nodeType":"UncheckedBlock","src":"8108:145:5","statements":[{"assignments":[1267],"declarations":[{"constant":false,"id":1267,"mutability":"mutable","name":"result","nameLocation":"8140:6:5","nodeType":"VariableDeclaration","scope":1289,"src":"8132:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1271,"initialValue":{"arguments":[{"id":1269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8154:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1268,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1255,1291],"referencedDeclaration":1255,"src":"8149:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8177:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1273,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"8187:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1274,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"8199:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$893_$","typeString":"type(enum Math.Rounding)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":891,"src":"8199:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"src":"8187:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8214:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8223:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8232:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:5","trueExpression":{"hexValue":"31","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1265,"id":1288,"nodeType":"Return","src":"8170:72:5"}]}]},"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"7928:89:5","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:5","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"a","nameLocation":"8044:1:5","nodeType":"VariableDeclaration","scope":1291,"src":"8036:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:5","nodeType":"VariableDeclaration","scope":1291,"src":"8047:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"typeName":{"id":1260,"nodeType":"UserDefinedTypeName","pathNode":{"id":1259,"name":"Rounding","nameLocations":["8047:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"8047:8:5"},"referencedDeclaration":893,"src":"8047:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:5"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"8089:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:5"},"scope":1751,"src":"8022:237:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1422,"nodeType":"Block","src":"8444:922:5","statements":[{"assignments":[1300],"declarations":[{"constant":false,"id":1300,"mutability":"mutable","name":"result","nameLocation":"8462:6:5","nodeType":"VariableDeclaration","scope":1422,"src":"8454:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1302,"initialValue":{"hexValue":"30","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:5"},{"id":1419,"nodeType":"UncheckedBlock","src":"8482:855:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8510:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1317,"nodeType":"IfStatement","src":"8506:99:5","trueBody":{"id":1316,"nodeType":"Block","src":"8528:77:5","statements":[{"expression":{"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8546:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ExpressionStatement","src":"8546:13:5"},{"expression":{"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8577:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1315,"nodeType":"ExpressionStatement","src":"8577:13:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8622:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1332,"nodeType":"IfStatement","src":"8618:96:5","trueBody":{"id":1331,"nodeType":"Block","src":"8639:75:5","statements":[{"expression":{"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8657:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1326,"nodeType":"ExpressionStatement","src":"8657:12:5"},{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8687:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ExpressionStatement","src":"8687:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8731:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1347,"nodeType":"IfStatement","src":"8727:96:5","trueBody":{"id":1346,"nodeType":"Block","src":"8748:75:5","statements":[{"expression":{"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8766:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1341,"nodeType":"ExpressionStatement","src":"8766:12:5"},{"expression":{"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8796:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1345,"nodeType":"ExpressionStatement","src":"8796:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8840:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1362,"nodeType":"IfStatement","src":"8836:96:5","trueBody":{"id":1361,"nodeType":"Block","src":"8857:75:5","statements":[{"expression":{"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8875:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1356,"nodeType":"ExpressionStatement","src":"8875:12:5"},{"expression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8905:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1360,"nodeType":"ExpressionStatement","src":"8905:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8949:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1377,"nodeType":"IfStatement","src":"8945:93:5","trueBody":{"id":1376,"nodeType":"Block","src":"8965:73:5","statements":[{"expression":{"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1371,"nodeType":"ExpressionStatement","src":"8983:11:5"},{"expression":{"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"9012:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1375,"nodeType":"ExpressionStatement","src":"9012:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9055:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1392,"nodeType":"IfStatement","src":"9051:93:5","trueBody":{"id":1391,"nodeType":"Block","src":"9071:73:5","statements":[{"expression":{"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9089:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1386,"nodeType":"ExpressionStatement","src":"9089:11:5"},{"expression":{"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"9118:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1390,"nodeType":"ExpressionStatement","src":"9118:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9161:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"nodeType":"IfStatement","src":"9157:93:5","trueBody":{"id":1406,"nodeType":"Block","src":"9177:73:5","statements":[{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9195:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"9195:11:5"},{"expression":{"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"9224:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1405,"nodeType":"ExpressionStatement","src":"9224:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9267:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"9263:64:5","trueBody":{"id":1417,"nodeType":"Block","src":"9283:44:5","statements":[{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"9301:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1416,"nodeType":"ExpressionStatement","src":"9301:11:5"}]}}]},{"expression":{"id":1420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"9353:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1298,"id":1421,"nodeType":"Return","src":"9346:13:5"}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"8265:113:5","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1423,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:5","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"8405:5:5","nodeType":"VariableDeclaration","scope":1423,"src":"8397:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:5"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1423,"src":"8435:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:5"},"scope":1751,"src":"8383:983:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1458,"nodeType":"Block","src":"9599:165:5","statements":[{"id":1457,"nodeType":"UncheckedBlock","src":"9609:149:5","statements":[{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"result","nameLocation":"9641:6:5","nodeType":"VariableDeclaration","scope":1457,"src":"9633:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1439,"initialValue":{"arguments":[{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"9655:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1436,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1423,1459],"referencedDeclaration":1423,"src":"9650:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"9682:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"9692:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1442,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"9704:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$893_$","typeString":"type(enum Math.Rounding)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":891,"src":"9704:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"src":"9692:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"9724:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"9733:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:5","trueExpression":{"hexValue":"31","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1433,"id":1456,"nodeType":"Return","src":"9675:72:5"}]}]},"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"9372:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1459,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:5","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"value","nameLocation":"9541:5:5","nodeType":"VariableDeclaration","scope":1459,"src":"9533:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:5","nodeType":"VariableDeclaration","scope":1459,"src":"9548:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"typeName":{"id":1428,"nodeType":"UserDefinedTypeName","pathNode":{"id":1427,"name":"Rounding","nameLocations":["9548:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"9548:8:5"},"referencedDeclaration":893,"src":"9548:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:5"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1459,"src":"9590:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:5"},"scope":1751,"src":"9519:245:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1587,"nodeType":"Block","src":"9951:828:5","statements":[{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"result","nameLocation":"9969:6:5","nodeType":"VariableDeclaration","scope":1587,"src":"9961:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1470,"initialValue":{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:5"},{"id":1584,"nodeType":"UncheckedBlock","src":"9989:761:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10017:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1487,"nodeType":"IfStatement","src":"10013:99:5","trueBody":{"id":1486,"nodeType":"Block","src":"10034:78:5","statements":[{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10052:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ExpressionStatement","src":"10052:15:5"},{"expression":{"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10085:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1485,"nodeType":"ExpressionStatement","src":"10085:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10129:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1504,"nodeType":"IfStatement","src":"10125:99:5","trueBody":{"id":1503,"nodeType":"Block","src":"10146:78:5","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"10164:15:5"},{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10197:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"nodeType":"ExpressionStatement","src":"10197:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10241:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1521,"nodeType":"IfStatement","src":"10237:99:5","trueBody":{"id":1520,"nodeType":"Block","src":"10258:78:5","statements":[{"expression":{"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10276:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1515,"nodeType":"ExpressionStatement","src":"10276:15:5"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10309:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1519,"nodeType":"ExpressionStatement","src":"10309:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10353:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1538,"nodeType":"IfStatement","src":"10349:96:5","trueBody":{"id":1537,"nodeType":"Block","src":"10369:76:5","statements":[{"expression":{"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10387:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ExpressionStatement","src":"10387:14:5"},{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10419:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"nodeType":"ExpressionStatement","src":"10419:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10462:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"nodeType":"IfStatement","src":"10458:96:5","trueBody":{"id":1554,"nodeType":"Block","src":"10478:76:5","statements":[{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10496:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"nodeType":"ExpressionStatement","src":"10496:14:5"},{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10528:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ExpressionStatement","src":"10528:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10571:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1572,"nodeType":"IfStatement","src":"10567:96:5","trueBody":{"id":1571,"nodeType":"Block","src":"10587:76:5","statements":[{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10605:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"nodeType":"ExpressionStatement","src":"10605:14:5"},{"expression":{"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10637:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1570,"nodeType":"ExpressionStatement","src":"10637:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10680:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10676:64:5","trueBody":{"id":1582,"nodeType":"Block","src":"10696:44:5","statements":[{"expression":{"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10714:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1581,"nodeType":"ExpressionStatement","src":"10714:11:5"}]}}]},{"expression":{"id":1585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10766:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1466,"id":1586,"nodeType":"Return","src":"10759:13:5"}]},"documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"9770:114:5","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:5","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"value","nameLocation":"9912:5:5","nodeType":"VariableDeclaration","scope":1588,"src":"9904:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:5"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"9942:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:5"},"scope":1751,"src":"9889:890:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"11014:165:5","statements":[{"id":1622,"nodeType":"UncheckedBlock","src":"11024:149:5","statements":[{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"result","nameLocation":"11056:6:5","nodeType":"VariableDeclaration","scope":1622,"src":"11048:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1604,"initialValue":{"arguments":[{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"11071:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1601,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1588,1624],"referencedDeclaration":1588,"src":"11065:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"11098:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"11108:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1607,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"11120:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$893_$","typeString":"type(enum Math.Rounding)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":891,"src":"11120:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"src":"11108:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"11139:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"11148:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:5","trueExpression":{"hexValue":"31","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1598,"id":1621,"nodeType":"Return","src":"11091:71:5"}]}]},"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"10785:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:5","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"value","nameLocation":"10956:5:5","nodeType":"VariableDeclaration","scope":1624,"src":"10948:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:5","nodeType":"VariableDeclaration","scope":1624,"src":"10963:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"typeName":{"id":1593,"nodeType":"UserDefinedTypeName","pathNode":{"id":1592,"name":"Rounding","nameLocations":["10963:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"10963:8:5"},"referencedDeclaration":893,"src":"10963:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:5"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"11005:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:5"},"scope":1751,"src":"10933:246:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"11493:600:5","statements":[{"assignments":[1633],"declarations":[{"constant":false,"id":1633,"mutability":"mutable","name":"result","nameLocation":"11511:6:5","nodeType":"VariableDeclaration","scope":1710,"src":"11503:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1635,"initialValue":{"hexValue":"30","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:5"},{"id":1707,"nodeType":"UncheckedBlock","src":"11531:533:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11559:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1650,"nodeType":"IfStatement","src":"11555:98:5","trueBody":{"id":1649,"nodeType":"Block","src":"11577:76:5","statements":[{"expression":{"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11595:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1644,"nodeType":"ExpressionStatement","src":"11595:13:5"},{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"11626:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1648,"nodeType":"ExpressionStatement","src":"11626:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11670:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1665,"nodeType":"IfStatement","src":"11666:95:5","trueBody":{"id":1664,"nodeType":"Block","src":"11687:74:5","statements":[{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11705:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1659,"nodeType":"ExpressionStatement","src":"11705:12:5"},{"expression":{"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"11735:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1663,"nodeType":"ExpressionStatement","src":"11735:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11778:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1680,"nodeType":"IfStatement","src":"11774:95:5","trueBody":{"id":1679,"nodeType":"Block","src":"11795:74:5","statements":[{"expression":{"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11813:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1674,"nodeType":"ExpressionStatement","src":"11813:12:5"},{"expression":{"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"11843:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1678,"nodeType":"ExpressionStatement","src":"11843:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11886:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1695,"nodeType":"IfStatement","src":"11882:95:5","trueBody":{"id":1694,"nodeType":"Block","src":"11903:74:5","statements":[{"expression":{"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11921:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1689,"nodeType":"ExpressionStatement","src":"11921:12:5"},{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"11951:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1693,"nodeType":"ExpressionStatement","src":"11951:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11994:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1706,"nodeType":"IfStatement","src":"11990:64:5","trueBody":{"id":1705,"nodeType":"Block","src":"12010:44:5","statements":[{"expression":{"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"12028:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1704,"nodeType":"ExpressionStatement","src":"12028:11:5"}]}}]},{"expression":{"id":1708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"12080:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1631,"id":1709,"nodeType":"Return","src":"12073:13:5"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"11185:240:5","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:5","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"value","nameLocation":"11454:5:5","nodeType":"VariableDeclaration","scope":1711,"src":"11446:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:5"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"11484:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:5"},"scope":1751,"src":"11430:663:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1749,"nodeType":"Block","src":"12329:173:5","statements":[{"id":1748,"nodeType":"UncheckedBlock","src":"12339:157:5","statements":[{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"result","nameLocation":"12371:6:5","nodeType":"VariableDeclaration","scope":1748,"src":"12363:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1727,"initialValue":{"arguments":[{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"12387:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1724,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1711,1750],"referencedDeclaration":1711,"src":"12380:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"12414:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"12424:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1730,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"12436:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$893_$","typeString":"type(enum Math.Rounding)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":891,"src":"12436:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"src":"12424:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"12457:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"12471:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:5","trueExpression":{"hexValue":"31","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1721,"id":1747,"nodeType":"Return","src":"12407:78:5"}]}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"12099:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1750,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:5","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"value","nameLocation":"12271:5:5","nodeType":"VariableDeclaration","scope":1750,"src":"12263:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:5","nodeType":"VariableDeclaration","scope":1750,"src":"12278:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"},"typeName":{"id":1716,"nodeType":"UserDefinedTypeName","pathNode":{"id":1715,"name":"Rounding","nameLocations":["12278:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"12278:8:5"},"referencedDeclaration":893,"src":"12278:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$893","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:5"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1750,"src":"12320:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:5"},"scope":1751,"src":"12247:255:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1752,"src":"202:12302:5","usedErrors":[]}],"src":"103:12402:5"},"id":5},"contracts/DAOnation.sol":{"ast":{"absolutePath":"contracts/DAOnation.sol","exportedSymbols":{"Context":[711],"DAOnation":[3321],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689],"Math":[1751],"Strings":[886]},"id":3322,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1753,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3322,"sourceUnit":887,"src":"58:51:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1755,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3322,"sourceUnit":587,"src":"111:55:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"DAOnation","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3321,"linearizedBaseContracts":[3321],"name":"DAOnation","nameLocation":"179:9:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DAOnation.dao_uri_struct","id":1762,"members":[{"constant":false,"id":1757,"mutability":"mutable","name":"dao_wallet","nameLocation":"230:10:6","nodeType":"VariableDeclaration","scope":1762,"src":"223:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1756,"name":"string","nodeType":"ElementaryTypeName","src":"223:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"dao_uri","nameLocation":"254:7:6","nodeType":"VariableDeclaration","scope":1762,"src":"247:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1758,"name":"string","nodeType":"ElementaryTypeName","src":"247:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"finished","nameLocation":"275:8:6","nodeType":"VariableDeclaration","scope":1762,"src":"268:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1760,"name":"string","nodeType":"ElementaryTypeName","src":"268:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"201:14:6","nodeType":"StructDefinition","scope":3321,"src":"194:95:6","visibility":"public"},{"canonicalName":"DAOnation.goal_uri_struct","id":1767,"members":[{"constant":false,"id":1764,"mutability":"mutable","name":"dao_id","nameLocation":"330:6:6","nodeType":"VariableDeclaration","scope":1767,"src":"323:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1763,"name":"string","nodeType":"ElementaryTypeName","src":"323:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"goal_uri","nameLocation":"350:8:6","nodeType":"VariableDeclaration","scope":1767,"src":"343:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1765,"name":"string","nodeType":"ElementaryTypeName","src":"343:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"300:15:6","nodeType":"StructDefinition","scope":3321,"src":"293:71:6","visibility":"public"},{"canonicalName":"DAOnation.ideas_uri_struct","id":1774,"members":[{"constant":false,"id":1769,"mutability":"mutable","name":"goal_id","nameLocation":"408:7:6","nodeType":"VariableDeclaration","scope":1774,"src":"401:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1768,"name":"string","nodeType":"ElementaryTypeName","src":"401:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"ideas_uri","nameLocation":"429:9:6","nodeType":"VariableDeclaration","scope":1774,"src":"422:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1770,"name":"string","nodeType":"ElementaryTypeName","src":"422:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"donation","nameLocation":"453:8:6","nodeType":"VariableDeclaration","scope":1774,"src":"445:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"377:16:6","nodeType":"StructDefinition","scope":3321,"src":"370:97:6","visibility":"public"},{"canonicalName":"DAOnation.donation_struct","id":1781,"members":[{"constant":false,"id":1776,"mutability":"mutable","name":"ideas_id","nameLocation":"510:8:6","nodeType":"VariableDeclaration","scope":1781,"src":"503:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1775,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"userid","nameLocation":"533:6:6","nodeType":"VariableDeclaration","scope":1781,"src":"525:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"donation","nameLocation":"554:8:6","nodeType":"VariableDeclaration","scope":1781,"src":"546:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"donation_struct","nameLocation":"480:15:6","nodeType":"StructDefinition","scope":3321,"src":"473:95:6","visibility":"public"},{"canonicalName":"DAOnation.smart_contract_uri_struct","id":1788,"members":[{"constant":false,"id":1783,"mutability":"mutable","name":"smart_contract_id","nameLocation":"622:17:6","nodeType":"VariableDeclaration","scope":1788,"src":"614:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"ideas_id","nameLocation":"654:8:6","nodeType":"VariableDeclaration","scope":1788,"src":"646:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"smart_contract_uri","nameLocation":"676:18:6","nodeType":"VariableDeclaration","scope":1788,"src":"669:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1786,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"smart_contract_uri_struct","nameLocation":"581:25:6","nodeType":"StructDefinition","scope":3321,"src":"574:126:6","visibility":"public"},{"canonicalName":"DAOnation.goal_ideas_votes_struct","id":1795,"members":[{"constant":false,"id":1790,"mutability":"mutable","name":"goal_id","nameLocation":"749:7:6","nodeType":"VariableDeclaration","scope":1795,"src":"742:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1789,"name":"string","nodeType":"ElementaryTypeName","src":"742:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"ideas_id","nameLocation":"770:8:6","nodeType":"VariableDeclaration","scope":1795,"src":"763:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1791,"name":"string","nodeType":"ElementaryTypeName","src":"763:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"user_id","nameLocation":"793:7:6","nodeType":"VariableDeclaration","scope":1795,"src":"785:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"711:23:6","nodeType":"StructDefinition","scope":3321,"src":"704:102:6","visibility":"public"},{"canonicalName":"DAOnation.message_struct","id":1804,"members":[{"constant":false,"id":1797,"mutability":"mutable","name":"message_id","nameLocation":"847:10:6","nodeType":"VariableDeclaration","scope":1804,"src":"839:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"ideas_id","nameLocation":"871:8:6","nodeType":"VariableDeclaration","scope":1804,"src":"864:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1798,"name":"string","nodeType":"ElementaryTypeName","src":"864:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"message","nameLocation":"893:7:6","nodeType":"VariableDeclaration","scope":1804,"src":"886:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1800,"name":"string","nodeType":"ElementaryTypeName","src":"886:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"sender","nameLocation":"914:6:6","nodeType":"VariableDeclaration","scope":1804,"src":"907:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1802,"name":"string","nodeType":"ElementaryTypeName","src":"907:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_struct","nameLocation":"817:14:6","nodeType":"StructDefinition","scope":3321,"src":"810:116:6","visibility":"public"},{"canonicalName":"DAOnation.message_read_struct","id":1813,"members":[{"constant":false,"id":1806,"mutability":"mutable","name":"message_id","nameLocation":"972:10:6","nodeType":"VariableDeclaration","scope":1813,"src":"964:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"ideas_id","nameLocation":"997:8:6","nodeType":"VariableDeclaration","scope":1813,"src":"989:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"user_id","nameLocation":"1020:7:6","nodeType":"VariableDeclaration","scope":1813,"src":"1012:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"msg_type","nameLocation":"1041:8:6","nodeType":"VariableDeclaration","scope":1813,"src":"1034:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1811,"name":"string","nodeType":"ElementaryTypeName","src":"1034:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_read_struct","nameLocation":"937:19:6","nodeType":"StructDefinition","scope":3321,"src":"930:125:6","visibility":"public"},{"canonicalName":"DAOnation.reply_struct","id":1822,"members":[{"constant":false,"id":1815,"mutability":"mutable","name":"reply_id","nameLocation":"1094:8:6","nodeType":"VariableDeclaration","scope":1822,"src":"1086:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"message_id","nameLocation":"1117:10:6","nodeType":"VariableDeclaration","scope":1822,"src":"1109:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"ideas_id","nameLocation":"1142:8:6","nodeType":"VariableDeclaration","scope":1822,"src":"1134:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"message","nameLocation":"1164:7:6","nodeType":"VariableDeclaration","scope":1822,"src":"1157:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1820,"name":"string","nodeType":"ElementaryTypeName","src":"1157:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"reply_struct","nameLocation":"1066:12:6","nodeType":"StructDefinition","scope":3321,"src":"1059:118:6","visibility":"public"},{"canonicalName":"DAOnation.UnbondingRequest","id":1827,"members":[{"constant":false,"id":1824,"mutability":"mutable","name":"completionTime","nameLocation":"1220:14:6","nodeType":"VariableDeclaration","scope":1827,"src":"1214:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1823,"name":"int64","nodeType":"ElementaryTypeName","src":"1214:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"amount","nameLocation":"1249:6:6","nodeType":"VariableDeclaration","scope":1827,"src":"1241:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1241:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingRequest","nameLocation":"1190:16:6","nodeType":"StructDefinition","scope":3321,"src":"1183:78:6","visibility":"public"},{"canonicalName":"DAOnation.join_struct","id":1834,"members":[{"constant":false,"id":1829,"mutability":"mutable","name":"daoId","nameLocation":"1300:5:6","nodeType":"VariableDeclaration","scope":1834,"src":"1293:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1828,"name":"string","nodeType":"ElementaryTypeName","src":"1293:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1831,"mutability":"mutable","name":"user_id","nameLocation":"1320:7:6","nodeType":"VariableDeclaration","scope":1834,"src":"1312:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1312:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"joined_date","nameLocation":"1341:11:6","nodeType":"VariableDeclaration","scope":1834,"src":"1334:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1832,"name":"string","nodeType":"ElementaryTypeName","src":"1334:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"join_struct","nameLocation":"1274:11:6","nodeType":"StructDefinition","scope":3321,"src":"1267:91:6","visibility":"public"},{"canonicalName":"DAOnation.user_badge_struct","id":1853,"members":[{"constant":false,"id":1836,"mutability":"mutable","name":"user_id","nameLocation":"1404:7:6","nodeType":"VariableDeclaration","scope":1853,"src":"1396:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"dao","nameLocation":"1423:3:6","nodeType":"VariableDeclaration","scope":1853,"src":"1418:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1837,"name":"bool","nodeType":"ElementaryTypeName","src":"1418:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"joined","nameLocation":"1438:6:6","nodeType":"VariableDeclaration","scope":1853,"src":"1433:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1839,"name":"bool","nodeType":"ElementaryTypeName","src":"1433:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"goal","nameLocation":"1456:4:6","nodeType":"VariableDeclaration","scope":1853,"src":"1451:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1841,"name":"bool","nodeType":"ElementaryTypeName","src":"1451:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"ideas","nameLocation":"1472:5:6","nodeType":"VariableDeclaration","scope":1853,"src":"1467:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1843,"name":"bool","nodeType":"ElementaryTypeName","src":"1467:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"vote","nameLocation":"1489:4:6","nodeType":"VariableDeclaration","scope":1853,"src":"1484:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1845,"name":"bool","nodeType":"ElementaryTypeName","src":"1484:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"donation","nameLocation":"1505:8:6","nodeType":"VariableDeclaration","scope":1853,"src":"1500:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1847,"name":"bool","nodeType":"ElementaryTypeName","src":"1500:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"comment","nameLocation":"1525:7:6","nodeType":"VariableDeclaration","scope":1853,"src":"1520:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1849,"name":"bool","nodeType":"ElementaryTypeName","src":"1520:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"reply","nameLocation":"1544:5:6","nodeType":"VariableDeclaration","scope":1853,"src":"1539:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1851,"name":"bool","nodeType":"ElementaryTypeName","src":"1539:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"user_badge_struct","nameLocation":"1371:17:6","nodeType":"StructDefinition","scope":3321,"src":"1364:191:6","visibility":"public"},{"canonicalName":"DAOnation.feed_struct","id":1862,"members":[{"constant":false,"id":1855,"mutability":"mutable","name":"feed_id","nameLocation":"1595:7:6","nodeType":"VariableDeclaration","scope":1862,"src":"1587:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1587:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"date","nameLocation":"1617:4:6","nodeType":"VariableDeclaration","scope":1862,"src":"1609:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"Type","nameLocation":"1635:4:6","nodeType":"VariableDeclaration","scope":1862,"src":"1628:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1858,"name":"string","nodeType":"ElementaryTypeName","src":"1628:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1861,"mutability":"mutable","name":"data","nameLocation":"1653:4:6","nodeType":"VariableDeclaration","scope":1862,"src":"1646:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1860,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"feed_struct","nameLocation":"1568:11:6","nodeType":"StructDefinition","scope":3321,"src":"1561:102:6","visibility":"public"},{"constant":false,"functionSelector":"7bbd582d","id":1864,"mutability":"mutable","name":"_dao_ids","nameLocation":"1682:8:6","nodeType":"VariableDeclaration","scope":3321,"src":"1667:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ec245802","id":1866,"mutability":"mutable","name":"_donations_ids","nameLocation":"1710:14:6","nodeType":"VariableDeclaration","scope":3321,"src":"1695:29:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13bf4cea","id":1868,"mutability":"mutable","name":"_goal_ids","nameLocation":"1744:9:6","nodeType":"VariableDeclaration","scope":3321,"src":"1729:24:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d3791b20","id":1870,"mutability":"mutable","name":"_ideas_ids","nameLocation":"1773:10:6","nodeType":"VariableDeclaration","scope":3321,"src":"1758:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1171b621","id":1872,"mutability":"mutable","name":"_join_ids","nameLocation":"1803:9:6","nodeType":"VariableDeclaration","scope":3321,"src":"1788:24:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b592aeb","id":1874,"mutability":"mutable","name":"_smart_contract_ids","nameLocation":"1832:19:6","nodeType":"VariableDeclaration","scope":3321,"src":"1817:34:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a797bd7","id":1876,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"1871:15:6","nodeType":"VariableDeclaration","scope":3321,"src":"1856:30:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1856:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9077007d","id":1878,"mutability":"mutable","name":"_message_ids","nameLocation":"1906:12:6","nodeType":"VariableDeclaration","scope":3321,"src":"1891:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1891:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ca013f17","id":1880,"mutability":"mutable","name":"_message_read_ids","nameLocation":"1938:17:6","nodeType":"VariableDeclaration","scope":3321,"src":"1923:32:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa2bf5d3","id":1882,"mutability":"mutable","name":"_reply_ids","nameLocation":"1975:10:6","nodeType":"VariableDeclaration","scope":3321,"src":"1960:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8ac4110c","id":1884,"mutability":"mutable","name":"_feed_ids","nameLocation":"2005:9:6","nodeType":"VariableDeclaration","scope":3321,"src":"1990:24:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27a568b9","id":1889,"mutability":"mutable","name":"_dao_uris","nameLocation":"2061:9:6","nodeType":"VariableDeclaration","scope":3321,"src":"2019:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1762_storage_$","typeString":"mapping(uint256 => struct DAOnation.dao_uri_struct)"},"typeName":{"id":1888,"keyType":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2019:34:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1762_storage_$","typeString":"mapping(uint256 => struct DAOnation.dao_uri_struct)"},"valueType":{"id":1887,"nodeType":"UserDefinedTypeName","pathNode":{"id":1886,"name":"dao_uri_struct","nameLocations":["2038:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"2038:14:6"},"referencedDeclaration":1762,"src":"2038:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_storage_ptr","typeString":"struct DAOnation.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"6ecda4ee","id":1893,"mutability":"mutable","name":"_template_uris","nameLocation":"2195:14:6","nodeType":"VariableDeclaration","scope":3321,"src":"2161:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1892,"keyType":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2161:26:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":1891,"name":"string","nodeType":"ElementaryTypeName","src":"2180:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"330b8f26","id":1898,"mutability":"mutable","name":"_joined_person","nameLocation":"2323:14:6","nodeType":"VariableDeclaration","scope":3321,"src":"2284:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$1834_storage_$","typeString":"mapping(uint256 => struct DAOnation.join_struct)"},"typeName":{"id":1897,"keyType":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2284:31:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$1834_storage_$","typeString":"mapping(uint256 => struct DAOnation.join_struct)"},"valueType":{"id":1896,"nodeType":"UserDefinedTypeName","pathNode":{"id":1895,"name":"join_struct","nameLocations":["2303:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1834,"src":"2303:11:6"},"referencedDeclaration":1834,"src":"2303:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage_ptr","typeString":"struct DAOnation.join_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f2035d4","id":1903,"mutability":"mutable","name":"_goal_uris","nameLocation":"2449:10:6","nodeType":"VariableDeclaration","scope":3321,"src":"2406:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct)"},"typeName":{"id":1902,"keyType":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2414:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2406:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct)"},"valueType":{"id":1901,"nodeType":"UserDefinedTypeName","pathNode":{"id":1900,"name":"goal_uri_struct","nameLocations":["2425:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1767,"src":"2425:15:6"},"referencedDeclaration":1767,"src":"2425:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage_ptr","typeString":"struct DAOnation.goal_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"468d0c80","id":1908,"mutability":"mutable","name":"_ideas_uris","nameLocation":"2578:11:6","nodeType":"VariableDeclaration","scope":3321,"src":"2534:55:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct)"},"typeName":{"id":1907,"keyType":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2534:36:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct)"},"valueType":{"id":1906,"nodeType":"UserDefinedTypeName","pathNode":{"id":1905,"name":"ideas_uri_struct","nameLocations":["2553:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"2553:16:6"},"referencedDeclaration":1774,"src":"2553:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage_ptr","typeString":"struct DAOnation.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"20959ed0","id":1912,"mutability":"mutable","name":"_donated","nameLocation":"2701:8:6","nodeType":"VariableDeclaration","scope":3321,"src":"2666:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1911,"keyType":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2666:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"54a9fb18","id":1917,"mutability":"mutable","name":"_feeds","nameLocation":"2818:6:6","nodeType":"VariableDeclaration","scope":3321,"src":"2779:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$1862_storage_$","typeString":"mapping(uint256 => struct DAOnation.feed_struct)"},"typeName":{"id":1916,"keyType":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2787:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2779:31:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$1862_storage_$","typeString":"mapping(uint256 => struct DAOnation.feed_struct)"},"valueType":{"id":1915,"nodeType":"UserDefinedTypeName","pathNode":{"id":1914,"name":"feed_struct","nameLocations":["2798:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"2798:11:6"},"referencedDeclaration":1862,"src":"2798:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$1862_storage_ptr","typeString":"struct DAOnation.feed_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7fc543ec","id":1922,"mutability":"mutable","name":"_donations","nameLocation":"2912:10:6","nodeType":"VariableDeclaration","scope":3321,"src":"2869:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1781_storage_$","typeString":"mapping(uint256 => struct DAOnation.donation_struct)"},"typeName":{"id":1921,"keyType":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2877:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2869:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1781_storage_$","typeString":"mapping(uint256 => struct DAOnation.donation_struct)"},"valueType":{"id":1920,"nodeType":"UserDefinedTypeName","pathNode":{"id":1919,"name":"donation_struct","nameLocations":["2888:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1781,"src":"2888:15:6"},"referencedDeclaration":1781,"src":"2888:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1781_storage_ptr","typeString":"struct DAOnation.donation_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff4a37ef","id":1927,"mutability":"mutable","name":"_smart_contracts_uris","nameLocation":"3020:21:6","nodeType":"VariableDeclaration","scope":3321,"src":"2967:74:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1788_storage_$","typeString":"mapping(uint256 => struct DAOnation.smart_contract_uri_struct)"},"typeName":{"id":1926,"keyType":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2975:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2967:45:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1788_storage_$","typeString":"mapping(uint256 => struct DAOnation.smart_contract_uri_struct)"},"valueType":{"id":1925,"nodeType":"UserDefinedTypeName","pathNode":{"id":1924,"name":"smart_contract_uri_struct","nameLocations":["2986:25:6"],"nodeType":"IdentifierPath","referencedDeclaration":1788,"src":"2986:25:6"},"referencedDeclaration":1788,"src":"2986:25:6","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1788_storage_ptr","typeString":"struct DAOnation.smart_contract_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":1932,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"3169:20:6","nodeType":"VariableDeclaration","scope":3321,"src":"3118:71:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1795_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_ideas_votes_struct)"},"typeName":{"id":1931,"keyType":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"3126:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3118:43:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1795_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_ideas_votes_struct)"},"valueType":{"id":1930,"nodeType":"UserDefinedTypeName","pathNode":{"id":1929,"name":"goal_ideas_votes_struct","nameLocations":["3137:23:6"],"nodeType":"IdentifierPath","referencedDeclaration":1795,"src":"3137:23:6"},"referencedDeclaration":1795,"src":"3137:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1795_storage_ptr","typeString":"struct DAOnation.goal_ideas_votes_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"b527d45e","id":1937,"mutability":"mutable","name":"all_messages","nameLocation":"3319:12:6","nodeType":"VariableDeclaration","scope":3321,"src":"3277:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1804_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_struct)"},"typeName":{"id":1936,"keyType":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3277:34:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1804_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_struct)"},"valueType":{"id":1935,"nodeType":"UserDefinedTypeName","pathNode":{"id":1934,"name":"message_struct","nameLocations":["3296:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1804,"src":"3296:14:6"},"referencedDeclaration":1804,"src":"3296:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1804_storage_ptr","typeString":"struct DAOnation.message_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"cace8d46","id":1942,"mutability":"mutable","name":"all_read_messages","nameLocation":"3441:17:6","nodeType":"VariableDeclaration","scope":3321,"src":"3394:64:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1813_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_read_struct)"},"typeName":{"id":1941,"keyType":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3394:39:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1813_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_read_struct)"},"valueType":{"id":1940,"nodeType":"UserDefinedTypeName","pathNode":{"id":1939,"name":"message_read_struct","nameLocations":["3413:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":1813,"src":"3413:19:6"},"referencedDeclaration":1813,"src":"3413:19:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1813_storage_ptr","typeString":"struct DAOnation.message_read_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f87a2f4","id":1947,"mutability":"mutable","name":"all_replies","nameLocation":"3576:11:6","nodeType":"VariableDeclaration","scope":3321,"src":"3536:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1822_storage_$","typeString":"mapping(uint256 => struct DAOnation.reply_struct)"},"typeName":{"id":1946,"keyType":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3536:32:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1822_storage_$","typeString":"mapping(uint256 => struct DAOnation.reply_struct)"},"valueType":{"id":1945,"nodeType":"UserDefinedTypeName","pathNode":{"id":1944,"name":"reply_struct","nameLocations":["3555:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1822,"src":"3555:12:6"},"referencedDeclaration":1822,"src":"3555:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1822_storage_ptr","typeString":"struct DAOnation.reply_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"a428a47f","id":1952,"mutability":"mutable","name":"_user_badges","nameLocation":"3689:12:6","nodeType":"VariableDeclaration","scope":3321,"src":"3644:57:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct)"},"typeName":{"id":1951,"keyType":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3644:37:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct)"},"valueType":{"id":1950,"nodeType":"UserDefinedTypeName","pathNode":{"id":1949,"name":"user_badge_struct","nameLocations":["3663:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"3663:17:6"},"referencedDeclaration":1853,"src":"3663:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage_ptr","typeString":"struct DAOnation.user_badge_struct"}}},"visibility":"public"},{"body":{"id":1993,"nodeType":"Block","src":"3898:237:6","statements":[{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1965,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3938:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1762_storage_$","typeString":"mapping(uint256 => struct DAOnation.dao_uri_struct storage ref)"}},"id":1967,"indexExpression":{"id":1966,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"3948:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3938:19:6","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_storage","typeString":"struct DAOnation.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1969,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"3975:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1970,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"3988:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3998:7:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":1968,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"3960:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$1762_storage_ptr_$","typeString":"type(struct DAOnation.dao_uri_struct storage pointer)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3960:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_memory_ptr","typeString":"struct DAOnation.dao_uri_struct memory"}},"src":"3938:68:6","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_storage","typeString":"struct DAOnation.dao_uri_struct storage ref"}},"id":1974,"nodeType":"ExpressionStatement","src":"3938:68:6"},{"expression":{"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1975,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"4013:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1977,"indexExpression":{"id":1976,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4028:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4013:24:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1978,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"4040:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4013:36:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1980,"nodeType":"ExpressionStatement","src":"4013:36:6"},{"expression":{"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1981,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"4056:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":1983,"indexExpression":{"id":1982,"name":"user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"4069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4056:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":1984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4078:3:6","memberName":"dao","nodeType":"MemberAccess","referencedDeclaration":1838,"src":"4056:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4084:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4056:32:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1987,"nodeType":"ExpressionStatement","src":"4056:32:6"},{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4095:10:6","subExpression":{"id":1988,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4095:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"nodeType":"ExpressionStatement","src":"4095:10:6"},{"expression":{"id":1991,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4121:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1964,"id":1992,"nodeType":"Return","src":"4114:15:6"}]},"functionSelector":"86ffa45b","id":1994,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"3769:10:6","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"_dao_wallet","nameLocation":"3794:11:6","nodeType":"VariableDeclaration","scope":1994,"src":"3780:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1953,"name":"string","nodeType":"ElementaryTypeName","src":"3780:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"_dao_uri","nameLocation":"3821:8:6","nodeType":"VariableDeclaration","scope":1994,"src":"3807:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1955,"name":"string","nodeType":"ElementaryTypeName","src":"3807:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"_template","nameLocation":"3845:9:6","nodeType":"VariableDeclaration","scope":1994,"src":"3831:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1957,"name":"string","nodeType":"ElementaryTypeName","src":"3831:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"user_id","nameLocation":"3864:7:6","nodeType":"VariableDeclaration","scope":1994,"src":"3856:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"3856:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3779:93:6"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1994,"src":"3889:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"3889:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3888:9:6"},"scope":3321,"src":"3760:375:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2007,"nodeType":"Block","src":"4215:48:6","statements":[{"expression":{"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2001,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"4222:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2003,"indexExpression":{"id":2002,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"4237:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4222:23:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2004,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"4248:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4222:35:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2006,"nodeType":"ExpressionStatement","src":"4222:35:6"}]},"functionSelector":"87633eb2","id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"update_template","nameLocation":"4150:15:6","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"_dao_id","nameLocation":"4174:7:6","nodeType":"VariableDeclaration","scope":2008,"src":"4166:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"4166:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"_template","nameLocation":"4197:9:6","nodeType":"VariableDeclaration","scope":2008,"src":"4183:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1997,"name":"string","nodeType":"ElementaryTypeName","src":"4183:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4165:42:6"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[],"src":"4215:0:6"},"scope":3321,"src":"4141:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2031,"nodeType":"Block","src":"4361:133:6","statements":[{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2017,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"4401:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1762_storage_$","typeString":"mapping(uint256 => struct DAOnation.dao_uri_struct storage ref)"}},"id":2019,"indexExpression":{"id":2018,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"4411:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4401:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_storage","typeString":"struct DAOnation.dao_uri_struct storage ref"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4420:10:6","memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"4401:29:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2021,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"4433:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4401:43:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2023,"nodeType":"ExpressionStatement","src":"4401:43:6"},{"expression":{"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2024,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"4451:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1762_storage_$","typeString":"mapping(uint256 => struct DAOnation.dao_uri_struct storage ref)"}},"id":2026,"indexExpression":{"id":2025,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"4461:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4451:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_storage","typeString":"struct DAOnation.dao_uri_struct storage ref"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4470:7:6","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"4451:26:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2028,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"4480:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4451:37:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2030,"nodeType":"ExpressionStatement","src":"4451:37:6"}]},"functionSelector":"881de858","id":2032,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"4278:7:6","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"_dao_id","nameLocation":"4294:7:6","nodeType":"VariableDeclaration","scope":2032,"src":"4286:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"4286:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"_dao_wallet","nameLocation":"4317:11:6","nodeType":"VariableDeclaration","scope":2032,"src":"4303:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2011,"name":"string","nodeType":"ElementaryTypeName","src":"4303:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"_dao_uri","nameLocation":"4344:8:6","nodeType":"VariableDeclaration","scope":2032,"src":"4330:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"4330:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4285:68:6"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"4361:0:6"},"scope":3321,"src":"4269:225:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2072,"nodeType":"Block","src":"4562:212:6","statements":[{"assignments":[2042],"declarations":[{"constant":false,"id":2042,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4609:10:6","nodeType":"VariableDeclaration","scope":2072,"src":"4593:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2040,"name":"string","nodeType":"ElementaryTypeName","src":"4593:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2041,"nodeType":"ArrayTypeName","src":"4593:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2048,"initialValue":{"arguments":[{"id":2046,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4635:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4622:12:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2043,"name":"string","nodeType":"ElementaryTypeName","src":"4626:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2044,"nodeType":"ArrayTypeName","src":"4626:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4593:51:6"},{"body":{"id":2068,"nodeType":"Block","src":"4690:53:6","statements":[{"expression":{"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2059,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4699:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2061,"indexExpression":{"id":2060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4710:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4699:13:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2062,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"4715:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1762_storage_$","typeString":"mapping(uint256 => struct DAOnation.dao_uri_struct storage ref)"}},"id":2064,"indexExpression":{"id":2063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4725:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4715:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_storage","typeString":"struct DAOnation.dao_uri_struct storage ref"}},"id":2065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4728:7:6","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"4715:20:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4699:36:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2067,"nodeType":"ExpressionStatement","src":"4699:36:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4671:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2054,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4675:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4671:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"initializationExpression":{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"i","nameLocation":"4664:1:6","nodeType":"VariableDeclaration","scope":2069,"src":"4656:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2052,"initialValue":{"hexValue":"30","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4668:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4656:13:6"},"loopExpression":{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4685:3:6","subExpression":{"id":2056,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4685:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"4685:3:6"},"nodeType":"ForStatement","src":"4651:92:6"},{"expression":{"id":2070,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4758:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2037,"id":2071,"nodeType":"Return","src":"4751:17:6"}]},"functionSelector":"c04fe978","id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"4509:12:6","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"4521:2:6"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2073,"src":"4545:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2034,"name":"string","nodeType":"ElementaryTypeName","src":"4545:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2035,"nodeType":"ArrayTypeName","src":"4545:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4544:17:6"},"scope":3321,"src":"4500:274:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2085,"nodeType":"Block","src":"4850:73:6","statements":[{"expression":{"expression":{"baseExpression":{"id":2080,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"4891:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1762_storage_$","typeString":"mapping(uint256 => struct DAOnation.dao_uri_struct storage ref)"}},"id":2082,"indexExpression":{"id":2081,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"4901:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4891:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_storage","typeString":"struct DAOnation.dao_uri_struct storage ref"}},"id":2083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4910:7:6","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"4891:26:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2079,"id":2084,"nodeType":"Return","src":"4884:33:6"}]},"functionSelector":"5d907da1","id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"4789:7:6","nodeType":"FunctionDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"_dao_id","nameLocation":"4805:7:6","nodeType":"VariableDeclaration","scope":2086,"src":"4797:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4796:17:6"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"4835:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2077,"name":"string","nodeType":"ElementaryTypeName","src":"4835:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4834:15:6"},"scope":3321,"src":"4780:143:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2108,"nodeType":"Block","src":"5000:108:6","statements":[{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2093,"name":"_feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5007:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$1862_storage_$","typeString":"mapping(uint256 => struct DAOnation.feed_struct storage ref)"}},"id":2095,"indexExpression":{"id":2094,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"5014:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5007:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$1862_storage","typeString":"struct DAOnation.feed_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2097,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"5039:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2098,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5050:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"5050:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2100,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"5067:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2101,"name":"feed_text","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5074:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2096,"name":"feed_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5027:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_feed_struct_$1862_storage_ptr_$","typeString":"type(struct DAOnation.feed_struct storage pointer)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5027:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$1862_memory_ptr","typeString":"struct DAOnation.feed_struct memory"}},"src":"5007:77:6","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$1862_storage","typeString":"struct DAOnation.feed_struct storage ref"}},"id":2104,"nodeType":"ExpressionStatement","src":"5007:77:6"},{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5091:11:6","subExpression":{"id":2105,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"5091:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"nodeType":"ExpressionStatement","src":"5091:11:6"}]},"functionSelector":"bda00335","id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"add_Feed","nameLocation":"4938:8:6","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"feed_text","nameLocation":"4961:9:6","nodeType":"VariableDeclaration","scope":2109,"src":"4947:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"4947:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"_type","nameLocation":"4986:5:6","nodeType":"VariableDeclaration","scope":2109,"src":"4972:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2089,"name":"string","nodeType":"ElementaryTypeName","src":"4972:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4946:46:6"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[],"src":"5000:0:6"},"scope":3321,"src":"4929:179:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2148,"nodeType":"Block","src":"5258:223:6","statements":[{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2122,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"5300:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct storage ref)"}},"id":2124,"indexExpression":{"id":2123,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"5311:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5300:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2126,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"5340:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2127,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"5349:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2125,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"5324:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$1767_storage_ptr_$","typeString":"type(struct DAOnation.goal_uri_struct storage pointer)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5324:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_memory_ptr","typeString":"struct DAOnation.goal_uri_struct memory"}},"src":"5300:59:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"id":2130,"nodeType":"ExpressionStatement","src":"5300:59:6"},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2131,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5368:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":2133,"indexExpression":{"id":2132,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"5381:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5368:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":2134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5391:4:6","memberName":"goal","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"5368:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5398:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5368:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"ExpressionStatement","src":"5368:34:6"},{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5409:11:6","subExpression":{"id":2138,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"5409:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ExpressionStatement","src":"5409:11:6"},{"expression":{"arguments":[{"id":2142,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"5436:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"676f616c","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5443:6:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef4dbb26a297ed6dbfec0a46d7ae3a5acf736a0cb97a6b9e708aed49967b12f9","typeString":"literal_string \"goal\""},"value":"goal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_ef4dbb26a297ed6dbfec0a46d7ae3a5acf736a0cb97a6b9e708aed49967b12f9","typeString":"literal_string \"goal\""}],"id":2141,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5427:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2145,"nodeType":"ExpressionStatement","src":"5427:23:6"},{"expression":{"id":2146,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"5466:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2121,"id":2147,"nodeType":"Return","src":"5459:16:6"}]},"functionSelector":"b39a38bd","id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"5134:11:6","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"_goal_uri","nameLocation":"5160:9:6","nodeType":"VariableDeclaration","scope":2149,"src":"5146:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2110,"name":"string","nodeType":"ElementaryTypeName","src":"5146:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"_dao_id","nameLocation":"5185:7:6","nodeType":"VariableDeclaration","scope":2149,"src":"5171:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2112,"name":"string","nodeType":"ElementaryTypeName","src":"5171:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"_user_id","nameLocation":"5202:8:6","nodeType":"VariableDeclaration","scope":2149,"src":"5194:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"5194:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"_feed","nameLocation":"5226:5:6","nodeType":"VariableDeclaration","scope":2149,"src":"5212:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2116,"name":"string","nodeType":"ElementaryTypeName","src":"5212:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5145:87:6"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"5249:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"5249:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5248:9:6"},"scope":3321,"src":"5125:356:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2163,"nodeType":"Block","src":"5555:74:6","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2156,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"5582:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct storage ref)"}},"id":2158,"indexExpression":{"id":2157,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"5593:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5582:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"id":2159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5603:8:6","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"5582:29:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2160,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"5614:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5582:41:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2162,"nodeType":"ExpressionStatement","src":"5582:41:6"}]},"functionSelector":"c29595c5","id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"5496:8:6","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"_goal_id","nameLocation":"5513:8:6","nodeType":"VariableDeclaration","scope":2164,"src":"5505:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"5505:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"_goal_uri","nameLocation":"5537:9:6","nodeType":"VariableDeclaration","scope":2164,"src":"5523:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2152,"name":"string","nodeType":"ElementaryTypeName","src":"5523:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5504:43:6"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[],"src":"5555:0:6"},"scope":3321,"src":"5487:142:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2204,"nodeType":"Block","src":"5698:217:6","statements":[{"assignments":[2174],"declarations":[{"constant":false,"id":2174,"mutability":"mutable","name":"_StoreInfo","nameLocation":"5746:10:6","nodeType":"VariableDeclaration","scope":2204,"src":"5730:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2172,"name":"string","nodeType":"ElementaryTypeName","src":"5730:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2173,"nodeType":"ArrayTypeName","src":"5730:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2180,"initialValue":{"arguments":[{"id":2178,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"5772:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5759:12:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2175,"name":"string","nodeType":"ElementaryTypeName","src":"5763:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2176,"nodeType":"ArrayTypeName","src":"5763:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5759:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5730:52:6"},{"body":{"id":2200,"nodeType":"Block","src":"5829:55:6","statements":[{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2191,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"5838:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2193,"indexExpression":{"id":2192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5849:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5838:13:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2194,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"5854:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct storage ref)"}},"id":2196,"indexExpression":{"id":2195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5865:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5854:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"id":2197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5868:8:6","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"5854:22:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5838:38:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2199,"nodeType":"ExpressionStatement","src":"5838:38:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5809:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2186,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"5813:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5809:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"initializationExpression":{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"i","nameLocation":"5802:1:6","nodeType":"VariableDeclaration","scope":2201,"src":"5794:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"5794:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"hexValue":"30","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5806:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5794:13:6"},"loopExpression":{"expression":{"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5824:3:6","subExpression":{"id":2188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5824:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2190,"nodeType":"ExpressionStatement","src":"5824:3:6"},"nodeType":"ForStatement","src":"5789:95:6"},{"expression":{"id":2202,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"5899:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2169,"id":2203,"nodeType":"Return","src":"5892:17:6"}]},"functionSelector":"29b56f60","id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"5644:13:6","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[],"src":"5657:2:6"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"5681:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2166,"name":"string","nodeType":"ElementaryTypeName","src":"5681:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2167,"nodeType":"ArrayTypeName","src":"5681:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5680:17:6"},"scope":3321,"src":"5635:280:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2271,"nodeType":"Block","src":"6015:374:6","statements":[{"assignments":[2217],"declarations":[{"constant":false,"id":2217,"mutability":"mutable","name":"_StoreInfo","nameLocation":"6073:10:6","nodeType":"VariableDeclaration","scope":2271,"src":"6057:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2215,"name":"string","nodeType":"ElementaryTypeName","src":"6057:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2216,"nodeType":"ArrayTypeName","src":"6057:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2223,"initialValue":{"arguments":[{"id":2221,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"6099:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6086:12:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2218,"name":"string","nodeType":"ElementaryTypeName","src":"6090:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2219,"nodeType":"ArrayTypeName","src":"6090:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6057:52:6"},{"assignments":[2225],"declarations":[{"constant":false,"id":2225,"mutability":"mutable","name":"_store_id","nameLocation":"6124:9:6","nodeType":"VariableDeclaration","scope":2271,"src":"6116:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"6116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2226,"nodeType":"VariableDeclarationStatement","src":"6116:17:6"},{"body":{"id":2267,"nodeType":"Block","src":"6180:178:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2240,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"6209:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct storage ref)"}},"id":2242,"indexExpression":{"id":2241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"6220:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6209:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"id":2243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6223:6:6","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":1764,"src":"6209:20:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6203:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2238,"name":"bytes","nodeType":"ElementaryTypeName","src":"6203:5:6","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6203:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2237,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6193:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6193:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2249,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"6251:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6245:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2247,"name":"bytes","nodeType":"ElementaryTypeName","src":"6245:5:6","typeDescriptions":{}}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6245:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2246,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6235:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6235:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6193:67:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2266,"nodeType":"IfStatement","src":"6189:162:6","trueBody":{"id":2265,"nodeType":"Block","src":"6262:89:6","statements":[{"expression":{"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2253,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"6273:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2255,"indexExpression":{"id":2254,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"6284:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6273:21:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2256,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"6297:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct storage ref)"}},"id":2258,"indexExpression":{"id":2257,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"6308:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6297:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"id":2259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6311:8:6","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"6297:22:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6273:46:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2261,"nodeType":"ExpressionStatement","src":"6273:46:6"},{"expression":{"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6330:11:6","subExpression":{"id":2262,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"6330:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2264,"nodeType":"ExpressionStatement","src":"6330:11:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"6160:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2232,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"6164:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6160:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2268,"initializationExpression":{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"i","nameLocation":"6153:1:6","nodeType":"VariableDeclaration","scope":2268,"src":"6145:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"6145:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2230,"initialValue":{"hexValue":"30","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6157:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6145:13:6"},"loopExpression":{"expression":{"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6175:3:6","subExpression":{"id":2234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"6175:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2236,"nodeType":"ExpressionStatement","src":"6175:3:6"},"nodeType":"ForStatement","src":"6140:218:6"},{"expression":{"id":2269,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"6373:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2212,"id":2270,"nodeType":"Return","src":"6366:17:6"}]},"functionSelector":"0377d44a","id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"5930:23:6","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"_dao_id","nameLocation":"5968:7:6","nodeType":"VariableDeclaration","scope":2272,"src":"5954:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2206,"name":"string","nodeType":"ElementaryTypeName","src":"5954:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5953:23:6"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"5998:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2209,"name":"string","nodeType":"ElementaryTypeName","src":"5998:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2210,"nodeType":"ArrayTypeName","src":"5998:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5997:17:6"},"scope":3321,"src":"5921:468:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2312,"nodeType":"Block","src":"6483:201:6","statements":[{"body":{"id":2308,"nodeType":"Block","src":"6560:102:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2292,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"6589:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct storage ref)"}},"id":2294,"indexExpression":{"id":2293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6600:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6589:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"id":2295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6603:8:6","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"6589:22:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6583:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2290,"name":"bytes","nodeType":"ElementaryTypeName","src":"6583:5:6","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2289,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6573:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6573:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2301,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"6633:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6627:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2299,"name":"bytes","nodeType":"ElementaryTypeName","src":"6627:5:6","typeDescriptions":{}}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6627:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2298,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6617:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6617:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6573:71:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"nodeType":"IfStatement","src":"6569:85:6","trueBody":{"expression":{"id":2305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6653:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2278,"id":2306,"nodeType":"Return","src":"6646:8:6"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6540:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2284,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"6544:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6540:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2309,"initializationExpression":{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"i","nameLocation":"6533:1:6","nodeType":"VariableDeclaration","scope":2309,"src":"6525:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6525:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2282,"initialValue":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6537:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6525:13:6"},"loopExpression":{"expression":{"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6555:3:6","subExpression":{"id":2286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6555:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2288,"nodeType":"ExpressionStatement","src":"6555:3:6"},"nodeType":"ForStatement","src":"6520:142:6"},{"expression":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6677:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2278,"id":2311,"nodeType":"Return","src":"6670:8:6"}]},"functionSelector":"1e9ac9f5","id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"6404:23:6","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"_goal_uri","nameLocation":"6442:9:6","nodeType":"VariableDeclaration","scope":2313,"src":"6428:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2273,"name":"string","nodeType":"ElementaryTypeName","src":"6428:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6427:25:6"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"6474:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"6474:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6473:9:6"},"scope":3321,"src":"6395:289:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2325,"nodeType":"Block","src":"7025:77:6","statements":[{"expression":{"expression":{"baseExpression":{"id":2320,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"7067:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct storage ref)"}},"id":2322,"indexExpression":{"id":2321,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"7078:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7067:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"id":2323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7088:8:6","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"7067:29:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2319,"id":2324,"nodeType":"Return","src":"7060:36:6"}]},"functionSelector":"e32acc1a","id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"6962:8:6","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"_goal_id","nameLocation":"6979:8:6","nodeType":"VariableDeclaration","scope":2326,"src":"6971:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"6971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6970:18:6"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2326,"src":"7010:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2317,"name":"string","nodeType":"ElementaryTypeName","src":"7010:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7009:15:6"},"scope":3321,"src":"6953:149:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2393,"nodeType":"Block","src":"7289:424:6","statements":[{"expression":{"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2342,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"7333:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2344,"indexExpression":{"id":2343,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"7345:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7333:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2346,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"7376:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2347,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"7386:10:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7398:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2345,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"7359:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$1774_storage_ptr_$","typeString":"type(struct DAOnation.ideas_uri_struct storage pointer)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7359:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_memory_ptr","typeString":"struct DAOnation.ideas_uri_struct memory"}},"src":"7333:67:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2351,"nodeType":"ExpressionStatement","src":"7333:67:6"},{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2352,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"7407:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":2354,"indexExpression":{"id":2353,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"7420:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7407:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":2355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7430:5:6","memberName":"ideas","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"7407:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7438:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7407:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"ExpressionStatement","src":"7407:35:6"},{"expression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7449:12:6","subExpression":{"id":2359,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"7449:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2361,"nodeType":"ExpressionStatement","src":"7449:12:6"},{"body":{"id":2384,"nodeType":"Block","src":"7524:128:6","statements":[{"expression":{"arguments":[{"id":2374,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"7561:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2375,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"7573:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2376,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7594:16:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2378,"indexExpression":{"id":2377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"7611:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7594:19:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2373,"name":"create_ideas_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"7533:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"ExpressionStatement","src":"7533:81:6"},{"expression":{"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7623:21:6","subExpression":{"id":2381,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"7623:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2383,"nodeType":"ExpressionStatement","src":"7623:21:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"7490:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2367,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7494:16:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7511:6:6","memberName":"length","nodeType":"MemberAccess","src":"7494:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7490:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2385,"initializationExpression":{"assignments":[2363],"declarations":[{"constant":false,"id":2363,"mutability":"mutable","name":"i","nameLocation":"7483:1:6","nodeType":"VariableDeclaration","scope":2385,"src":"7475:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"7475:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2365,"initialValue":{"hexValue":"30","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7487:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7475:13:6"},"loopExpression":{"expression":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7519:3:6","subExpression":{"id":2370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"7519:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2372,"nodeType":"ExpressionStatement","src":"7519:3:6"},"nodeType":"ForStatement","src":"7470:182:6"},{"expression":{"arguments":[{"id":2387,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"7667:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"69646561","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7674:6:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a7bf0b356c2ee2abd155803d8597e311bd7062ed4dcc25d72fbfcb126eb1e3","typeString":"literal_string \"idea\""},"value":"idea"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_d6a7bf0b356c2ee2abd155803d8597e311bd7062ed4dcc25d72fbfcb126eb1e3","typeString":"literal_string \"idea\""}],"id":2386,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"7658:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7658:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2390,"nodeType":"ExpressionStatement","src":"7658:23:6"},{"expression":{"id":2391,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"7697:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2341,"id":2392,"nodeType":"Return","src":"7690:17:6"}]},"functionSelector":"dddb6f86","id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"7128:12:6","nodeType":"FunctionDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7155:10:6","nodeType":"VariableDeclaration","scope":2394,"src":"7141:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2327,"name":"string","nodeType":"ElementaryTypeName","src":"7141:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"_goal_id","nameLocation":"7181:8:6","nodeType":"VariableDeclaration","scope":2394,"src":"7167:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2329,"name":"string","nodeType":"ElementaryTypeName","src":"7167:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"_smart_contracts","nameLocation":"7207:16:6","nodeType":"VariableDeclaration","scope":2394,"src":"7191:32:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2331,"name":"string","nodeType":"ElementaryTypeName","src":"7191:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2332,"nodeType":"ArrayTypeName","src":"7191:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"_user_id","nameLocation":"7233:8:6","nodeType":"VariableDeclaration","scope":2394,"src":"7225:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7225:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"_feed","nameLocation":"7257:5:6","nodeType":"VariableDeclaration","scope":2394,"src":"7243:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2336,"name":"string","nodeType":"ElementaryTypeName","src":"7243:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7140:123:6"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"7280:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7279:9:6"},"scope":3321,"src":"7119:594:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2413,"nodeType":"Block","src":"7842:130:6","statements":[{"expression":{"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2403,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"7849:21:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1788_storage_$","typeString":"mapping(uint256 => struct DAOnation.smart_contract_uri_struct storage ref)"}},"id":2405,"indexExpression":{"id":2404,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"7871:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7849:41:6","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1788_storage","typeString":"struct DAOnation.smart_contract_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2407,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"7919:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2408,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"7930:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2409,"name":"_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7950:15:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2406,"name":"smart_contract_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"7893:25:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_smart_contract_uri_struct_$1788_storage_ptr_$","typeString":"type(struct DAOnation.smart_contract_uri_struct storage pointer)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7893:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1788_memory_ptr","typeString":"struct DAOnation.smart_contract_uri_struct memory"}},"src":"7849:117:6","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1788_storage","typeString":"struct DAOnation.smart_contract_uri_struct storage ref"}},"id":2412,"nodeType":"ExpressionStatement","src":"7849:117:6"}]},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas_smart_contract","nameLocation":"7728:27:6","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"_ideas_id","nameLocation":"7764:9:6","nodeType":"VariableDeclaration","scope":2414,"src":"7756:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"_smart_contract_id","nameLocation":"7783:18:6","nodeType":"VariableDeclaration","scope":2414,"src":"7775:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"7775:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"_smart_contract","nameLocation":"7817:15:6","nodeType":"VariableDeclaration","scope":2414,"src":"7803:29:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2399,"name":"string","nodeType":"ElementaryTypeName","src":"7803:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:78:6"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[],"src":"7842:0:6"},"scope":3321,"src":"7719:253:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2428,"nodeType":"Block","src":"8049:58:6","statements":[{"expression":{"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2421,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"8056:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2423,"indexExpression":{"id":2422,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"8068:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8056:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8079:9:6","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"8056:32:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2425,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"8091:10:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8056:45:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2427,"nodeType":"ExpressionStatement","src":"8056:45:6"}]},"functionSelector":"c04e7430","id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"7987:9:6","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"_ideas_id","nameLocation":"8005:9:6","nodeType":"VariableDeclaration","scope":2429,"src":"7997:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"_ideas_uri","nameLocation":"8030:10:6","nodeType":"VariableDeclaration","scope":2429,"src":"8016:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2417,"name":"string","nodeType":"ElementaryTypeName","src":"8016:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7996:45:6"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[],"src":"8049:0:6"},"scope":3321,"src":"7978:129:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2486,"nodeType":"Block","src":"8247:322:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2442,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"8258:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":2444,"indexExpression":{"id":2443,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"8271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8258:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":2445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8280:8:6","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":1848,"src":"8258:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8292:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8258:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2454,"nodeType":"IfStatement","src":"8254:87:6","trueBody":{"id":2453,"nodeType":"Block","src":"8299:42:6","statements":[{"expression":{"arguments":[{"id":2449,"name":"_feed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"8317:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6261646765","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8325:7:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e3a9f11f2b764119ca635d6f294a573e14aa4219f3c85f80318b632e8f1f2ec","typeString":"literal_string \"badge\""},"value":"badge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_1e3a9f11f2b764119ca635d6f294a573e14aa4219f3c85f80318b632e8f1f2ec","typeString":"literal_string \"badge\""}],"id":2448,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"8308:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8308:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2452,"nodeType":"ExpressionStatement","src":"8308:25:6"}]}},{"expression":{"arguments":[{"id":2456,"name":"_feed2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"8356:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"646f6e6174696f6e","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8364:10:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5de029d3f5be747e56a965618431f5f83612802fba356b1700f1f9974a3eb3d6","typeString":"literal_string \"donation\""},"value":"donation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_5de029d3f5be747e56a965618431f5f83612802fba356b1700f1f9974a3eb3d6","typeString":"literal_string \"donation\""}],"id":2455,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"8347:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8347:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2459,"nodeType":"ExpressionStatement","src":"8347:28:6"},{"expression":{"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2460,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"8384:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":2462,"indexExpression":{"id":2461,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"8397:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8384:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":2463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8406:8:6","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":1848,"src":"8384:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8417:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8384:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2466,"nodeType":"ExpressionStatement","src":"8384:37:6"},{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2467,"name":"_donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"8428:8:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2469,"indexExpression":{"id":2468,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"8437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8428:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2470,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"8449:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8428:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ExpressionStatement","src":"8428:30:6"},{"expression":{"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2473,"name":"_donations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"8465:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1781_storage_$","typeString":"mapping(uint256 => struct DAOnation.donation_struct storage ref)"}},"id":2475,"indexExpression":{"id":2474,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"8476:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8465:26:6","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1781_storage","typeString":"struct DAOnation.donation_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2477,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"8510:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2478,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"8521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2479,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"8530:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2476,"name":"donation_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"8494:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_donation_struct_$1781_storage_ptr_$","typeString":"type(struct DAOnation.donation_struct storage pointer)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8494:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1781_memory_ptr","typeString":"struct DAOnation.donation_struct memory"}},"src":"8465:75:6","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1781_storage","typeString":"struct DAOnation.donation_struct storage ref"}},"id":2482,"nodeType":"ExpressionStatement","src":"8465:75:6"},{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8547:16:6","subExpression":{"id":2483,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"8547:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2485,"nodeType":"ExpressionStatement","src":"8547:16:6"}]},"functionSelector":"1fd4d664","id":2487,"implemented":true,"kind":"function","modifiers":[],"name":"add_donation","nameLocation":"8122:12:6","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"_ideas_id","nameLocation":"8149:9:6","nodeType":"VariableDeclaration","scope":2487,"src":"8135:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2430,"name":"string","nodeType":"ElementaryTypeName","src":"8135:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"_doantion","nameLocation":"8168:9:6","nodeType":"VariableDeclaration","scope":2487,"src":"8160:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"8160:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"_userid","nameLocation":"8187:7:6","nodeType":"VariableDeclaration","scope":2487,"src":"8179:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"8179:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"_feed1","nameLocation":"8210:6:6","nodeType":"VariableDeclaration","scope":2487,"src":"8196:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2436,"name":"string","nodeType":"ElementaryTypeName","src":"8196:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"_feed2","nameLocation":"8232:6:6","nodeType":"VariableDeclaration","scope":2487,"src":"8218:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2438,"name":"string","nodeType":"ElementaryTypeName","src":"8218:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8134:105:6"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[],"src":"8247:0:6"},"scope":3321,"src":"8113:456:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2523,"nodeType":"Block","src":"8691:199:6","statements":[{"expression":{"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2498,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"8698:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":2500,"indexExpression":{"id":2499,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"8711:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8698:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":2501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8719:6:6","memberName":"joined","nodeType":"MemberAccess","referencedDeclaration":1840,"src":"8698:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8728:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8698:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2504,"nodeType":"ExpressionStatement","src":"8698:34:6"},{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2505,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"8739:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$1834_storage_$","typeString":"mapping(uint256 => struct DAOnation.join_struct storage ref)"}},"id":2507,"indexExpression":{"id":2506,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"8754:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8739:25:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage","typeString":"struct DAOnation.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2509,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"8787:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2510,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"8804:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2511,"name":"joined_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"8823:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2508,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8767:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$1834_storage_ptr_$","typeString":"type(struct DAOnation.join_struct storage pointer)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8780:5:6","8795:7:6","8811:11:6"],"names":["daoId","user_id","joined_date"],"nodeType":"FunctionCall","src":"8767:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_memory_ptr","typeString":"struct DAOnation.join_struct memory"}},"src":"8739:97:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage","typeString":"struct DAOnation.join_struct storage ref"}},"id":2514,"nodeType":"ExpressionStatement","src":"8739:97:6"},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8843:11:6","subExpression":{"id":2515,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"8843:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"8843:11:6"},{"expression":{"arguments":[{"id":2519,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"8870:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6a6f696e","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8877:6:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_10dece5307d9dcd771fa36385e14096af85d5982a2225c49c0f2e7039a4a141a","typeString":"literal_string \"join\""},"value":"join"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_10dece5307d9dcd771fa36385e14096af85d5982a2225c49c0f2e7039a4a141a","typeString":"literal_string \"join\""}],"id":2518,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"8861:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8861:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2522,"nodeType":"ExpressionStatement","src":"8861:23:6"}]},"functionSelector":"7bc9724b","id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"join_community","nameLocation":"8584:14:6","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"dao_id","nameLocation":"8613:6:6","nodeType":"VariableDeclaration","scope":2524,"src":"8599:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2488,"name":"string","nodeType":"ElementaryTypeName","src":"8599:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"person","nameLocation":"8629:6:6","nodeType":"VariableDeclaration","scope":2524,"src":"8621:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"8621:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"joined_date","nameLocation":"8650:11:6","nodeType":"VariableDeclaration","scope":2524,"src":"8636:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2492,"name":"string","nodeType":"ElementaryTypeName","src":"8636:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"_feed","nameLocation":"8677:5:6","nodeType":"VariableDeclaration","scope":2524,"src":"8663:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2494,"name":"string","nodeType":"ElementaryTypeName","src":"8663:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8598:85:6"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[],"src":"8691:0:6"},"scope":3321,"src":"8575:315:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2539,"nodeType":"Block","src":"8945:97:6","statements":[{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2529,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"8952:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$1834_storage_$","typeString":"mapping(uint256 => struct DAOnation.join_struct storage ref)"}},"id":2531,"indexExpression":{"id":2530,"name":"join_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"8967:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8952:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage","typeString":"struct DAOnation.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"39393939","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8998:6:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe32a3b2d0741b26688e008e62f0d7485d93f594332891de305e30d8340f95b8","typeString":"literal_string \"9999\""},"value":"9999"},{"hexValue":"39393939","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9015:4:6","typeDescriptions":{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},"value":"9999"},{"hexValue":"","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9032:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fe32a3b2d0741b26688e008e62f0d7485d93f594332891de305e30d8340f95b8","typeString":"literal_string \"9999\""},{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2532,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8978:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$1834_storage_ptr_$","typeString":"type(struct DAOnation.join_struct storage pointer)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8991:5:6","9006:7:6","9020:11:6"],"names":["daoId","user_id","joined_date"],"nodeType":"FunctionCall","src":"8978:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_memory_ptr","typeString":"struct DAOnation.join_struct memory"}},"src":"8952:84:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage","typeString":"struct DAOnation.join_struct storage ref"}},"id":2538,"nodeType":"ExpressionStatement","src":"8952:84:6"}]},"functionSelector":"826eeefe","id":2540,"implemented":true,"kind":"function","modifiers":[],"name":"leave_community","nameLocation":"8905:15:6","nodeType":"FunctionDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"join_id","nameLocation":"8929:7:6","nodeType":"VariableDeclaration","scope":2540,"src":"8921:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"8921:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8920:17:6"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"8945:0:6"},"scope":3321,"src":"8896:146:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2591,"nodeType":"Block","src":"9139:219:6","statements":[{"body":{"id":2587,"nodeType":"Block","src":"9186:146:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2559,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"9200:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$1834_storage_$","typeString":"mapping(uint256 => struct DAOnation.join_struct storage ref)"}},"id":2561,"indexExpression":{"id":2560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"9215:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9200:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage","typeString":"struct DAOnation.join_struct storage ref"}},"id":2562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:7:6","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1831,"src":"9200:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2563,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"9229:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9200:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9199:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2569,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"9257:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$1834_storage_$","typeString":"mapping(uint256 => struct DAOnation.join_struct storage ref)"}},"id":2571,"indexExpression":{"id":2570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"9272:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9257:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage","typeString":"struct DAOnation.join_struct storage ref"}},"id":2572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9275:5:6","memberName":"daoId","nodeType":"MemberAccess","referencedDeclaration":1829,"src":"9257:23:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9251:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2567,"name":"bytes","nodeType":"ElementaryTypeName","src":"9251:5:6","typeDescriptions":{}}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9251:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2566,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9241:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9241:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2578,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"9302:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9296:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2576,"name":"bytes","nodeType":"ElementaryTypeName","src":"9296:5:6","typeDescriptions":{}}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9296:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2575,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9286:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9241:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9240:71:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9199:112:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2586,"nodeType":"IfStatement","src":"9195:129:6","trueBody":{"expression":{"hexValue":"74727565","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9320:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2548,"id":2585,"nodeType":"Return","src":"9313:11:6"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"9166:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2554,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"9170:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9166:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2588,"initializationExpression":{"assignments":[2550],"declarations":[{"constant":false,"id":2550,"mutability":"mutable","name":"i","nameLocation":"9159:1:6","nodeType":"VariableDeclaration","scope":2588,"src":"9151:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"9151:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2552,"initialValue":{"hexValue":"30","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9163:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9151:13:6"},"loopExpression":{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9181:3:6","subExpression":{"id":2556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"9181:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"9181:3:6"},"nodeType":"ForStatement","src":"9146:186:6"},{"expression":{"hexValue":"66616c7365","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9347:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2548,"id":2590,"nodeType":"Return","src":"9340:12:6"}]},"functionSelector":"a807c20e","id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"is_person_joined","nameLocation":"9057:16:6","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"dao_id","nameLocation":"9088:6:6","nodeType":"VariableDeclaration","scope":2592,"src":"9074:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2541,"name":"string","nodeType":"ElementaryTypeName","src":"9074:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"person","nameLocation":"9104:6:6","nodeType":"VariableDeclaration","scope":2592,"src":"9096:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9096:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9073:38:6"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2592,"src":"9133:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2546,"name":"bool","nodeType":"ElementaryTypeName","src":"9133:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9132:6:6"},"scope":3321,"src":"9048:310:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2643,"nodeType":"Block","src":"9461:215:6","statements":[{"body":{"id":2639,"nodeType":"Block","src":"9508:143:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2611,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"9522:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$1834_storage_$","typeString":"mapping(uint256 => struct DAOnation.join_struct storage ref)"}},"id":2613,"indexExpression":{"id":2612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9537:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9522:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage","typeString":"struct DAOnation.join_struct storage ref"}},"id":2614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9540:7:6","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1831,"src":"9522:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2615,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"9551:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9522:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9521:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2621,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"9579:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$1834_storage_$","typeString":"mapping(uint256 => struct DAOnation.join_struct storage ref)"}},"id":2623,"indexExpression":{"id":2622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9594:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9579:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$1834_storage","typeString":"struct DAOnation.join_struct storage ref"}},"id":2624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9597:5:6","memberName":"daoId","nodeType":"MemberAccess","referencedDeclaration":1829,"src":"9579:23:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9573:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2619,"name":"bytes","nodeType":"ElementaryTypeName","src":"9573:5:6","typeDescriptions":{}}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9573:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2618,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9563:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9563:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2630,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"9624:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9618:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2628,"name":"bytes","nodeType":"ElementaryTypeName","src":"9618:5:6","typeDescriptions":{}}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9618:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2627,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9608:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9608:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9563:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9562:71:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9521:112:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2638,"nodeType":"IfStatement","src":"9517:126:6","trueBody":{"expression":{"id":2636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9642:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2600,"id":2637,"nodeType":"Return","src":"9635:8:6"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9488:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2606,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"9492:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9488:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"initializationExpression":{"assignments":[2602],"declarations":[{"constant":false,"id":2602,"mutability":"mutable","name":"i","nameLocation":"9481:1:6","nodeType":"VariableDeclaration","scope":2640,"src":"9473:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"9473:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2604,"initialValue":{"hexValue":"30","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9485:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9473:13:6"},"loopExpression":{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9503:3:6","subExpression":{"id":2608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9503:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2610,"nodeType":"ExpressionStatement","src":"9503:3:6"},"nodeType":"ForStatement","src":"9468:183:6"},{"expression":{"hexValue":"39393939","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9666:4:6","typeDescriptions":{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},"value":"9999"},"functionReturnParameters":2600,"id":2642,"nodeType":"Return","src":"9659:11:6"}]},"functionSelector":"a36adb9f","id":2644,"implemented":true,"kind":"function","modifiers":[],"name":"get_person_joinedID","nameLocation":"9373:19:6","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"dao_id","nameLocation":"9407:6:6","nodeType":"VariableDeclaration","scope":2644,"src":"9393:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2593,"name":"string","nodeType":"ElementaryTypeName","src":"9393:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"person","nameLocation":"9423:6:6","nodeType":"VariableDeclaration","scope":2644,"src":"9415:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9392:38:6"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2644,"src":"9452:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:6"},"scope":3321,"src":"9364:312:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2684,"nodeType":"Block","src":"9745:221:6","statements":[{"assignments":[2654],"declarations":[{"constant":false,"id":2654,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9793:10:6","nodeType":"VariableDeclaration","scope":2684,"src":"9777:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2652,"name":"string","nodeType":"ElementaryTypeName","src":"9777:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2653,"nodeType":"ArrayTypeName","src":"9777:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2660,"initialValue":{"arguments":[{"id":2658,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"9819:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9806:12:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2655,"name":"string","nodeType":"ElementaryTypeName","src":"9810:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2656,"nodeType":"ArrayTypeName","src":"9810:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9806:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9777:53:6"},{"body":{"id":2680,"nodeType":"Block","src":"9878:57:6","statements":[{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2671,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"9887:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2673,"indexExpression":{"id":2672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"9898:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9887:13:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2674,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"9903:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2676,"indexExpression":{"id":2675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"9915:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9903:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9918:9:6","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"9903:24:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"9887:40:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2679,"nodeType":"ExpressionStatement","src":"9887:40:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"9857:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2666,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"9861:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9857:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2681,"initializationExpression":{"assignments":[2662],"declarations":[{"constant":false,"id":2662,"mutability":"mutable","name":"i","nameLocation":"9850:1:6","nodeType":"VariableDeclaration","scope":2681,"src":"9842:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"9842:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2664,"initialValue":{"hexValue":"30","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9842:13:6"},"loopExpression":{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9873:3:6","subExpression":{"id":2668,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"9873:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2670,"nodeType":"ExpressionStatement","src":"9873:3:6"},"nodeType":"ForStatement","src":"9837:98:6"},{"expression":{"id":2682,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"9950:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2649,"id":2683,"nodeType":"Return","src":"9943:17:6"}]},"functionSelector":"97ee7606","id":2685,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"9691:13:6","nodeType":"FunctionDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[],"src":"9704:2:6"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2685,"src":"9728:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2646,"name":"string","nodeType":"ElementaryTypeName","src":"9728:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2647,"nodeType":"ArrayTypeName","src":"9728:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9727:17:6"},"scope":3321,"src":"9682:284:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2750,"nodeType":"Block","src":"10069:360:6","statements":[{"assignments":[2697],"declarations":[{"constant":false,"id":2697,"mutability":"mutable","name":"_StoreInfo","nameLocation":"10128:10:6","nodeType":"VariableDeclaration","scope":2750,"src":"10112:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2695,"name":"string","nodeType":"ElementaryTypeName","src":"10112:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2696,"nodeType":"ArrayTypeName","src":"10112:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2703,"initialValue":{"arguments":[{"id":2701,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"10154:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10141:12:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2698,"name":"string","nodeType":"ElementaryTypeName","src":"10145:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2699,"nodeType":"ArrayTypeName","src":"10145:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10141:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10112:53:6"},{"assignments":[2705],"declarations":[{"constant":false,"id":2705,"mutability":"mutable","name":"_store_id","nameLocation":"10180:9:6","nodeType":"VariableDeclaration","scope":2750,"src":"10172:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"10172:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2706,"nodeType":"VariableDeclarationStatement","src":"10172:17:6"},{"body":{"id":2746,"nodeType":"Block","src":"10237:161:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2720,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"10266:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2722,"indexExpression":{"id":2721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"10278:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10266:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10281:7:6","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1769,"src":"10266:22:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10260:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2718,"name":"bytes","nodeType":"ElementaryTypeName","src":"10260:5:6","typeDescriptions":{}}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10260:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2717,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10250:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10250:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2729,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"10310:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10304:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2727,"name":"bytes","nodeType":"ElementaryTypeName","src":"10304:5:6","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10304:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2726,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10294:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10294:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10250:70:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2742,"nodeType":"IfStatement","src":"10246:124:6","trueBody":{"expression":{"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2733,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"10322:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2735,"indexExpression":{"id":2734,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"10333:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10322:21:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2736,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"10346:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2738,"indexExpression":{"id":2737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"10358:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10346:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10361:9:6","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"10346:24:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"10322:48:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2741,"nodeType":"ExpressionStatement","src":"10322:48:6"}},{"expression":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10379:11:6","subExpression":{"id":2743,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"10379:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2745,"nodeType":"ExpressionStatement","src":"10379:11:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"10216:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2712,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"10220:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10216:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"initializationExpression":{"assignments":[2708],"declarations":[{"constant":false,"id":2708,"mutability":"mutable","name":"i","nameLocation":"10209:1:6","nodeType":"VariableDeclaration","scope":2747,"src":"10201:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"10201:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2710,"initialValue":{"hexValue":"30","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10213:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10201:13:6"},"loopExpression":{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10232:3:6","subExpression":{"id":2714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"10232:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2716,"nodeType":"ExpressionStatement","src":"10232:3:6"},"nodeType":"ForStatement","src":"10196:202:6"},{"expression":{"id":2748,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"10413:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2692,"id":2749,"nodeType":"Return","src":"10406:17:6"}]},"functionSelector":"829a5d98","id":2751,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"9981:24:6","nodeType":"FunctionDefinition","parameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"_goal_id","nameLocation":"10021:8:6","nodeType":"VariableDeclaration","scope":2751,"src":"10006:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2686,"name":"string","nodeType":"ElementaryTypeName","src":"10006:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10005:25:6"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2751,"src":"10052:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2689,"name":"string","nodeType":"ElementaryTypeName","src":"10052:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2690,"nodeType":"ArrayTypeName","src":"10052:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"10051:17:6"},"scope":3321,"src":"9972:457:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2791,"nodeType":"Block","src":"10526:206:6","statements":[{"body":{"id":2787,"nodeType":"Block","src":"10605:105:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2771,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"10634:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2773,"indexExpression":{"id":2772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"10646:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10634:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10649:9:6","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"10634:24:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10628:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2769,"name":"bytes","nodeType":"ElementaryTypeName","src":"10628:5:6","typeDescriptions":{}}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2768,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10618:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10618:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2780,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"10680:10:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10674:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"10674:5:6","typeDescriptions":{}}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10674:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2777,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10664:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10664:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10618:74:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2786,"nodeType":"IfStatement","src":"10614:88:6","trueBody":{"expression":{"id":2784,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"10701:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2757,"id":2785,"nodeType":"Return","src":"10694:8:6"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"10584:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2763,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"10588:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10584:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2788,"initializationExpression":{"assignments":[2759],"declarations":[{"constant":false,"id":2759,"mutability":"mutable","name":"i","nameLocation":"10577:1:6","nodeType":"VariableDeclaration","scope":2788,"src":"10569:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"10569:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2761,"initialValue":{"hexValue":"30","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10569:13:6"},"loopExpression":{"expression":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10600:3:6","subExpression":{"id":2765,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"10600:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2767,"nodeType":"ExpressionStatement","src":"10600:3:6"},"nodeType":"ForStatement","src":"10564:146:6"},{"expression":{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10725:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2757,"id":2790,"nodeType":"Return","src":"10718:8:6"}]},"functionSelector":"a1ca9178","id":2792,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"10444:25:6","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"_ideas_uri","nameLocation":"10484:10:6","nodeType":"VariableDeclaration","scope":2792,"src":"10470:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2752,"name":"string","nodeType":"ElementaryTypeName","src":"10470:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10469:26:6"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"10517:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"10517:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10516:9:6"},"scope":3321,"src":"10435:297:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2835,"nodeType":"Block","src":"10836:228:6","statements":[{"body":{"id":2831,"nodeType":"Block","src":"10915:126:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2812,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"10944:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2814,"indexExpression":{"id":2813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10956:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10944:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10959:9:6","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"10944:24:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10938:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2810,"name":"bytes","nodeType":"ElementaryTypeName","src":"10938:5:6","typeDescriptions":{}}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10938:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2809,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10928:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10928:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2821,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"10990:10:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10984:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2819,"name":"bytes","nodeType":"ElementaryTypeName","src":"10984:5:6","typeDescriptions":{}}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10984:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2818,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10974:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10974:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10928:74:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2830,"nodeType":"IfStatement","src":"10924:109:6","trueBody":{"expression":{"expression":{"baseExpression":{"id":2825,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"11011:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2827,"indexExpression":{"id":2826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"11023:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11011:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11026:7:6","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1769,"src":"11011:22:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2798,"id":2829,"nodeType":"Return","src":"11004:29:6"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10894:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2804,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"10898:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2832,"initializationExpression":{"assignments":[2800],"declarations":[{"constant":false,"id":2800,"mutability":"mutable","name":"i","nameLocation":"10887:1:6","nodeType":"VariableDeclaration","scope":2832,"src":"10879:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"10879:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2802,"initialValue":{"hexValue":"30","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10879:13:6"},"loopExpression":{"expression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10910:3:6","subExpression":{"id":2806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10910:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2808,"nodeType":"ExpressionStatement","src":"10910:3:6"},"nodeType":"ForStatement","src":"10874:167:6"},{"expression":{"hexValue":"","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11056:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2798,"id":2834,"nodeType":"Return","src":"11049:9:6"}]},"functionSelector":"aa4cdf2a","id":2836,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"10747:26:6","nodeType":"FunctionDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"_ideas_uri","nameLocation":"10788:10:6","nodeType":"VariableDeclaration","scope":2836,"src":"10774:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2793,"name":"string","nodeType":"ElementaryTypeName","src":"10774:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10773:26:6"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2836,"src":"10821:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"10821:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10820:15:6"},"scope":3321,"src":"10738:326:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2848,"nodeType":"Block","src":"11144:81:6","statements":[{"expression":{"expression":{"baseExpression":{"id":2843,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"11187:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":2845,"indexExpression":{"id":2844,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"11199:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11187:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"id":2846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11210:9:6","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"11187:32:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2842,"id":2847,"nodeType":"Return","src":"11180:39:6"}]},"functionSelector":"8d3d2595","id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"11079:9:6","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"_ideas_id","nameLocation":"11097:9:6","nodeType":"VariableDeclaration","scope":2849,"src":"11089:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"11089:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11088:19:6"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2849,"src":"11129:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2840,"name":"string","nodeType":"ElementaryTypeName","src":"11129:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11128:15:6"},"scope":3321,"src":"11070:155:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2894,"nodeType":"Block","src":"11402:310:6","statements":[{"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2864,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"11409:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":2866,"indexExpression":{"id":2865,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"11422:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11409:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":2867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11432:4:6","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"11409:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11439:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11409:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2870,"nodeType":"ExpressionStatement","src":"11409:34:6"},{"expression":{"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2871,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"11496:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1795_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_ideas_votes_struct storage ref)"}},"id":2873,"indexExpression":{"id":2872,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"11517:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11496:37:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1795_storage","typeString":"struct DAOnation.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2875,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"11560:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2876,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"11570:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2877,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"11581:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2874,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"11536:23:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$1795_storage_ptr_$","typeString":"type(struct DAOnation.goal_ideas_votes_struct storage pointer)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11536:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1795_memory_ptr","typeString":"struct DAOnation.goal_ideas_votes_struct memory"}},"src":"11496:94:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1795_storage","typeString":"struct DAOnation.goal_ideas_votes_struct storage ref"}},"id":2880,"nodeType":"ExpressionStatement","src":"11496:94:6"},{"expression":{"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11597:17:6","subExpression":{"id":2881,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"11597:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2883,"nodeType":"ExpressionStatement","src":"11597:17:6"},{"condition":{"id":2884,"name":"feed_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"11625:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"nodeType":"IfStatement","src":"11621:55:6","trueBody":{"id":2890,"nodeType":"Block","src":"11634:42:6","statements":[{"expression":{"arguments":[{"id":2886,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"11654:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"766f7465","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11661:6:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0932bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41","typeString":"literal_string \"vote\""},"value":"vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_0932bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41","typeString":"literal_string \"vote\""}],"id":2885,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"11645:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11645:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"ExpressionStatement","src":"11645:23:6"}]}},{"expression":{"id":2892,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"11691:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2863,"id":2893,"nodeType":"Return","src":"11684:22:6"}]},"functionSelector":"89e93784","id":2895,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"11251:22:6","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"_goal_id","nameLocation":"11288:8:6","nodeType":"VariableDeclaration","scope":2895,"src":"11274:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2850,"name":"string","nodeType":"ElementaryTypeName","src":"11274:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2853,"mutability":"mutable","name":"_ideas_id","nameLocation":"11312:9:6","nodeType":"VariableDeclaration","scope":2895,"src":"11298:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2852,"name":"string","nodeType":"ElementaryTypeName","src":"11298:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"_user_id","nameLocation":"11331:8:6","nodeType":"VariableDeclaration","scope":2895,"src":"11323:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"11323:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2857,"mutability":"mutable","name":"_feed","nameLocation":"11355:5:6","nodeType":"VariableDeclaration","scope":2895,"src":"11341:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2856,"name":"string","nodeType":"ElementaryTypeName","src":"11341:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"feed_add","nameLocation":"11367:8:6","nodeType":"VariableDeclaration","scope":2895,"src":"11361:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2858,"name":"bool","nodeType":"ElementaryTypeName","src":"11361:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11273:103:6"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2895,"src":"11393:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11392:9:6"},"scope":3321,"src":"11242:470:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2931,"nodeType":"Block","src":"11868:234:6","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2908,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"11875:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":2910,"indexExpression":{"id":2909,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"11888:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11875:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":2911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11898:7:6","memberName":"comment","nodeType":"MemberAccess","referencedDeclaration":1850,"src":"11875:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11908:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11875:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2914,"nodeType":"ExpressionStatement","src":"11875:37:6"},{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2915,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"11960:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1804_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_struct storage ref)"}},"id":2917,"indexExpression":{"id":2916,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"11973:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11960:26:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1804_storage","typeString":"struct DAOnation.message_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2919,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"12004:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2920,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"12018:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2921,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"12029:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2922,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"12039:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2918,"name":"message_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"11989:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_struct_$1804_storage_ptr_$","typeString":"type(struct DAOnation.message_struct storage pointer)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1804_memory_ptr","typeString":"struct DAOnation.message_struct memory"}},"src":"11960:87:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1804_storage","typeString":"struct DAOnation.message_struct storage ref"}},"id":2925,"nodeType":"ExpressionStatement","src":"11960:87:6"},{"expression":{"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12054:14:6","subExpression":{"id":2926,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"12054:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2928,"nodeType":"ExpressionStatement","src":"12054:14:6"},{"expression":{"id":2929,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"12084:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2907,"id":2930,"nodeType":"Return","src":"12077:19:6"}]},"functionSelector":"ca982104","id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"sendMsg","nameLocation":"11745:7:6","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"_ideas_id","nameLocation":"11767:9:6","nodeType":"VariableDeclaration","scope":2932,"src":"11753:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2896,"name":"string","nodeType":"ElementaryTypeName","src":"11753:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"_message","nameLocation":"11792:8:6","nodeType":"VariableDeclaration","scope":2932,"src":"11778:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2898,"name":"string","nodeType":"ElementaryTypeName","src":"11778:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"_sender","nameLocation":"11816:7:6","nodeType":"VariableDeclaration","scope":2932,"src":"11802:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2900,"name":"string","nodeType":"ElementaryTypeName","src":"11802:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"_user_id","nameLocation":"11833:8:6","nodeType":"VariableDeclaration","scope":2932,"src":"11825:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"11825:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11752:90:6"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2932,"src":"11859:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"11859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11858:9:6"},"scope":3321,"src":"11736:366:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2998,"nodeType":"Block","src":"12190:420:6","statements":[{"assignments":[2944],"declarations":[{"constant":false,"id":2944,"mutability":"mutable","name":"_All_Ideas_Messages","nameLocation":"12257:19:6","nodeType":"VariableDeclaration","scope":2998,"src":"12240:36:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"12240:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2943,"nodeType":"ArrayTypeName","src":"12240:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2950,"initialValue":{"arguments":[{"id":2948,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"12293:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12279:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"12283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2946,"nodeType":"ArrayTypeName","src":"12283:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12279:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12240:66:6"},{"assignments":[2952],"declarations":[{"constant":false,"id":2952,"mutability":"mutable","name":"_msg_id","nameLocation":"12321:7:6","nodeType":"VariableDeclaration","scope":2998,"src":"12313:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"12313:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2953,"nodeType":"VariableDeclarationStatement","src":"12313:15:6"},{"body":{"id":2994,"nodeType":"Block","src":"12378:192:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2967,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"12407:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1804_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_struct storage ref)"}},"id":2969,"indexExpression":{"id":2968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12420:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12407:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1804_storage","typeString":"struct DAOnation.message_struct storage ref"}},"id":2970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12423:8:6","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1799,"src":"12407:24:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2965,"name":"bytes","nodeType":"ElementaryTypeName","src":"12401:5:6","typeDescriptions":{}}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12391:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12391:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2976,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"12453:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12447:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2974,"name":"bytes","nodeType":"ElementaryTypeName","src":"12447:5:6","typeDescriptions":{}}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12447:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2973,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12437:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12437:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12391:72:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2993,"nodeType":"IfStatement","src":"12387:176:6","trueBody":{"id":2992,"nodeType":"Block","src":"12465:98:6","statements":[{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2980,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"12476:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2982,"indexExpression":{"id":2981,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"12496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12476:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2983,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"12507:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1804_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_struct storage ref)"}},"id":2985,"indexExpression":{"id":2984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12520:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12507:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1804_storage","typeString":"struct DAOnation.message_struct storage ref"}},"id":2986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12523:10:6","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1797,"src":"12507:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12476:57:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ExpressionStatement","src":"12476:57:6"},{"expression":{"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12544:9:6","subExpression":{"id":2989,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"12544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"nodeType":"ExpressionStatement","src":"12544:9:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12355:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2959,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"12359:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12355:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2995,"initializationExpression":{"assignments":[2955],"declarations":[{"constant":false,"id":2955,"mutability":"mutable","name":"i","nameLocation":"12348:1:6","nodeType":"VariableDeclaration","scope":2995,"src":"12340:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"12340:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2957,"initialValue":{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12352:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12340:13:6"},"loopExpression":{"expression":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12373:3:6","subExpression":{"id":2961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12373:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2963,"nodeType":"ExpressionStatement","src":"12373:3:6"},"nodeType":"ForStatement","src":"12335:235:6"},{"expression":{"id":2996,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"12585:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2939,"id":2997,"nodeType":"Return","src":"12578:26:6"}]},"functionSelector":"42f78f47","id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"getMsgIDs","nameLocation":"12117:9:6","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"ideas_id","nameLocation":"12141:8:6","nodeType":"VariableDeclaration","scope":2999,"src":"12127:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2933,"name":"string","nodeType":"ElementaryTypeName","src":"12127:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12126:24:6"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2999,"src":"12172:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"12172:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2937,"nodeType":"ArrayTypeName","src":"12172:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12171:18:6"},"scope":3321,"src":"12108:502:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3035,"nodeType":"Block","src":"12738:217:6","statements":[{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3012,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"12745:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$1853_storage_$","typeString":"mapping(uint256 => struct DAOnation.user_badge_struct storage ref)"}},"id":3014,"indexExpression":{"id":3013,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12758:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12745:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$1853_storage","typeString":"struct DAOnation.user_badge_struct storage ref"}},"id":3015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12767:5:6","memberName":"reply","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"12745:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12775:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12745:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3018,"nodeType":"ExpressionStatement","src":"12745:34:6"},{"expression":{"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3019,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"12823:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1822_storage_$","typeString":"mapping(uint256 => struct DAOnation.reply_struct storage ref)"}},"id":3021,"indexExpression":{"id":3020,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"12835:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12823:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1822_storage","typeString":"struct DAOnation.reply_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3023,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"12862:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3024,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"12874:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3025,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"12887:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3026,"name":"_reply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"12897:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3022,"name":"reply_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"12849:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_reply_struct_$1822_storage_ptr_$","typeString":"type(struct DAOnation.reply_struct storage pointer)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12849:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1822_memory_ptr","typeString":"struct DAOnation.reply_struct memory"}},"src":"12823:81:6","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1822_storage","typeString":"struct DAOnation.reply_struct storage ref"}},"id":3029,"nodeType":"ExpressionStatement","src":"12823:81:6"},{"expression":{"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12911:12:6","subExpression":{"id":3030,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"12911:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3032,"nodeType":"ExpressionStatement","src":"12911:12:6"},{"expression":{"id":3033,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"12939:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3011,"id":3034,"nodeType":"Return","src":"12932:17:6"}]},"functionSelector":"d9fc52db","id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"sendReply","nameLocation":"12625:9:6","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"_message_id","nameLocation":"12643:11:6","nodeType":"VariableDeclaration","scope":3036,"src":"12635:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"12635:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"_reply","nameLocation":"12670:6:6","nodeType":"VariableDeclaration","scope":3036,"src":"12656:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3002,"name":"string","nodeType":"ElementaryTypeName","src":"12656:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"ideas_id","nameLocation":"12686:8:6","nodeType":"VariableDeclaration","scope":3036,"src":"12678:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"12678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"_userid","nameLocation":"12704:7:6","nodeType":"VariableDeclaration","scope":3036,"src":"12696:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"12696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12634:78:6"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3036,"src":"12729:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"12729:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12728:9:6"},"scope":3321,"src":"12616:339:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3092,"nodeType":"Block","src":"13041:389:6","statements":[{"assignments":[3048],"declarations":[{"constant":false,"id":3048,"mutability":"mutable","name":"_All_Messages_Replys","nameLocation":"13108:20:6","nodeType":"VariableDeclaration","scope":3092,"src":"13091:37:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"13091:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ArrayTypeName","src":"13091:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3054,"initialValue":{"arguments":[{"id":3052,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"13145:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13131:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"13135:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3050,"nodeType":"ArrayTypeName","src":"13135:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13131:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13091:65:6"},{"assignments":[3056],"declarations":[{"constant":false,"id":3056,"mutability":"mutable","name":"_reply_id","nameLocation":"13171:9:6","nodeType":"VariableDeclaration","scope":3092,"src":"13163:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"13163:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3057,"nodeType":"VariableDeclarationStatement","src":"13163:17:6"},{"body":{"id":3088,"nodeType":"Block","src":"13228:161:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3068,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"13241:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1822_storage_$","typeString":"mapping(uint256 => struct DAOnation.reply_struct storage ref)"}},"id":3070,"indexExpression":{"id":3069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"13253:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13241:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1822_storage","typeString":"struct DAOnation.reply_struct storage ref"}},"id":3071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13256:10:6","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1817,"src":"13241:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3072,"name":"message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"13270:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13241:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3087,"nodeType":"IfStatement","src":"13237:145:6","trueBody":{"id":3086,"nodeType":"Block","src":"13282:100:6","statements":[{"expression":{"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3074,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"13293:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3076,"indexExpression":{"id":3075,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"13314:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13293:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3077,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"13327:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1822_storage_$","typeString":"mapping(uint256 => struct DAOnation.reply_struct storage ref)"}},"id":3079,"indexExpression":{"id":3078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"13339:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13327:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1822_storage","typeString":"struct DAOnation.reply_struct storage ref"}},"id":3080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13342:8:6","memberName":"reply_id","nodeType":"MemberAccess","referencedDeclaration":1815,"src":"13327:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13293:57:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3082,"nodeType":"ExpressionStatement","src":"13293:57:6"},{"expression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13361:11:6","subExpression":{"id":3083,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"13361:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3085,"nodeType":"ExpressionStatement","src":"13361:11:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"13207:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3063,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"13211:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13207:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3089,"initializationExpression":{"assignments":[3059],"declarations":[{"constant":false,"id":3059,"mutability":"mutable","name":"i","nameLocation":"13200:1:6","nodeType":"VariableDeclaration","scope":3089,"src":"13192:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"13192:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3061,"initialValue":{"hexValue":"30","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13204:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13192:13:6"},"loopExpression":{"expression":{"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13223:3:6","subExpression":{"id":3065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"13223:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3067,"nodeType":"ExpressionStatement","src":"13223:3:6"},"nodeType":"ForStatement","src":"13187:202:6"},{"expression":{"id":3090,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"13404:20:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3043,"id":3091,"nodeType":"Return","src":"13397:27:6"}]},"functionSelector":"812fae1f","id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"getReplyIDs","nameLocation":"12970:11:6","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"message_id","nameLocation":"12990:10:6","nodeType":"VariableDeclaration","scope":3093,"src":"12982:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"12982:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12981:20:6"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3093,"src":"13023:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"13023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3041,"nodeType":"ArrayTypeName","src":"13023:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13022:18:6"},"scope":3321,"src":"12961:469:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3122,"nodeType":"Block","src":"13563:214:6","statements":[{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3106,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"13611:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1813_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_read_struct storage ref)"}},"id":3108,"indexExpression":{"id":3107,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"13629:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13611:36:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1813_storage","typeString":"struct DAOnation.message_read_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3110,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"13670:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3111,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"13683:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3112,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"13694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3113,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"13703:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3109,"name":"message_read_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"13650:19:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_read_struct_$1813_storage_ptr_$","typeString":"type(struct DAOnation.message_read_struct storage pointer)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1813_memory_ptr","typeString":"struct DAOnation.message_read_struct memory"}},"src":"13611:101:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1813_storage","typeString":"struct DAOnation.message_read_struct storage ref"}},"id":3116,"nodeType":"ExpressionStatement","src":"13611:101:6"},{"expression":{"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13719:19:6","subExpression":{"id":3117,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"13719:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3119,"nodeType":"ExpressionStatement","src":"13719:19:6"},{"expression":{"id":3120,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"13754:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3105,"id":3121,"nodeType":"Return","src":"13747:24:6"}]},"functionSelector":"934c5f00","id":3123,"implemented":true,"kind":"function","modifiers":[],"name":"sendReadMsg","nameLocation":"13445:11:6","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"_message_id","nameLocation":"13465:11:6","nodeType":"VariableDeclaration","scope":3123,"src":"13457:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"13457:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"_ideas_id","nameLocation":"13486:9:6","nodeType":"VariableDeclaration","scope":3123,"src":"13478:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"13478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"_wallet","nameLocation":"13505:7:6","nodeType":"VariableDeclaration","scope":3123,"src":"13497:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"13497:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"msg_type","nameLocation":"13528:8:6","nodeType":"VariableDeclaration","scope":3123,"src":"13514:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3100,"name":"string","nodeType":"ElementaryTypeName","src":"13514:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13456:81:6"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3123,"src":"13554:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"13554:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13553:9:6"},"scope":3321,"src":"13436:341:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3179,"nodeType":"Block","src":"13875:285:6","statements":[{"assignments":[3133],"declarations":[{"constant":false,"id":3133,"mutability":"mutable","name":"read","nameLocation":"13887:4:6","nodeType":"VariableDeclaration","scope":3179,"src":"13882:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3132,"name":"bool","nodeType":"ElementaryTypeName","src":"13882:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3135,"initialValue":{"hexValue":"66616c7365","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13894:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"13882:17:6"},{"body":{"id":3175,"nodeType":"Block","src":"13954:181:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3146,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"13967:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1813_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_read_struct storage ref)"}},"id":3148,"indexExpression":{"id":3147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13985:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13967:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1813_storage","typeString":"struct DAOnation.message_read_struct storage ref"}},"id":3149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13988:10:6","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1806,"src":"13967:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3150,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"14002:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13967:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3155,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"14033:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14027:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3153,"name":"bytes","nodeType":"ElementaryTypeName","src":"14027:5:6","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14027:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3152,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14017:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14017:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3161,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"14063:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1813_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_read_struct storage ref)"}},"id":3163,"indexExpression":{"id":3162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"14081:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14063:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1813_storage","typeString":"struct DAOnation.message_read_struct storage ref"}},"id":3164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14084:8:6","memberName":"msg_type","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"14063:29:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14057:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3159,"name":"bytes","nodeType":"ElementaryTypeName","src":"14057:5:6","typeDescriptions":{}}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14057:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3158,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14047:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14017:77:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13967:127:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3174,"nodeType":"IfStatement","src":"13963:165:6","trueBody":{"id":3173,"nodeType":"Block","src":"14096:32:6","statements":[{"expression":{"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3169,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"14107:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14114:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14107:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3172,"nodeType":"ExpressionStatement","src":"14107:11:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13926:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3141,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"13930:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13926:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3176,"initializationExpression":{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"i","nameLocation":"13919:1:6","nodeType":"VariableDeclaration","scope":3176,"src":"13911:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"13911:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3139,"initialValue":{"hexValue":"30","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13923:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13911:13:6"},"loopExpression":{"expression":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13949:3:6","subExpression":{"id":3143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13949:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3145,"nodeType":"ExpressionStatement","src":"13949:3:6"},"nodeType":"ForStatement","src":"13906:229:6"},{"expression":{"id":3177,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"14150:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3131,"id":3178,"nodeType":"Return","src":"14143:11:6"}]},"functionSelector":"cd230809","id":3180,"implemented":true,"kind":"function","modifiers":[],"name":"getReadMsg","nameLocation":"13792:10:6","nodeType":"FunctionDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"_message_id","nameLocation":"13811:11:6","nodeType":"VariableDeclaration","scope":3180,"src":"13803:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"msg_type","nameLocation":"13838:8:6","nodeType":"VariableDeclaration","scope":3180,"src":"13824:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3126,"name":"string","nodeType":"ElementaryTypeName","src":"13824:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13802:45:6"},"returnParameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3180,"src":"13869:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3129,"name":"bool","nodeType":"ElementaryTypeName","src":"13869:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13868:6:6"},"scope":3321,"src":"13783:377:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3319,"nodeType":"Block","src":"14194:639:6","statements":[{"body":{"expression":{"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14240:19:6","subExpression":{"baseExpression":{"id":3193,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"14247:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1762_storage_$","typeString":"mapping(uint256 => struct DAOnation.dao_uri_struct storage ref)"}},"id":3195,"indexExpression":{"id":3194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"14257:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14247:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1762_storage","typeString":"struct DAOnation.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3197,"nodeType":"ExpressionStatement","src":"14240:19:6"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"14221:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3188,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"14225:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14221:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3198,"initializationExpression":{"assignments":[3184],"declarations":[{"constant":false,"id":3184,"mutability":"mutable","name":"i","nameLocation":"14214:1:6","nodeType":"VariableDeclaration","scope":3198,"src":"14206:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"14206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3186,"initialValue":{"hexValue":"30","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14218:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14206:13:6"},"loopExpression":{"expression":{"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14235:3:6","subExpression":{"id":3190,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"14235:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3192,"nodeType":"ExpressionStatement","src":"14235:3:6"},"nodeType":"ForStatement","src":"14201:58:6"},{"body":{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14306:20:6","subExpression":{"baseExpression":{"id":3209,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"14313:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1767_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_uri_struct storage ref)"}},"id":3211,"indexExpression":{"id":3210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"14324:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14313:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1767_storage","typeString":"struct DAOnation.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3213,"nodeType":"ExpressionStatement","src":"14306:20:6"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"14286:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3204,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"14290:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14286:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3214,"initializationExpression":{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"i","nameLocation":"14279:1:6","nodeType":"VariableDeclaration","scope":3214,"src":"14271:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"14271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3202,"initialValue":{"hexValue":"30","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14283:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14271:13:6"},"loopExpression":{"expression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14301:3:6","subExpression":{"id":3206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"14301:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3208,"nodeType":"ExpressionStatement","src":"14301:3:6"},"nodeType":"ForStatement","src":"14266:60:6"},{"body":{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14374:21:6","subExpression":{"baseExpression":{"id":3225,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"14381:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1774_storage_$","typeString":"mapping(uint256 => struct DAOnation.ideas_uri_struct storage ref)"}},"id":3227,"indexExpression":{"id":3226,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14393:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14381:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1774_storage","typeString":"struct DAOnation.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"14374:21:6"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14353:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3220,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"14357:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14353:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"initializationExpression":{"assignments":[3216],"declarations":[{"constant":false,"id":3216,"mutability":"mutable","name":"i","nameLocation":"14346:1:6","nodeType":"VariableDeclaration","scope":3230,"src":"14338:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"14338:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3218,"initialValue":{"hexValue":"30","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14350:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14338:13:6"},"loopExpression":{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14369:3:6","subExpression":{"id":3222,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14369:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ExpressionStatement","src":"14369:3:6"},"nodeType":"ForStatement","src":"14333:62:6"},{"body":{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14442:31:6","subExpression":{"baseExpression":{"id":3241,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"14449:21:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1788_storage_$","typeString":"mapping(uint256 => struct DAOnation.smart_contract_uri_struct storage ref)"}},"id":3243,"indexExpression":{"id":3242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"14471:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14449:24:6","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1788_storage","typeString":"struct DAOnation.smart_contract_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3245,"nodeType":"ExpressionStatement","src":"14442:31:6"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"14422:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3236,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"14426:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14422:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3246,"initializationExpression":{"assignments":[3232],"declarations":[{"constant":false,"id":3232,"mutability":"mutable","name":"i","nameLocation":"14415:1:6","nodeType":"VariableDeclaration","scope":3246,"src":"14407:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"14407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3234,"initialValue":{"hexValue":"30","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14419:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14407:13:6"},"loopExpression":{"expression":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14437:3:6","subExpression":{"id":3238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"14437:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3240,"nodeType":"ExpressionStatement","src":"14437:3:6"},"nodeType":"ForStatement","src":"14402:71:6"},{"body":{"expression":{"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14523:22:6","subExpression":{"baseExpression":{"id":3257,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"14530:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1804_storage_$","typeString":"mapping(uint256 => struct DAOnation.message_struct storage ref)"}},"id":3259,"indexExpression":{"id":3258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"14543:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14530:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1804_storage","typeString":"struct DAOnation.message_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3261,"nodeType":"ExpressionStatement","src":"14523:22:6"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"14500:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3252,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"14504:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14500:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"initializationExpression":{"assignments":[3248],"declarations":[{"constant":false,"id":3248,"mutability":"mutable","name":"i","nameLocation":"14493:1:6","nodeType":"VariableDeclaration","scope":3262,"src":"14485:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"14485:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3250,"initialValue":{"hexValue":"30","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14497:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14485:13:6"},"loopExpression":{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14518:3:6","subExpression":{"id":3254,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"14518:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3256,"nodeType":"ExpressionStatement","src":"14518:3:6"},"nodeType":"ForStatement","src":"14480:65:6"},{"body":{"expression":{"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14593:21:6","subExpression":{"baseExpression":{"id":3273,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"14600:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1822_storage_$","typeString":"mapping(uint256 => struct DAOnation.reply_struct storage ref)"}},"id":3275,"indexExpression":{"id":3274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14612:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14600:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1822_storage","typeString":"struct DAOnation.reply_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3277,"nodeType":"ExpressionStatement","src":"14593:21:6"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14572:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3268,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"14576:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14572:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3278,"initializationExpression":{"assignments":[3264],"declarations":[{"constant":false,"id":3264,"mutability":"mutable","name":"i","nameLocation":"14565:1:6","nodeType":"VariableDeclaration","scope":3278,"src":"14557:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"14557:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3266,"initialValue":{"hexValue":"30","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14569:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14557:13:6"},"loopExpression":{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14588:3:6","subExpression":{"id":3270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14588:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3272,"nodeType":"ExpressionStatement","src":"14588:3:6"},"nodeType":"ForStatement","src":"14552:62:6"},{"body":{"expression":{"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14667:30:6","subExpression":{"baseExpression":{"id":3289,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"14674:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1795_storage_$","typeString":"mapping(uint256 => struct DAOnation.goal_ideas_votes_struct storage ref)"}},"id":3291,"indexExpression":{"id":3290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"14695:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14674:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1795_storage","typeString":"struct DAOnation.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"ExpressionStatement","src":"14667:30:6"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"14641:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3284,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"14645:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14641:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3294,"initializationExpression":{"assignments":[3280],"declarations":[{"constant":false,"id":3280,"mutability":"mutable","name":"i","nameLocation":"14634:1:6","nodeType":"VariableDeclaration","scope":3294,"src":"14626:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3282,"initialValue":{"hexValue":"30","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14638:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14626:13:6"},"loopExpression":{"expression":{"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14662:3:6","subExpression":{"id":3286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"14662:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3288,"nodeType":"ExpressionStatement","src":"14662:3:6"},"nodeType":"ForStatement","src":"14621:76:6"},{"expression":{"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3295,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"14704:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14715:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14704:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3298,"nodeType":"ExpressionStatement","src":"14704:12:6"},{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3299,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"14723:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14735:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14723:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"14723:13:6"},{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3303,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"14743:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14756:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14743:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3306,"nodeType":"ExpressionStatement","src":"14743:14:6"},{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3307,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"14764:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14779:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14764:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"14764:16:6"},{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3311,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"14787:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14787:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"14787:14:6"},{"expression":{"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3315,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"14808:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14826:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14808:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3318,"nodeType":"ExpressionStatement","src":"14808:19:6"}]},"functionSelector":"b16060a6","id":3320,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"14175:9:6","nodeType":"FunctionDefinition","parameters":{"id":3181,"nodeType":"ParameterList","parameters":[],"src":"14184:2:6"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[],"src":"14194:0:6"},"scope":3321,"src":"14166:667:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3322,"src":"170:14666:6","usedErrors":[]}],"src":"33:14805:6"},"id":6}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:7","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:7","statements":[{"nodeType":"YulAssignment","src":"57:19:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:7"},"nodeType":"YulFunctionCall","src":"67:9:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:7"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:7","type":""}],"src":"7:75:7"},{"body":{"nodeType":"YulBlock","src":"177:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:7"},"nodeType":"YulFunctionCall","src":"187:12:7"},"nodeType":"YulExpressionStatement","src":"187:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:7"},{"body":{"nodeType":"YulBlock","src":"300:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:7"},"nodeType":"YulFunctionCall","src":"310:12:7"},"nodeType":"YulExpressionStatement","src":"310:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:7"},{"body":{"nodeType":"YulBlock","src":"423:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:7"},"nodeType":"YulFunctionCall","src":"433:12:7"},"nodeType":"YulExpressionStatement","src":"433:12:7"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:7"},{"body":{"nodeType":"YulBlock","src":"546:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:7"},"nodeType":"YulFunctionCall","src":"556:12:7"},"nodeType":"YulExpressionStatement","src":"556:12:7"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:7"},{"body":{"nodeType":"YulBlock","src":"628:54:7","statements":[{"nodeType":"YulAssignment","src":"638:38:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:7"},"nodeType":"YulFunctionCall","src":"652:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:7","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:7"},"nodeType":"YulFunctionCall","src":"668:7:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:7"},"nodeType":"YulFunctionCall","src":"648:28:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:7"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:7","type":""}],"src":"580:102:7"},{"body":{"nodeType":"YulBlock","src":"716:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:7"},"nodeType":"YulFunctionCall","src":"726:88:7"},"nodeType":"YulExpressionStatement","src":"726:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:7"},"nodeType":"YulFunctionCall","src":"823:15:7"},"nodeType":"YulExpressionStatement","src":"823:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:7"},"nodeType":"YulFunctionCall","src":"847:15:7"},"nodeType":"YulExpressionStatement","src":"847:15:7"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:7"},{"body":{"nodeType":"YulBlock","src":"917:238:7","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:7","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:7"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:7"},"nodeType":"YulFunctionCall","src":"957:27:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:7"},"nodeType":"YulFunctionCall","src":"945:40:7"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:7"},"nodeType":"YulFunctionCall","src":"1098:18:7"},"nodeType":"YulExpressionStatement","src":"1098:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:7"},"nodeType":"YulFunctionCall","src":"1036:34:7"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:7"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:7"},"nodeType":"YulFunctionCall","src":"1072:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:7"},"nodeType":"YulFunctionCall","src":"1033:62:7"},"nodeType":"YulIf","src":"1030:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:7","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:7"},"nodeType":"YulFunctionCall","src":"1127:22:7"},"nodeType":"YulExpressionStatement","src":"1127:22:7"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:7","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:7","type":""}],"src":"874:281:7"},{"body":{"nodeType":"YulBlock","src":"1202:88:7","statements":[{"nodeType":"YulAssignment","src":"1212:30:7","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:7"},"nodeType":"YulFunctionCall","src":"1222:20:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:7"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:7"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:7"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:7"},"nodeType":"YulFunctionCall","src":"1251:33:7"},"nodeType":"YulExpressionStatement","src":"1251:33:7"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:7","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:7","type":""}],"src":"1161:129:7"},{"body":{"nodeType":"YulBlock","src":"1363:241:7","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:7"},"nodeType":"YulFunctionCall","src":"1470:18:7"},"nodeType":"YulExpressionStatement","src":"1470:18:7"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:7"},"nodeType":"YulFunctionCall","src":"1437:30:7"},"nodeType":"YulIf","src":"1434:56:7"},{"nodeType":"YulAssignment","src":"1500:37:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:7"},"nodeType":"YulFunctionCall","src":"1508:29:7"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:7"}]},{"nodeType":"YulAssignment","src":"1574:23:7","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:7"},"nodeType":"YulFunctionCall","src":"1582:15:7"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:7"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:7","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:7","type":""}],"src":"1296:308:7"},{"body":{"nodeType":"YulBlock","src":"1672:184:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:7"},"nodeType":"YulFunctionCall","src":"1772:11:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:7"},"nodeType":"YulFunctionCall","src":"1791:11:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:7"},"nodeType":"YulFunctionCall","src":"1785:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:7"},"nodeType":"YulFunctionCall","src":"1765:39:7"},"nodeType":"YulExpressionStatement","src":"1765:39:7"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:7"},"nodeType":"YulFunctionCall","src":"1709:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:7","statements":[{"nodeType":"YulAssignment","src":"1725:15:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:7"},"nodeType":"YulFunctionCall","src":"1730:10:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:7","statements":[]},"src":"1701:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:7"},"nodeType":"YulFunctionCall","src":"1830:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:7"},"nodeType":"YulFunctionCall","src":"1823:27:7"},"nodeType":"YulExpressionStatement","src":"1823:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:7","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:7","type":""}],"src":"1610:246:7"},{"body":{"nodeType":"YulBlock","src":"1957:339:7","statements":[{"nodeType":"YulAssignment","src":"1967:75:7","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:7"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:7"},"nodeType":"YulFunctionCall","src":"1992:49:7"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:7"},"nodeType":"YulFunctionCall","src":"1976:66:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:7"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:7"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:7"},"nodeType":"YulFunctionCall","src":"2051:21:7"},"nodeType":"YulExpressionStatement","src":"2051:21:7"},{"nodeType":"YulVariableDeclaration","src":"2081:27:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:7"},"nodeType":"YulFunctionCall","src":"2092:16:7"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:7"},"nodeType":"YulFunctionCall","src":"2148:79:7"},"nodeType":"YulExpressionStatement","src":"2148:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:7"},"nodeType":"YulFunctionCall","src":"2123:16:7"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:7"},"nodeType":"YulFunctionCall","src":"2120:25:7"},"nodeType":"YulIf","src":"2117:112:7"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:7"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:7"},"nodeType":"YulFunctionCall","src":"2238:52:7"},"nodeType":"YulExpressionStatement","src":"2238:52:7"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:7","type":""}],"src":"1862:434:7"},{"body":{"nodeType":"YulBlock","src":"2389:282:7","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:7"},"nodeType":"YulFunctionCall","src":"2440:79:7"},"nodeType":"YulExpressionStatement","src":"2440:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:7"},"nodeType":"YulFunctionCall","src":"2413:17:7"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:7"},"nodeType":"YulFunctionCall","src":"2409:27:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:7"},"nodeType":"YulFunctionCall","src":"2402:35:7"},"nodeType":"YulIf","src":"2399:122:7"},{"nodeType":"YulVariableDeclaration","src":"2530:27:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:7"},"nodeType":"YulFunctionCall","src":"2544:13:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:7","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:7","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:7"},"nodeType":"YulFunctionCall","src":"2634:17:7"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:7"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:7"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:7"},"nodeType":"YulFunctionCall","src":"2575:90:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:7"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:7","type":""}],"src":"2316:355:7"},{"body":{"nodeType":"YulBlock","src":"2791:739:7","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:7"},"nodeType":"YulFunctionCall","src":"2839:79:7"},"nodeType":"YulExpressionStatement","src":"2839:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:7"},"nodeType":"YulFunctionCall","src":"2808:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:7"},"nodeType":"YulFunctionCall","src":"2804:32:7"},"nodeType":"YulIf","src":"2801:119:7"},{"nodeType":"YulBlock","src":"2930:291:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:7"},"nodeType":"YulFunctionCall","src":"2965:17:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:7"},"nodeType":"YulFunctionCall","src":"2959:24:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:7"},"nodeType":"YulFunctionCall","src":"3032:79:7"},"nodeType":"YulExpressionStatement","src":"3032:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:7"},"nodeType":"YulFunctionCall","src":"2999:30:7"},"nodeType":"YulIf","src":"2996:117:7"},{"nodeType":"YulAssignment","src":"3127:84:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:7"},"nodeType":"YulFunctionCall","src":"3179:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:7"},"nodeType":"YulFunctionCall","src":"3137:74:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:7"}]}]},{"nodeType":"YulBlock","src":"3231:292:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:7"},"nodeType":"YulFunctionCall","src":"3266:18:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:7"},"nodeType":"YulFunctionCall","src":"3260:25:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:7"},"nodeType":"YulFunctionCall","src":"3334:79:7"},"nodeType":"YulExpressionStatement","src":"3334:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:7"},"nodeType":"YulFunctionCall","src":"3301:30:7"},"nodeType":"YulIf","src":"3298:117:7"},{"nodeType":"YulAssignment","src":"3429:84:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:7"},"nodeType":"YulFunctionCall","src":"3481:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:7"},"nodeType":"YulFunctionCall","src":"3439:74:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:7","type":""}],"src":"2677:853:7"},{"body":{"nodeType":"YulBlock","src":"3595:40:7","statements":[{"nodeType":"YulAssignment","src":"3606:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:7"},"nodeType":"YulFunctionCall","src":"3616:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:7","type":""}],"src":"3536:99:7"},{"body":{"nodeType":"YulBlock","src":"3669:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:7"},"nodeType":"YulFunctionCall","src":"3679:88:7"},"nodeType":"YulExpressionStatement","src":"3679:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:7"},"nodeType":"YulFunctionCall","src":"3776:15:7"},"nodeType":"YulExpressionStatement","src":"3776:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:7"},"nodeType":"YulFunctionCall","src":"3800:15:7"},"nodeType":"YulExpressionStatement","src":"3800:15:7"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:7"},{"body":{"nodeType":"YulBlock","src":"3878:269:7","statements":[{"nodeType":"YulAssignment","src":"3888:22:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:7","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:7"},"nodeType":"YulFunctionCall","src":"3898:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:7","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:7"},"nodeType":"YulFunctionCall","src":"3945:12:7"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:7","statements":[{"nodeType":"YulAssignment","src":"4010:27:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:7"},"nodeType":"YulFunctionCall","src":"4020:17:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:7"},"nodeType":"YulFunctionCall","src":"3969:26:7"},"nodeType":"YulIf","src":"3966:81:7"},{"body":{"nodeType":"YulBlock","src":"4099:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:7"},"nodeType":"YulFunctionCall","src":"4113:18:7"},"nodeType":"YulExpressionStatement","src":"4113:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:7"},"nodeType":"YulFunctionCall","src":"4083:14:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:7"},"nodeType":"YulFunctionCall","src":"4060:38:7"},"nodeType":"YulIf","src":"4057:84:7"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:7","type":""}],"src":"3827:320:7"},{"body":{"nodeType":"YulBlock","src":"4207:87:7","statements":[{"nodeType":"YulAssignment","src":"4217:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:7"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:7","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:7"},"nodeType":"YulFunctionCall","src":"4238:14:7"},"nodeType":"YulExpressionStatement","src":"4238:14:7"},{"nodeType":"YulAssignment","src":"4261:26:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:7"},"nodeType":"YulFunctionCall","src":"4269:18:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:7"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:7","type":""}],"src":"4153:141:7"},{"body":{"nodeType":"YulBlock","src":"4344:49:7","statements":[{"nodeType":"YulAssignment","src":"4354:33:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:7"},"nodeType":"YulFunctionCall","src":"4368:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:7","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:7"},"nodeType":"YulFunctionCall","src":"4364:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:7"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:7","type":""}],"src":"4300:93:7"},{"body":{"nodeType":"YulBlock","src":"4452:54:7","statements":[{"nodeType":"YulAssignment","src":"4462:37:7","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:7"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:7"},"nodeType":"YulFunctionCall","src":"4483:16:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:7"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:7","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:7","type":""}],"src":"4399:107:7"},{"body":{"nodeType":"YulBlock","src":"4588:317:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:7","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:7"},"nodeType":"YulFunctionCall","src":"4615:18:7"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:7","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:7"},"nodeType":"YulFunctionCall","src":"4654:97:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:7","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:7","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:7"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:7"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:7"},"nodeType":"YulFunctionCall","src":"4772:39:7"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:7"}]},{"nodeType":"YulAssignment","src":"4820:30:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:7"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:7"},"nodeType":"YulFunctionCall","src":"4840:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:7"},"nodeType":"YulFunctionCall","src":"4829:21:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:7"}]},{"nodeType":"YulAssignment","src":"4859:40:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:7"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:7"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:7"},"nodeType":"YulFunctionCall","src":"4879:19:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:7"},"nodeType":"YulFunctionCall","src":"4869:30:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:7"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:7","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:7","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:7","type":""}],"src":"4512:393:7"},{"body":{"nodeType":"YulBlock","src":"4956:32:7","statements":[{"nodeType":"YulAssignment","src":"4966:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:7"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:7","type":""}],"src":"4911:77:7"},{"body":{"nodeType":"YulBlock","src":"5026:28:7","statements":[{"nodeType":"YulAssignment","src":"5036:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:7"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:7","type":""}],"src":"4994:60:7"},{"body":{"nodeType":"YulBlock","src":"5120:82:7","statements":[{"nodeType":"YulAssignment","src":"5130:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:7"},"nodeType":"YulFunctionCall","src":"5170:24:7"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:7"},"nodeType":"YulFunctionCall","src":"5161:34:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:7"},"nodeType":"YulFunctionCall","src":"5143:53:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:7"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:7","type":""}],"src":"5060:142:7"},{"body":{"nodeType":"YulBlock","src":"5255:28:7","statements":[{"nodeType":"YulAssignment","src":"5265:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:7"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:7","type":""}],"src":"5208:75:7"},{"body":{"nodeType":"YulBlock","src":"5365:193:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:7","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:7"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:7"},"nodeType":"YulFunctionCall","src":"5399:39:7"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:7"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:7"},"nodeType":"YulFunctionCall","src":"5488:11:7"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:7"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:7"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:7"},"nodeType":"YulFunctionCall","src":"5509:41:7"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:7"},"nodeType":"YulFunctionCall","src":"5460:91:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:7"},"nodeType":"YulFunctionCall","src":"5447:105:7"},"nodeType":"YulExpressionStatement","src":"5447:105:7"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:7","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:7","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:7","type":""}],"src":"5289:269:7"},{"body":{"nodeType":"YulBlock","src":"5613:24:7","statements":[{"nodeType":"YulAssignment","src":"5623:8:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:7","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:7"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:7","type":""}],"src":"5564:73:7"},{"body":{"nodeType":"YulBlock","src":"5696:136:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:7","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:7"},"nodeType":"YulFunctionCall","src":"5720:32:7"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:7"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:7"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:7"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:7"},"nodeType":"YulFunctionCall","src":"5761:65:7"},"nodeType":"YulExpressionStatement","src":"5761:65:7"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:7","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:7","type":""}],"src":"5643:189:7"},{"body":{"nodeType":"YulBlock","src":"5888:136:7","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:7","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:7","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:7"},"nodeType":"YulFunctionCall","src":"5969:39:7"},"nodeType":"YulExpressionStatement","src":"5969:39:7"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:7"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:7"},"nodeType":"YulFunctionCall","src":"5905:14:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:7","statements":[{"nodeType":"YulAssignment","src":"5922:22:7","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:7"},"nodeType":"YulFunctionCall","src":"5931:13:7"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:7"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:7","statements":[]},"src":"5898:120:7"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:7","type":""}],"src":"5838:186:7"},{"body":{"nodeType":"YulBlock","src":"6109:464:7","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:7"},"nodeType":"YulFunctionCall","src":"6165:38:7"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:7","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:7"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:7"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:7"},"nodeType":"YulFunctionCall","src":"6249:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:7"},"nodeType":"YulFunctionCall","src":"6235:44:7"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:7","statements":[{"nodeType":"YulAssignment","src":"6438:23:7","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:7"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:7"},"nodeType":"YulFunctionCall","src":"6417:18:7"},"nodeType":"YulIf","src":"6414:49:7"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:7"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:7"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:7"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:7"},"nodeType":"YulFunctionCall","src":"6532:22:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:7"},"nodeType":"YulFunctionCall","src":"6518:37:7"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:7"},"nodeType":"YulFunctionCall","src":"6476:80:7"},"nodeType":"YulExpressionStatement","src":"6476:80:7"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:7"},"nodeType":"YulFunctionCall","src":"6123:11:7"},"nodeType":"YulIf","src":"6120:446:7"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:7","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:7","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:7","type":""}],"src":"6030:543:7"},{"body":{"nodeType":"YulBlock","src":"6642:54:7","statements":[{"nodeType":"YulAssignment","src":"6652:37:7","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:7"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:7"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:7"},"nodeType":"YulFunctionCall","src":"6673:16:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:7"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:7","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:7","type":""}],"src":"6579:117:7"},{"body":{"nodeType":"YulBlock","src":"6753:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:7","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:7"},"nodeType":"YulFunctionCall","src":"6808:13:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:7"},"nodeType":"YulFunctionCall","src":"6823:6:7"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:7"},"nodeType":"YulFunctionCall","src":"6779:51:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:7"},"nodeType":"YulFunctionCall","src":"6775:56:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:7","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:7"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:7"},"nodeType":"YulFunctionCall","src":"6850:15:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:7"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:7","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:7","type":""}],"src":"6702:169:7"},{"body":{"nodeType":"YulBlock","src":"6957:214:7","statements":[{"nodeType":"YulAssignment","src":"7090:37:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:7"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:7"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:7"},"nodeType":"YulFunctionCall","src":"7098:29:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:7"}]},{"nodeType":"YulAssignment","src":"7136:29:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:7","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:7"},"nodeType":"YulFunctionCall","src":"7153:11:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:7"},"nodeType":"YulFunctionCall","src":"7144:21:7"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:7","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:7","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:7","type":""}],"src":"6876:295:7"},{"body":{"nodeType":"YulBlock","src":"7268:1303:7","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:7","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:7"},"nodeType":"YulFunctionCall","src":"7293:37:7"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:7"},"nodeType":"YulFunctionCall","src":"7417:18:7"},"nodeType":"YulExpressionStatement","src":"7417:18:7"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:7"},"nodeType":"YulFunctionCall","src":"7384:30:7"},"nodeType":"YulIf","src":"7381:56:7"},{"nodeType":"YulVariableDeclaration","src":"7447:52:7","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:7"},"nodeType":"YulFunctionCall","src":"7487:11:7"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:7"},"nodeType":"YulFunctionCall","src":"7461:38:7"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:7"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:7"},"nodeType":"YulFunctionCall","src":"7546:67:7"},"nodeType":"YulExpressionStatement","src":"7546:67:7"},{"nodeType":"YulVariableDeclaration","src":"7623:18:7","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:7","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:7","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:7"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:7","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:7","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:7","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:7"},"nodeType":"YulFunctionCall","src":"7756:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:7"},"nodeType":"YulFunctionCall","src":"7744:22:7"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:7","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:7"},"nodeType":"YulFunctionCall","src":"7794:37:7"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:7"},"nodeType":"YulFunctionCall","src":"7951:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:7"},"nodeType":"YulFunctionCall","src":"7945:26:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:7"},"nodeType":"YulFunctionCall","src":"7930:42:7"},"nodeType":"YulExpressionStatement","src":"7930:42:7"},{"nodeType":"YulAssignment","src":"7989:24:7","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:7"},"nodeType":"YulFunctionCall","src":"7999:14:7"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:7"}]},{"nodeType":"YulAssignment","src":"8030:31:7","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:7"},"nodeType":"YulFunctionCall","src":"8043:18:7"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:7"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:7"},"nodeType":"YulFunctionCall","src":"7875:14:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:7","statements":[{"nodeType":"YulAssignment","src":"7892:17:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:7"},"nodeType":"YulFunctionCall","src":"7897:12:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:7","statements":[]},"src":"7867:208:7"},{"body":{"nodeType":"YulBlock","src":"8111:156:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:7"},"nodeType":"YulFunctionCall","src":"8152:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:7"},"nodeType":"YulFunctionCall","src":"8146:26:7"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:7"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:7"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:7","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:7"},"nodeType":"YulFunctionCall","src":"8234:17:7"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:7"},"nodeType":"YulFunctionCall","src":"8204:48:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:7"},"nodeType":"YulFunctionCall","src":"8189:64:7"},"nodeType":"YulExpressionStatement","src":"8189:64:7"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:7"},"nodeType":"YulFunctionCall","src":"8091:19:7"},"nodeType":"YulIf","src":"8088:179:7"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:7"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:7"},"nodeType":"YulFunctionCall","src":"8297:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:7"},"nodeType":"YulFunctionCall","src":"8293:22:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:7"},"nodeType":"YulFunctionCall","src":"8280:36:7"},"nodeType":"YulExpressionStatement","src":"8280:36:7"}]},"nodeType":"YulCase","src":"7708:618:7","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:7","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:7","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:7","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:7","statements":[{"nodeType":"YulAssignment","src":"8412:35:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:7"},"nodeType":"YulFunctionCall","src":"8427:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:7"},"nodeType":"YulFunctionCall","src":"8421:26:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:7"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:7"},"nodeType":"YulIf","src":"8384:77:7"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:7"},"nodeType":"YulFunctionCall","src":"8487:67:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:7"},"nodeType":"YulFunctionCall","src":"8474:81:7"},"nodeType":"YulExpressionStatement","src":"8474:81:7"}]},"nodeType":"YulCase","src":"8335:230:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:7"},"nodeType":"YulFunctionCall","src":"7685:14:7"},"nodeType":"YulSwitch","src":"7678:887:7"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:7","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:7","type":""}],"src":"7176:1395:7"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122022aa650b1b36ae0633af54ab6ba0e50b6942067358fed8c24ead03892a063d3164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xAA PUSH6 0xB1B36AE0633 0xAF SLOAD 0xAB PUSH12 0xA0E50B6942067358FED8C24E 0xAD SUB DUP10 0x2A MOD RETURNDATASIZE BALANCE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:0:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:7;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1401:11610:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":2679,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":1447,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":2674,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_701":{"entryPoint":1439,"id":701,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1904,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":2044,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":1304,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":776,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":932,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":868,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":1150,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":877,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":630,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":1004,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":811,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":821,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":1269,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:7","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:7","statements":[{"nodeType":"YulAssignment","src":"77:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:7"},"nodeType":"YulFunctionCall","src":"87:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:7","type":""}],"src":"7:99:7"},{"body":{"nodeType":"YulBlock","src":"208:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:7"},"nodeType":"YulFunctionCall","src":"218:19:7"},"nodeType":"YulExpressionStatement","src":"218:19:7"},{"nodeType":"YulAssignment","src":"246:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:7"},"nodeType":"YulFunctionCall","src":"261:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:7","type":""}],"src":"112:169:7"},{"body":{"nodeType":"YulBlock","src":"349:184:7","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:7"},"nodeType":"YulFunctionCall","src":"449:11:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:7"},"nodeType":"YulFunctionCall","src":"468:11:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:7"},"nodeType":"YulFunctionCall","src":"462:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:7"},"nodeType":"YulFunctionCall","src":"442:39:7"},"nodeType":"YulExpressionStatement","src":"442:39:7"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:7"},"nodeType":"YulFunctionCall","src":"386:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:7","statements":[{"nodeType":"YulAssignment","src":"402:15:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:7"},"nodeType":"YulFunctionCall","src":"407:10:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:7","statements":[]},"src":"378:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:7"},"nodeType":"YulFunctionCall","src":"507:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:7"},"nodeType":"YulFunctionCall","src":"500:27:7"},"nodeType":"YulExpressionStatement","src":"500:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:7","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:7","type":""}],"src":"287:246:7"},{"body":{"nodeType":"YulBlock","src":"587:54:7","statements":[{"nodeType":"YulAssignment","src":"597:38:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:7"},"nodeType":"YulFunctionCall","src":"611:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:7","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:7"},"nodeType":"YulFunctionCall","src":"627:7:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:7"},"nodeType":"YulFunctionCall","src":"607:28:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:7"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:7","type":""}],"src":"539:102:7"},{"body":{"nodeType":"YulBlock","src":"739:285:7","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:7"},"nodeType":"YulFunctionCall","src":"763:39:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:7","type":""}]},{"nodeType":"YulAssignment","src":"811:78:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:7"},"nodeType":"YulFunctionCall","src":"818:71:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:7"},"nodeType":"YulFunctionCall","src":"933:16:7"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:7"},"nodeType":"YulFunctionCall","src":"898:65:7"},"nodeType":"YulExpressionStatement","src":"898:65:7"},{"nodeType":"YulAssignment","src":"972:46:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:7"},"nodeType":"YulFunctionCall","src":"988:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:7"},"nodeType":"YulFunctionCall","src":"979:39:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:7","type":""}],"src":"647:377:7"},{"body":{"nodeType":"YulBlock","src":"1148:195:7","statements":[{"nodeType":"YulAssignment","src":"1158:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:7"},"nodeType":"YulFunctionCall","src":"1166:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:7"},"nodeType":"YulFunctionCall","src":"1201:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:7"},"nodeType":"YulFunctionCall","src":"1220:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:7"},"nodeType":"YulFunctionCall","src":"1194:47:7"},"nodeType":"YulExpressionStatement","src":"1194:47:7"},{"nodeType":"YulAssignment","src":"1250:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:7"},"nodeType":"YulFunctionCall","src":"1258:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:7","type":""}],"src":"1030:313:7"},{"body":{"nodeType":"YulBlock","src":"1389:35:7","statements":[{"nodeType":"YulAssignment","src":"1399:19:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:7"},"nodeType":"YulFunctionCall","src":"1409:9:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:7"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:7","type":""}],"src":"1349:75:7"},{"body":{"nodeType":"YulBlock","src":"1519:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:7"},"nodeType":"YulFunctionCall","src":"1529:12:7"},"nodeType":"YulExpressionStatement","src":"1529:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:7"},{"body":{"nodeType":"YulBlock","src":"1642:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:7"},"nodeType":"YulFunctionCall","src":"1652:12:7"},"nodeType":"YulExpressionStatement","src":"1652:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:7"},{"body":{"nodeType":"YulBlock","src":"1721:81:7","statements":[{"nodeType":"YulAssignment","src":"1731:65:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:7"},"nodeType":"YulFunctionCall","src":"1742:54:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:7"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:7","type":""}],"src":"1676:126:7"},{"body":{"nodeType":"YulBlock","src":"1853:51:7","statements":[{"nodeType":"YulAssignment","src":"1863:35:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:7"},"nodeType":"YulFunctionCall","src":"1874:24:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:7"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:7","type":""}],"src":"1808:96:7"},{"body":{"nodeType":"YulBlock","src":"1953:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:7"},"nodeType":"YulFunctionCall","src":"2012:12:7"},"nodeType":"YulExpressionStatement","src":"2012:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:7"},"nodeType":"YulFunctionCall","src":"1983:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:7"},"nodeType":"YulFunctionCall","src":"1973:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:7"},"nodeType":"YulFunctionCall","src":"1966:43:7"},"nodeType":"YulIf","src":"1963:63:7"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:7","type":""}],"src":"1910:122:7"},{"body":{"nodeType":"YulBlock","src":"2090:87:7","statements":[{"nodeType":"YulAssignment","src":"2100:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:7"},"nodeType":"YulFunctionCall","src":"2109:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:7"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:7"},"nodeType":"YulFunctionCall","src":"2138:33:7"},"nodeType":"YulExpressionStatement","src":"2138:33:7"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:7","type":""}],"src":"2038:139:7"},{"body":{"nodeType":"YulBlock","src":"2228:32:7","statements":[{"nodeType":"YulAssignment","src":"2238:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:7"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:7","type":""}],"src":"2183:77:7"},{"body":{"nodeType":"YulBlock","src":"2309:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:7"},"nodeType":"YulFunctionCall","src":"2368:12:7"},"nodeType":"YulExpressionStatement","src":"2368:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:7"},"nodeType":"YulFunctionCall","src":"2339:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:7"},"nodeType":"YulFunctionCall","src":"2329:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:7"},"nodeType":"YulFunctionCall","src":"2322:43:7"},"nodeType":"YulIf","src":"2319:63:7"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:7","type":""}],"src":"2266:122:7"},{"body":{"nodeType":"YulBlock","src":"2446:87:7","statements":[{"nodeType":"YulAssignment","src":"2456:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:7"},"nodeType":"YulFunctionCall","src":"2465:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:7"},"nodeType":"YulFunctionCall","src":"2494:33:7"},"nodeType":"YulExpressionStatement","src":"2494:33:7"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:7","type":""}],"src":"2394:139:7"},{"body":{"nodeType":"YulBlock","src":"2622:391:7","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:7"},"nodeType":"YulFunctionCall","src":"2670:79:7"},"nodeType":"YulExpressionStatement","src":"2670:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:7"},"nodeType":"YulFunctionCall","src":"2639:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:7"},"nodeType":"YulFunctionCall","src":"2635:32:7"},"nodeType":"YulIf","src":"2632:119:7"},{"nodeType":"YulBlock","src":"2761:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:7","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:7"},"nodeType":"YulFunctionCall","src":"2836:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:7"},"nodeType":"YulFunctionCall","src":"2815:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:7"}]}]},{"nodeType":"YulBlock","src":"2888:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:7","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:7"},"nodeType":"YulFunctionCall","src":"2964:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:7"},"nodeType":"YulFunctionCall","src":"2943:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:7","type":""}],"src":"2539:474:7"},{"body":{"nodeType":"YulBlock","src":"3061:48:7","statements":[{"nodeType":"YulAssignment","src":"3071:32:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:7"},"nodeType":"YulFunctionCall","src":"3089:13:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:7"},"nodeType":"YulFunctionCall","src":"3082:21:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:7"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:7","type":""}],"src":"3019:90:7"},{"body":{"nodeType":"YulBlock","src":"3174:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:7"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:7"},"nodeType":"YulFunctionCall","src":"3196:21:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:7"},"nodeType":"YulFunctionCall","src":"3184:34:7"},"nodeType":"YulExpressionStatement","src":"3184:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:7","type":""}],"src":"3115:109:7"},{"body":{"nodeType":"YulBlock","src":"3322:118:7","statements":[{"nodeType":"YulAssignment","src":"3332:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:7"},"nodeType":"YulFunctionCall","src":"3340:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:7"},"nodeType":"YulFunctionCall","src":"3415:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:7"},"nodeType":"YulFunctionCall","src":"3368:65:7"},"nodeType":"YulExpressionStatement","src":"3368:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:7","type":""}],"src":"3230:210:7"},{"body":{"nodeType":"YulBlock","src":"3511:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:7"},"nodeType":"YulFunctionCall","src":"3533:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:7"},"nodeType":"YulFunctionCall","src":"3521:37:7"},"nodeType":"YulExpressionStatement","src":"3521:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:7","type":""}],"src":"3446:118:7"},{"body":{"nodeType":"YulBlock","src":"3668:124:7","statements":[{"nodeType":"YulAssignment","src":"3678:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:7"},"nodeType":"YulFunctionCall","src":"3686:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:7"},"nodeType":"YulFunctionCall","src":"3767:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:7"},"nodeType":"YulFunctionCall","src":"3714:71:7"},"nodeType":"YulExpressionStatement","src":"3714:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:7","type":""}],"src":"3570:222:7"},{"body":{"nodeType":"YulBlock","src":"3898:519:7","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:7"},"nodeType":"YulFunctionCall","src":"3946:79:7"},"nodeType":"YulExpressionStatement","src":"3946:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:7"},"nodeType":"YulFunctionCall","src":"3915:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:7"},"nodeType":"YulFunctionCall","src":"3911:32:7"},"nodeType":"YulIf","src":"3908:119:7"},{"nodeType":"YulBlock","src":"4037:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:7","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:7"},"nodeType":"YulFunctionCall","src":"4112:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:7"},"nodeType":"YulFunctionCall","src":"4091:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:7"}]}]},{"nodeType":"YulBlock","src":"4164:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:7","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:7"},"nodeType":"YulFunctionCall","src":"4240:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:7"},"nodeType":"YulFunctionCall","src":"4219:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:7"}]}]},{"nodeType":"YulBlock","src":"4292:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:7","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:7","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:7"},"nodeType":"YulFunctionCall","src":"4368:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:7"},"nodeType":"YulFunctionCall","src":"4347:53:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:7","type":""}],"src":"3798:619:7"},{"body":{"nodeType":"YulBlock","src":"4466:43:7","statements":[{"nodeType":"YulAssignment","src":"4476:27:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:7"},"nodeType":"YulFunctionCall","src":"4487:16:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:7"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:7","type":""}],"src":"4423:86:7"},{"body":{"nodeType":"YulBlock","src":"4576:51:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:7"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:7"},"nodeType":"YulFunctionCall","src":"4598:22:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:7"},"nodeType":"YulFunctionCall","src":"4586:35:7"},"nodeType":"YulExpressionStatement","src":"4586:35:7"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:7","type":""}],"src":"4515:112:7"},{"body":{"nodeType":"YulBlock","src":"4727:120:7","statements":[{"nodeType":"YulAssignment","src":"4737:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:7"},"nodeType":"YulFunctionCall","src":"4745:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:7"},"nodeType":"YulFunctionCall","src":"4822:17:7"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:7"},"nodeType":"YulFunctionCall","src":"4773:67:7"},"nodeType":"YulExpressionStatement","src":"4773:67:7"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:7","type":""}],"src":"4633:214:7"},{"body":{"nodeType":"YulBlock","src":"4919:263:7","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:7"},"nodeType":"YulFunctionCall","src":"4967:79:7"},"nodeType":"YulExpressionStatement","src":"4967:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:7"},"nodeType":"YulFunctionCall","src":"4936:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:7"},"nodeType":"YulFunctionCall","src":"4932:32:7"},"nodeType":"YulIf","src":"4929:119:7"},{"nodeType":"YulBlock","src":"5058:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:7","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:7"},"nodeType":"YulFunctionCall","src":"5133:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:7"},"nodeType":"YulFunctionCall","src":"5112:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:7","type":""}],"src":"4853:329:7"},{"body":{"nodeType":"YulBlock","src":"5271:391:7","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:7"},"nodeType":"YulFunctionCall","src":"5319:79:7"},"nodeType":"YulExpressionStatement","src":"5319:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:7"},"nodeType":"YulFunctionCall","src":"5288:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:7"},"nodeType":"YulFunctionCall","src":"5284:32:7"},"nodeType":"YulIf","src":"5281:119:7"},{"nodeType":"YulBlock","src":"5410:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:7","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:7"},"nodeType":"YulFunctionCall","src":"5485:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:7"},"nodeType":"YulFunctionCall","src":"5464:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:7"}]}]},{"nodeType":"YulBlock","src":"5537:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:7","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:7"},"nodeType":"YulFunctionCall","src":"5613:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:7"},"nodeType":"YulFunctionCall","src":"5592:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:7","type":""}],"src":"5188:474:7"},{"body":{"nodeType":"YulBlock","src":"5696:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:7"},"nodeType":"YulFunctionCall","src":"5706:88:7"},"nodeType":"YulExpressionStatement","src":"5706:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:7"},"nodeType":"YulFunctionCall","src":"5803:15:7"},"nodeType":"YulExpressionStatement","src":"5803:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:7"},"nodeType":"YulFunctionCall","src":"5827:15:7"},"nodeType":"YulExpressionStatement","src":"5827:15:7"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:7"},{"body":{"nodeType":"YulBlock","src":"5905:269:7","statements":[{"nodeType":"YulAssignment","src":"5915:22:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:7","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:7"},"nodeType":"YulFunctionCall","src":"5925:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:7","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:7"},"nodeType":"YulFunctionCall","src":"5972:12:7"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:7","statements":[{"nodeType":"YulAssignment","src":"6037:27:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:7"},"nodeType":"YulFunctionCall","src":"6047:17:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:7"},"nodeType":"YulFunctionCall","src":"5996:26:7"},"nodeType":"YulIf","src":"5993:81:7"},{"body":{"nodeType":"YulBlock","src":"6126:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:7"},"nodeType":"YulFunctionCall","src":"6140:18:7"},"nodeType":"YulExpressionStatement","src":"6140:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:7"},"nodeType":"YulFunctionCall","src":"6110:14:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:7"},"nodeType":"YulFunctionCall","src":"6087:38:7"},"nodeType":"YulIf","src":"6084:84:7"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:7","type":""}],"src":"5854:320:7"},{"body":{"nodeType":"YulBlock","src":"6208:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:7"},"nodeType":"YulFunctionCall","src":"6218:88:7"},"nodeType":"YulExpressionStatement","src":"6218:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:7"},"nodeType":"YulFunctionCall","src":"6315:15:7"},"nodeType":"YulExpressionStatement","src":"6315:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:7"},"nodeType":"YulFunctionCall","src":"6339:15:7"},"nodeType":"YulExpressionStatement","src":"6339:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:7"},{"body":{"nodeType":"YulBlock","src":"6410:147:7","statements":[{"nodeType":"YulAssignment","src":"6420:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:7"},"nodeType":"YulFunctionCall","src":"6425:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:7"}]},{"nodeType":"YulAssignment","src":"6454:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:7"},"nodeType":"YulFunctionCall","src":"6459:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:7"}]},{"nodeType":"YulAssignment","src":"6488:16:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:7"},"nodeType":"YulFunctionCall","src":"6495:9:7"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:7"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:7"},"nodeType":"YulFunctionCall","src":"6530:18:7"},"nodeType":"YulExpressionStatement","src":"6530:18:7"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:7"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:7"},"nodeType":"YulFunctionCall","src":"6517:10:7"},"nodeType":"YulIf","src":"6514:36:7"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:7","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:7","type":""}],"src":"6366:191:7"},{"body":{"nodeType":"YulBlock","src":"6669:118:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:7"},"nodeType":"YulFunctionCall","src":"6687:14:7"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:7","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:7"},"nodeType":"YulFunctionCall","src":"6680:58:7"},"nodeType":"YulExpressionStatement","src":"6680:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:7"},"nodeType":"YulFunctionCall","src":"6755:15:7"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:7","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:7"},"nodeType":"YulFunctionCall","src":"6748:32:7"},"nodeType":"YulExpressionStatement","src":"6748:32:7"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:7","type":""}],"src":"6563:224:7"},{"body":{"nodeType":"YulBlock","src":"6939:220:7","statements":[{"nodeType":"YulAssignment","src":"6949:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:7","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:7"},"nodeType":"YulFunctionCall","src":"6956:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:7"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:7"},"nodeType":"YulFunctionCall","src":"7032:93:7"},"nodeType":"YulExpressionStatement","src":"7032:93:7"},{"nodeType":"YulAssignment","src":"7134:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:7"},"nodeType":"YulFunctionCall","src":"7141:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:7"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:7","type":""}],"src":"6793:366:7"},{"body":{"nodeType":"YulBlock","src":"7336:248:7","statements":[{"nodeType":"YulAssignment","src":"7346:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:7"},"nodeType":"YulFunctionCall","src":"7354:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:7"},"nodeType":"YulFunctionCall","src":"7389:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:7"},"nodeType":"YulFunctionCall","src":"7408:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:7"},"nodeType":"YulFunctionCall","src":"7382:47:7"},"nodeType":"YulExpressionStatement","src":"7382:47:7"},{"nodeType":"YulAssignment","src":"7438:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:7"},"nodeType":"YulFunctionCall","src":"7446:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:7","type":""}],"src":"7165:419:7"},{"body":{"nodeType":"YulBlock","src":"7696:117:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:7"},"nodeType":"YulFunctionCall","src":"7714:14:7"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:7","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:7"},"nodeType":"YulFunctionCall","src":"7707:58:7"},"nodeType":"YulExpressionStatement","src":"7707:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:7"},"nodeType":"YulFunctionCall","src":"7782:15:7"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:7","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:7"},"nodeType":"YulFunctionCall","src":"7775:31:7"},"nodeType":"YulExpressionStatement","src":"7775:31:7"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:7","type":""}],"src":"7590:223:7"},{"body":{"nodeType":"YulBlock","src":"7965:220:7","statements":[{"nodeType":"YulAssignment","src":"7975:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:7","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:7"},"nodeType":"YulFunctionCall","src":"7982:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:7"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:7"},"nodeType":"YulFunctionCall","src":"8058:93:7"},"nodeType":"YulExpressionStatement","src":"8058:93:7"},{"nodeType":"YulAssignment","src":"8160:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:7"},"nodeType":"YulFunctionCall","src":"8167:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:7"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:7","type":""}],"src":"7819:366:7"},{"body":{"nodeType":"YulBlock","src":"8362:248:7","statements":[{"nodeType":"YulAssignment","src":"8372:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:7"},"nodeType":"YulFunctionCall","src":"8380:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:7"},"nodeType":"YulFunctionCall","src":"8415:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:7"},"nodeType":"YulFunctionCall","src":"8434:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:7"},"nodeType":"YulFunctionCall","src":"8408:47:7"},"nodeType":"YulExpressionStatement","src":"8408:47:7"},{"nodeType":"YulAssignment","src":"8464:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:7"},"nodeType":"YulFunctionCall","src":"8472:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:7","type":""}],"src":"8191:419:7"},{"body":{"nodeType":"YulBlock","src":"8722:115:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:7"},"nodeType":"YulFunctionCall","src":"8740:14:7"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:7","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:7"},"nodeType":"YulFunctionCall","src":"8733:58:7"},"nodeType":"YulExpressionStatement","src":"8733:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:7"},"nodeType":"YulFunctionCall","src":"8808:15:7"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:7","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:7"},"nodeType":"YulFunctionCall","src":"8801:29:7"},"nodeType":"YulExpressionStatement","src":"8801:29:7"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:7","type":""}],"src":"8616:221:7"},{"body":{"nodeType":"YulBlock","src":"8989:220:7","statements":[{"nodeType":"YulAssignment","src":"8999:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:7","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:7"},"nodeType":"YulFunctionCall","src":"9006:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:7"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:7"},"nodeType":"YulFunctionCall","src":"9082:93:7"},"nodeType":"YulExpressionStatement","src":"9082:93:7"},{"nodeType":"YulAssignment","src":"9184:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:7"},"nodeType":"YulFunctionCall","src":"9191:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:7"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:7","type":""}],"src":"8843:366:7"},{"body":{"nodeType":"YulBlock","src":"9386:248:7","statements":[{"nodeType":"YulAssignment","src":"9396:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:7"},"nodeType":"YulFunctionCall","src":"9404:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:7"},"nodeType":"YulFunctionCall","src":"9439:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:7"},"nodeType":"YulFunctionCall","src":"9458:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:7"},"nodeType":"YulFunctionCall","src":"9432:47:7"},"nodeType":"YulExpressionStatement","src":"9432:47:7"},{"nodeType":"YulAssignment","src":"9488:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:7"},"nodeType":"YulFunctionCall","src":"9496:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:7","type":""}],"src":"9215:419:7"},{"body":{"nodeType":"YulBlock","src":"9746:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:7"},"nodeType":"YulFunctionCall","src":"9764:14:7"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:7","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:7"},"nodeType":"YulFunctionCall","src":"9757:55:7"},"nodeType":"YulExpressionStatement","src":"9757:55:7"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:7","type":""}],"src":"9640:179:7"},{"body":{"nodeType":"YulBlock","src":"9971:220:7","statements":[{"nodeType":"YulAssignment","src":"9981:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:7","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:7"},"nodeType":"YulFunctionCall","src":"9988:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:7"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:7"},"nodeType":"YulFunctionCall","src":"10064:93:7"},"nodeType":"YulExpressionStatement","src":"10064:93:7"},{"nodeType":"YulAssignment","src":"10166:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:7"},"nodeType":"YulFunctionCall","src":"10173:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:7"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:7","type":""}],"src":"9825:366:7"},{"body":{"nodeType":"YulBlock","src":"10368:248:7","statements":[{"nodeType":"YulAssignment","src":"10378:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:7"},"nodeType":"YulFunctionCall","src":"10386:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:7"},"nodeType":"YulFunctionCall","src":"10421:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:7"},"nodeType":"YulFunctionCall","src":"10440:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:7"},"nodeType":"YulFunctionCall","src":"10414:47:7"},"nodeType":"YulExpressionStatement","src":"10414:47:7"},{"nodeType":"YulAssignment","src":"10470:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:7"},"nodeType":"YulFunctionCall","src":"10478:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:7","type":""}],"src":"10197:419:7"},{"body":{"nodeType":"YulBlock","src":"10728:118:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:7"},"nodeType":"YulFunctionCall","src":"10746:14:7"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:7","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:7"},"nodeType":"YulFunctionCall","src":"10739:58:7"},"nodeType":"YulExpressionStatement","src":"10739:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:7"},"nodeType":"YulFunctionCall","src":"10814:15:7"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:7","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:7"},"nodeType":"YulFunctionCall","src":"10807:32:7"},"nodeType":"YulExpressionStatement","src":"10807:32:7"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:7","type":""}],"src":"10622:224:7"},{"body":{"nodeType":"YulBlock","src":"10998:220:7","statements":[{"nodeType":"YulAssignment","src":"11008:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:7","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:7"},"nodeType":"YulFunctionCall","src":"11015:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:7"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:7"},"nodeType":"YulFunctionCall","src":"11091:93:7"},"nodeType":"YulExpressionStatement","src":"11091:93:7"},{"nodeType":"YulAssignment","src":"11193:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:7"},"nodeType":"YulFunctionCall","src":"11200:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:7"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:7","type":""}],"src":"10852:366:7"},{"body":{"nodeType":"YulBlock","src":"11395:248:7","statements":[{"nodeType":"YulAssignment","src":"11405:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:7"},"nodeType":"YulFunctionCall","src":"11413:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:7"},"nodeType":"YulFunctionCall","src":"11448:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:7"},"nodeType":"YulFunctionCall","src":"11467:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:7"},"nodeType":"YulFunctionCall","src":"11441:47:7"},"nodeType":"YulExpressionStatement","src":"11441:47:7"},{"nodeType":"YulAssignment","src":"11497:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:7"},"nodeType":"YulFunctionCall","src":"11505:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:7","type":""}],"src":"11224:419:7"},{"body":{"nodeType":"YulBlock","src":"11755:116:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:7"},"nodeType":"YulFunctionCall","src":"11773:14:7"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:7","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:7"},"nodeType":"YulFunctionCall","src":"11766:58:7"},"nodeType":"YulExpressionStatement","src":"11766:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:7"},"nodeType":"YulFunctionCall","src":"11841:15:7"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:7","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:7"},"nodeType":"YulFunctionCall","src":"11834:30:7"},"nodeType":"YulExpressionStatement","src":"11834:30:7"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:7","type":""}],"src":"11649:222:7"},{"body":{"nodeType":"YulBlock","src":"12023:220:7","statements":[{"nodeType":"YulAssignment","src":"12033:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:7","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:7"},"nodeType":"YulFunctionCall","src":"12040:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:7"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:7"},"nodeType":"YulFunctionCall","src":"12116:93:7"},"nodeType":"YulExpressionStatement","src":"12116:93:7"},{"nodeType":"YulAssignment","src":"12218:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:7"},"nodeType":"YulFunctionCall","src":"12225:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:7"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:7","type":""}],"src":"11877:366:7"},{"body":{"nodeType":"YulBlock","src":"12420:248:7","statements":[{"nodeType":"YulAssignment","src":"12430:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:7"},"nodeType":"YulFunctionCall","src":"12438:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:7"},"nodeType":"YulFunctionCall","src":"12473:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:7"},"nodeType":"YulFunctionCall","src":"12492:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:7"},"nodeType":"YulFunctionCall","src":"12466:47:7"},"nodeType":"YulExpressionStatement","src":"12466:47:7"},{"nodeType":"YulAssignment","src":"12522:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:7"},"nodeType":"YulFunctionCall","src":"12530:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:7","type":""}],"src":"12249:419:7"},{"body":{"nodeType":"YulBlock","src":"12780:119:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:7"},"nodeType":"YulFunctionCall","src":"12798:14:7"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:7","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:7"},"nodeType":"YulFunctionCall","src":"12791:58:7"},"nodeType":"YulExpressionStatement","src":"12791:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:7"},"nodeType":"YulFunctionCall","src":"12866:15:7"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:7","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:7"},"nodeType":"YulFunctionCall","src":"12859:33:7"},"nodeType":"YulExpressionStatement","src":"12859:33:7"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:7","type":""}],"src":"12674:225:7"},{"body":{"nodeType":"YulBlock","src":"13051:220:7","statements":[{"nodeType":"YulAssignment","src":"13061:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:7","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:7"},"nodeType":"YulFunctionCall","src":"13068:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:7"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:7"},"nodeType":"YulFunctionCall","src":"13144:93:7"},"nodeType":"YulExpressionStatement","src":"13144:93:7"},{"nodeType":"YulAssignment","src":"13246:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:7"},"nodeType":"YulFunctionCall","src":"13253:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:7"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:7","type":""}],"src":"12905:366:7"},{"body":{"nodeType":"YulBlock","src":"13448:248:7","statements":[{"nodeType":"YulAssignment","src":"13458:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:7"},"nodeType":"YulFunctionCall","src":"13466:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:7"},"nodeType":"YulFunctionCall","src":"13501:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:7"},"nodeType":"YulFunctionCall","src":"13520:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:7"},"nodeType":"YulFunctionCall","src":"13494:47:7"},"nodeType":"YulExpressionStatement","src":"13494:47:7"},{"nodeType":"YulAssignment","src":"13550:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:7"},"nodeType":"YulFunctionCall","src":"13558:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:7","type":""}],"src":"13277:419:7"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122022aa650b1b36ae0633af54ab6ba0e50b6942067358fed8c24ead03892a063d3164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xAA PUSH6 0xB1B36AE0633 0xAF SLOAD 0xAB PUSH12 0xA0E50B6942067358FED8C24E 0xAD SUB DUP10 0x2A MOD RETURNDATASIZE BALANCE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;10504:370:0:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060017698e01c6932f89fdb7b12ba917edb07b5f945503f3abdcd2267742fb84b64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x1 PUSH23 0x98E01C6932F89FDB7B12BA917EDB07B5F945503F3ABDCD 0x22 PUSH8 0x742FB84B64736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"188:2065:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060017698e01c6932f89fdb7b12ba917edb07b5f945503f3abdcd2267742fb84b64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x1 PUSH23 0x98E01C6932F89FDB7B12BA917EDB07B5F945503F3ABDCD 0x22 PUSH8 0x742FB84B64736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"188:2065:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dbe6febdcf68c239e1ab1b2757512b1ef3440b4378677bd12b1687ef6a5a35764736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xBE PUSH16 0xEBDCF68C239E1AB1B2757512B1EF3440 0xB4 CALLDATACOPY DUP7 PUSH24 0xBD12B1687EF6A5A35764736F6C6343000811003300000000 ","sourceMap":"202:12302:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dbe6febdcf68c239e1ab1b2757512b1ef3440b4378677bd12b1687ef6a5a35764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xBE PUSH16 0xEBDCF68C239E1AB1B2757512B1EF3440 0xB4 CALLDATACOPY DUP7 PUSH24 0xBD12B1687EF6A5A35764736F6C6343000811003300000000 ","sourceMap":"202:12302:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/DAOnation.sol":{"DAOnation":{"abi":[{"inputs":[],"name":"_dao_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donations","outputs":[{"internalType":"string","name":"ideas_id","type":"string"},{"internalType":"uint256","name":"userid","type":"uint256"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_donations_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_feed_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_feeds","outputs":[{"internalType":"uint256","name":"feed_id","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"Type","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_goal_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_goal_uris","outputs":[{"internalType":"string","name":"dao_id","type":"string"},{"internalType":"string","name":"goal_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"string","name":"goal_id","type":"string"},{"internalType":"string","name":"ideas_uri","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_vote_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_join_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_joined_person","outputs":[{"internalType":"string","name":"daoId","type":"string"},{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"string","name":"joined_date","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_read_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_reply_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_smart_contract_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_smart_contracts_uris","outputs":[{"internalType":"uint256","name":"smart_contract_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"smart_contract_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_template_uris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_user_badges","outputs":[{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"bool","name":"dao","type":"bool"},{"internalType":"bool","name":"joined","type":"bool"},{"internalType":"bool","name":"goal","type":"bool"},{"internalType":"bool","name":"ideas","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"bool","name":"donation","type":"bool"},{"internalType":"bool","name":"comment","type":"bool"},{"internalType":"bool","name":"reply","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"feed_text","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"name":"add_Feed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_id","type":"string"},{"internalType":"uint256","name":"_doantion","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"},{"internalType":"string","name":"_feed1","type":"string"},{"internalType":"string","name":"_feed2","type":"string"}],"name":"add_donation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"string","name":"goal_id","type":"string"},{"internalType":"string","name":"ideas_id","type":"string"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"string","name":"ideas_id","type":"string"},{"internalType":"string","name":"message","type":"string"},{"internalType":"string","name":"sender","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_read_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_replies","outputs":[{"internalType":"uint256","name":"reply_id","type":"uint256"},{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"},{"internalType":"string","name":"_template","type":"string"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"string","name":"_dao_id","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_id","type":"string"},{"internalType":"string","name":"_ideas_id","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"},{"internalType":"bool","name":"feed_add","type":"bool"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"string","name":"_goal_id","type":"string"},{"internalType":"string[]","name":"_smart_contracts","type":"string[]"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"ideas_id","type":"string"}],"name":"getMsgIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"getReadMsg","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"message_id","type":"uint256"}],"name":"getReplyIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_id","type":"string"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_id","type":"string"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"dao_id","type":"string"},{"internalType":"uint256","name":"person","type":"uint256"}],"name":"get_person_joinedID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"dao_id","type":"string"},{"internalType":"uint256","name":"person","type":"uint256"}],"name":"is_person_joined","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"dao_id","type":"string"},{"internalType":"uint256","name":"person","type":"uint256"},{"internalType":"string","name":"joined_date","type":"string"},{"internalType":"string","name":"_feed","type":"string"}],"name":"join_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"join_id","type":"uint256"}],"name":"leave_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_id","type":"string"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"string","name":"_sender","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"}],"name":"sendMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_wallet","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"sendReadMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"_reply","type":"string"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"}],"name":"sendReply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_template","type":"string"}],"name":"update_template","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D2F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x383 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89E93784 GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB527D45E GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xCACE8D46 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDDDB6F86 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDDB6F86 EQ PUSH2 0xBE7 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xC47 JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xC65 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xB36 JUMPI DUP1 PUSH4 0xCD230809 EQ PUSH2 0xB69 JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xB99 JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xBB7 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xAAE JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xACC JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xAE8 JUMPI DUP1 PUSH4 0xCA982104 EQ PUSH2 0xB06 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0xBDA00335 EQ PUSH2 0xA76 JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xA92 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xA36ADB9F GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xAA2BF5D3 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x9BB JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x9D9 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0xB39A38BD EQ PUSH2 0xA13 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xA36ADB9F EQ PUSH2 0x923 JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xA807C20E EQ PUSH2 0x98B JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x9077007D GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x887 JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x8A5 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x8F3 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x89E93784 EQ PUSH2 0x809 JUMPI DUP1 PUSH4 0x8AC4110C EQ PUSH2 0x839 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x857 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 GT PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x7FC543EC GT PUSH2 0x256 JUMPI DUP1 PUSH4 0x829A5D98 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x829A5D98 EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x7D1 JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x7ED JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0x826EEEFE EQ PUSH2 0x755 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x6ECDA4EE GT PUSH2 0x292 JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x7BC9724B EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x6C2 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0x54A9FB18 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x628 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 GT PUSH2 0x325 JUMPI DUP1 PUSH4 0x330B8F26 GT PUSH2 0x2FF JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x42F78F47 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x5A5 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4F2 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x1B592AEB GT PUSH2 0x361 JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x1FD4D664 EQ PUSH2 0x474 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C0 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x3BF8 JUMP JUMPDEST PUSH2 0xFDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FA PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x539 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x3E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DF PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x642 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x672 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x690 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH2 0x1B34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EA SWAP3 SWAP2 SWAP1 PUSH2 0x3FB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x3E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1EF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x4029 JUMP JUMPDEST PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x224C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x4140 JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x823 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x4203 JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x841 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x871 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86C SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87E SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88F PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x42D2 JUMP JUMPDEST PUSH2 0x2478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8DD PUSH2 0x250C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x968 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x274D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x982 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x444D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C3 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA11 PUSH2 0x29B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA2D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA28 SWAP2 SWAP1 PUSH2 0x4468 JUMP JUMPDEST PUSH2 0x2C8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8B SWAP2 SWAP1 PUSH2 0x457D JUMP JUMPDEST PUSH2 0x2F40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x2FD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB6 PUSH2 0x2FFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x3139 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAF0 PUSH2 0x3161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB20 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0x4029 JUMP JUMPDEST PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB50 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4B SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x3244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB60 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB83 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x32FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x444D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA1 PUSH2 0x338D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x45F5 JUMP JUMPDEST PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC01 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x475E JUMP JUMPDEST PUSH2 0x3458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC31 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x35B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4F PUSH2 0x3661 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5C SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x3667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCB7 JUMPI PUSH2 0xCB6 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCEA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCD5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE16 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xE03 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD58 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD84 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDE9 JUMPI PUSH2 0xDE8 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xDFF SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE0E SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCF5 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xE56 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE82 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xECF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xECF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEB2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xEE4 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF10 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF5D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF5D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF40 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xFD3 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xFC0 JUMPI DUP1 SWAP2 POP POP PUSH2 0xFD9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xFCB SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF75 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x104D JUMPI PUSH2 0x104C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261646765000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST JUMPDEST PUSH2 0x108C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F6E6174696F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x4A47 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1155 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x119C SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11C8 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1215 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1215 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x122A SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1256 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1278 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1286 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x12B8 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12E4 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1331 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1306 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1331 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1314 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH2 0x135A PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x138E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1379 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x146E JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x13BF SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13EB SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1438 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x140D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1438 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x141B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1450 JUMPI PUSH2 0x144F PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1466 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1394 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1499 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14C5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1512 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1512 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x152D SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1559 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1589 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x15E5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1611 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x165E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1633 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x165E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1641 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1688 JUMPI PUSH2 0x1687 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16B6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x175B JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1748 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x172D JUMPI PUSH2 0x172C PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1744 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1753 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16C1 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1789 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17B5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1802 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1817 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1843 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1890 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1865 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1890 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1873 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x18D5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1901 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x194E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1923 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x194E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1931 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1963 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x198F SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1A09 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A35 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1AAD SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AD9 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1BA8 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1BC8 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDF SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1C23 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6A6F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1C4C SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C78 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CC5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C9A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CC5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CA8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1CDA SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D06 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D53 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D28 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D53 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D36 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1D80 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DAC SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DF9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DCE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DF9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DDC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E2F JUMPI PUSH2 0x1E2E PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E5D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1EE7 JUMPI DUP5 PUSH1 0x17 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1ED4 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EB9 JUMPI PUSH2 0x1EB8 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1ED0 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1EDF SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E68 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3939393900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x270F DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1F7B SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1F9B SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FF5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FE0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2121 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x2035 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2100 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2063 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x208F SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x20F4 JUMPI PUSH2 0x20F3 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x210B SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x2119 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2000 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x21A7 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x21BD SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x21D3 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xC PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x21F8 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x223A SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x226C SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2294 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x22B8 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2334 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x234A SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x236B SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 ISZERO PUSH2 0x23B6 JUMPI PUSH2 0x23B5 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766F746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x23ED SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2419 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2466 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2466 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2449 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x16 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x24E3 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x24FA SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x252C JUMPI PUSH2 0x252B PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x255F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x254A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x263F JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2590 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25BC SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2609 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2609 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2621 JUMPI PUSH2 0x2620 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2637 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2565 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x26AD JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x2684 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x269A JUMPI DUP1 SWAP2 POP POP PUSH2 0x26B3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x26A5 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x264F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2740 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x271F JUMPI POP DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x272D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2747 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2738 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26C0 JUMP JUMPDEST POP PUSH2 0x270F SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x288C JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x286A JUMPI POP DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x2860 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x2879 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2892 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2884 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x280B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x299F JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x28D8 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x298C JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x2906 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2932 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x297F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2954 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x297F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP PUSH2 0x29B3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2997 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28A3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2A1E JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x29E9 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x29F9 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2A09 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2A16 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29BB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2A75 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2A50 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2A60 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2A6D SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A22 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2AD4 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2AA7 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2AB7 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2ACC SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A79 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2B2B JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2B16 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2B23 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AD8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2B9A JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2B65 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2B75 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2B85 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2B92 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B2F JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2BE4 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2BF1 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B9E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2C58 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2C2B SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2C3B SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2C50 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BFD JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2CCB SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2CE1 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2D27 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x2D6B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x676F616C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2DA1 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DCD SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2E2F SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E5B SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2EBD SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EE9 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F36 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F0B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F36 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F19 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2FA1 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2FB7 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCE SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2FFA SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x301E JUMPI PUSH2 0x301D PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3051 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x303C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x3131 JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x3082 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30AE SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3113 JUMPI PUSH2 0x3112 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x3129 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3057 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x315C SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x31EF SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x3205 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x321B SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3232 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x3279 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32A5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x32D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x3382 JUMPI DUP5 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x3365 JUMPI POP PUSH1 0x16 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x3353 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x336F JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x337A SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3306 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x17 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x342F SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3446 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x34A0 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x34B6 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3506 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x356B JUMPI PUSH2 0x3540 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3533 JUMPI PUSH2 0x3532 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3719 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3553 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x3563 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x350E JUMP JUMPDEST POP PUSH2 0x35AB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6964656100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x35DC SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3608 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3655 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x362A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3655 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3638 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3696 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36C2 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x370F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x370F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x3770 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3785 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x3797 JUMPI POP PUSH2 0x37B6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x37B5 SWAP2 SWAP1 PUSH2 0x37B9 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x37D2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37BA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x383D DUP3 PUSH2 0x37F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x385C JUMPI PUSH2 0x385B PUSH2 0x3805 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386F PUSH2 0x37D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x387B DUP3 DUP3 PUSH2 0x3834 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x389B JUMPI PUSH2 0x389A PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH2 0x38A4 DUP3 PUSH2 0x37F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38D3 PUSH2 0x38CE DUP5 PUSH2 0x3880 JUMP JUMPDEST PUSH2 0x3865 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x38EF JUMPI PUSH2 0x38EE PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH2 0x38FA DUP5 DUP3 DUP6 PUSH2 0x38B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3917 JUMPI PUSH2 0x3916 PUSH2 0x37EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3927 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3946 JUMPI PUSH2 0x3945 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3964 JUMPI PUSH2 0x3963 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3970 DUP5 DUP3 DUP6 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39DF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39C4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F6 DUP3 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x3A00 DUP2 DUP6 PUSH2 0x39B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A10 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39C1 JUMP JUMPDEST PUSH2 0x3A19 DUP2 PUSH2 0x37F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A30 DUP4 DUP4 PUSH2 0x39EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A50 DUP3 PUSH2 0x3979 JUMP JUMPDEST PUSH2 0x3A5A DUP2 DUP6 PUSH2 0x3984 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3A6C DUP6 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3AA8 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3A89 DUP6 DUP3 PUSH2 0x3A24 JUMP JUMPDEST SWAP5 POP PUSH2 0x3A94 DUP4 PUSH2 0x3A38 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3A70 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AD4 DUP2 DUP5 PUSH2 0x3A45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AEF DUP2 PUSH2 0x3ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B0A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B19 DUP2 PUSH2 0x3ADC JUMP JUMPDEST DUP2 EQ PUSH2 0x3B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B36 DUP2 PUSH2 0x3B10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B52 JUMPI PUSH2 0x3B51 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B60 DUP5 DUP3 DUP6 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B85 DUP3 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x3B8F DUP2 DUP6 PUSH2 0x3B69 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B9F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39C1 JUMP JUMPDEST PUSH2 0x3BA8 DUP2 PUSH2 0x37F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BCD DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3BE1 DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AE6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3C14 JUMPI PUSH2 0x3C13 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C32 JUMPI PUSH2 0x3C31 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3C3E DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3C4F DUP9 DUP3 DUP10 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3C60 DUP9 DUP3 DUP10 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C81 JUMPI PUSH2 0x3C80 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3C8D DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CAE JUMPI PUSH2 0x3CAD PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3CBA DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CE1 DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CF5 DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D09 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D2D DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x3D3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D4E DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3D6D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x3D7A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x3D87 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3D99 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DD9 DUP2 PUSH2 0x3ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DEB DUP4 DUP4 PUSH2 0x3DD0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E0F DUP3 PUSH2 0x3DA4 JUMP JUMPDEST PUSH2 0x3E19 DUP2 DUP6 PUSH2 0x3DAF JUMP JUMPDEST SWAP4 POP PUSH2 0x3E24 DUP4 PUSH2 0x3DC0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E55 JUMPI DUP2 MLOAD PUSH2 0x3E3C DUP9 DUP3 PUSH2 0x3DDF JUMP JUMPDEST SWAP8 POP PUSH2 0x3E47 DUP4 PUSH2 0x3DF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E28 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E7C DUP2 DUP5 PUSH2 0x3E04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E99 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x3EA6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3EB8 DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3ECC DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EF1 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F13 JUMPI PUSH2 0x3F12 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F31 JUMPI PUSH2 0x3F30 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3F3D DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3F4E DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F6F JUMPI PUSH2 0x3F6E PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3F7B DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F9C JUMPI PUSH2 0x3F9B PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3FA8 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FCE DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3FE2 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4005 DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x4014 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x4021 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AE6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4043 JUMPI PUSH2 0x4042 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4061 JUMPI PUSH2 0x4060 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x406D DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x408E JUMPI PUSH2 0x408D PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x409A DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40BB JUMPI PUSH2 0x40BA PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x40C7 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x40D8 DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40FB JUMPI PUSH2 0x40FA PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4109 DUP6 DUP3 DUP7 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x412A JUMPI PUSH2 0x4129 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4136 DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4159 JUMPI PUSH2 0x4158 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4167 DUP7 DUP3 DUP8 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4188 JUMPI PUSH2 0x4187 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4194 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41B5 JUMPI PUSH2 0x41B4 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x41C1 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41E0 DUP2 PUSH2 0x41CB JUMP JUMPDEST DUP2 EQ PUSH2 0x41EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41FD DUP2 PUSH2 0x41D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x421F JUMPI PUSH2 0x421E PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x423D JUMPI PUSH2 0x423C PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4249 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x426A JUMPI PUSH2 0x4269 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4276 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4287 DUP9 DUP3 DUP10 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42A8 JUMPI PUSH2 0x42A7 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x42B4 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x42C5 DUP9 DUP3 DUP10 ADD PUSH2 0x41EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x42EC JUMPI PUSH2 0x42EB PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42FA DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x430B DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x431C DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x433D JUMPI PUSH2 0x433C PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4349 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x436C JUMPI PUSH2 0x436B PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x438A JUMPI PUSH2 0x4389 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4396 DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x43A7 DUP6 DUP3 DUP7 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x43BA DUP2 PUSH2 0x41CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x43D6 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x43E3 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x43F0 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x43FD PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x440A PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x4417 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x4424 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x4431 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x443F PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x43B1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4462 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4482 JUMPI PUSH2 0x4481 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44A0 JUMPI PUSH2 0x449F PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x44AC DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44CD JUMPI PUSH2 0x44CC PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x44D9 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x44EA DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x450B JUMPI PUSH2 0x450A PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4517 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4538 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x454A DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x455E DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4572 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4594 JUMPI PUSH2 0x4593 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45B2 JUMPI PUSH2 0x45B1 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x45BE DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45DF JUMPI PUSH2 0x45DE PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x45EB DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x460F JUMPI PUSH2 0x460E PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x461D DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x463E JUMPI PUSH2 0x463D PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x464A DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x465B DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x466C DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4693 JUMPI PUSH2 0x4692 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x46BC PUSH2 0x46B7 DUP5 PUSH2 0x4678 JUMP JUMPDEST PUSH2 0x3865 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x46DF JUMPI PUSH2 0x46DE PUSH2 0x46A4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4726 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4704 JUMPI PUSH2 0x4703 PUSH2 0x37EA JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4711 DUP10 DUP3 PUSH2 0x3902 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x46E1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4745 JUMPI PUSH2 0x4744 PUSH2 0x37EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4755 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x46A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x477A JUMPI PUSH2 0x4779 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4798 JUMPI PUSH2 0x4797 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x47A4 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47C5 JUMPI PUSH2 0x47C4 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x47D1 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47F2 JUMPI PUSH2 0x47F1 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x47FE DUP9 DUP3 DUP10 ADD PUSH2 0x4730 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x480F DUP9 DUP3 DUP10 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4830 JUMPI PUSH2 0x482F PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x483C DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x485E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x486B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x487D DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x48CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x48E1 JUMPI PUSH2 0x48E0 PUSH2 0x4887 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4914 DUP2 PUSH2 0x48B6 JUMP JUMPDEST PUSH2 0x491E DUP2 DUP7 PUSH2 0x48E7 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4939 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x494E JUMPI PUSH2 0x4981 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x4981 JUMP JUMPDEST PUSH2 0x4957 DUP6 PUSH2 0x48F2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4979 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x495A JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4996 DUP3 DUP5 PUSH2 0x4907 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A0A DUP3 PUSH2 0x3ADC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4A3C JUMPI PUSH2 0x4A3B PUSH2 0x49D0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A52 DUP3 PUSH2 0x3ADC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A5D DUP4 PUSH2 0x3ADC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4A75 JUMPI PUSH2 0x4A74 PUSH2 0x49D0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4AA0 JUMP JUMPDEST PUSH2 0x4AE7 DUP7 DUP4 PUSH2 0x4AA0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B24 PUSH2 0x4B1F PUSH2 0x4B1A DUP5 PUSH2 0x3ADC JUMP JUMPDEST PUSH2 0x4AFF JUMP JUMPDEST PUSH2 0x3ADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B3E DUP4 PUSH2 0x4B09 JUMP JUMPDEST PUSH2 0x4B52 PUSH2 0x4B4A DUP3 PUSH2 0x4B2B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4AAD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4B67 PUSH2 0x4B5A JUMP JUMPDEST PUSH2 0x4B72 DUP2 DUP5 DUP5 PUSH2 0x4B35 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4B96 JUMPI PUSH2 0x4B8B PUSH1 0x0 DUP3 PUSH2 0x4B5F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4B78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4BDB JUMPI PUSH2 0x4BAC DUP2 PUSH2 0x4A7B JUMP JUMPDEST PUSH2 0x4BB5 DUP5 PUSH2 0x4A90 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4BC4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4BD8 PUSH2 0x4BD0 DUP6 PUSH2 0x4A90 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4B77 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BFE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4BE0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C17 DUP4 DUP4 PUSH2 0x4BED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C30 DUP3 PUSH2 0x39A5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C49 JUMPI PUSH2 0x4C48 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH2 0x4C53 DUP3 SLOAD PUSH2 0x48B6 JUMP JUMPDEST PUSH2 0x4C5E DUP3 DUP3 DUP6 PUSH2 0x4B9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C91 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4C7F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C89 DUP6 DUP3 PUSH2 0x4C0B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4CF1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4C9F DUP7 PUSH2 0x4A7B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4CC7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4CA2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4CE4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4CE0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4BED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xD3 POP PUSH4 0x2A49B4EB SWAP14 0xEE DUP16 0xE1 0xAC 0xDA 0xEB 0xB5 PUSH29 0xBAC822EBA5A8D3D1C1CAED8A6BF9DA64736F6C63430008110033000000 ","sourceMap":"170:14666:6:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_dao_ids_1864":{"entryPoint":6958,"id":1864,"parameterSlots":0,"returnSlots":0},"@_dao_uris_1889":{"entryPoint":4473,"id":1889,"parameterSlots":0,"returnSlots":0},"@_donated_1912":{"entryPoint":4449,"id":1912,"parameterSlots":0,"returnSlots":0},"@_donations_1922":{"entryPoint":7517,"id":1922,"parameterSlots":0,"returnSlots":0},"@_donations_ids_1866":{"entryPoint":13921,"id":1866,"parameterSlots":0,"returnSlots":0},"@_feed_ids_1884":{"entryPoint":9156,"id":1884,"parameterSlots":0,"returnSlots":0},"@_feeds_1917":{"entryPoint":6310,"id":1917,"parameterSlots":0,"returnSlots":0},"@_goal_ids_1868":{"entryPoint":3623,"id":1868,"parameterSlots":0,"returnSlots":0},"@_goal_uris_1903":{"entryPoint":7209,"id":1903,"parameterSlots":0,"returnSlots":0},"@_ideas_ids_1870":{"entryPoint":13197,"id":1870,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_1908":{"entryPoint":5990,"id":1908,"parameterSlots":0,"returnSlots":0},"@_ideas_vote_ids_1876":{"entryPoint":6304,"id":1876,"parameterSlots":0,"returnSlots":0},"@_join_ids_1872":{"entryPoint":3617,"id":1872,"parameterSlots":0,"returnSlots":0},"@_joined_person_1898":{"entryPoint":5238,"id":1898,"parameterSlots":0,"returnSlots":0},"@_message_ids_1878":{"entryPoint":9330,"id":1878,"parameterSlots":0,"returnSlots":0},"@_message_read_ids_1880":{"entryPoint":12641,"id":1880,"parameterSlots":0,"returnSlots":0},"@_reply_ids_1882":{"entryPoint":10392,"id":1882,"parameterSlots":0,"returnSlots":0},"@_smart_contract_ids_1874":{"entryPoint":3629,"id":1874,"parameterSlots":0,"returnSlots":0},"@_smart_contracts_uris_1927":{"entryPoint":13927,"id":1927,"parameterSlots":0,"returnSlots":0},"@_template_uris_1893":{"entryPoint":6798,"id":1893,"parameterSlots":0,"returnSlots":0},"@_user_badges_1952":{"entryPoint":10061,"id":1952,"parameterSlots":0,"returnSlots":0},"@add_Feed_2109":{"entryPoint":12096,"id":2109,"parameterSlots":2,"returnSlots":0},"@add_donation_2487":{"entryPoint":4062,"id":2487,"parameterSlots":5,"returnSlots":0},"@all_goal_ideas_votes_1932":{"entryPoint":3635,"id":1932,"parameterSlots":0,"returnSlots":0},"@all_messages_1937":{"entryPoint":11640,"id":1937,"parameterSlots":0,"returnSlots":0},"@all_read_messages_1942":{"entryPoint":12868,"id":1942,"parameterSlots":0,"returnSlots":0},"@all_replies_1947":{"entryPoint":5552,"id":1947,"parameterSlots":0,"returnSlots":0},"@create_dao_1994":{"entryPoint":8492,"id":1994,"parameterSlots":4,"returnSlots":1},"@create_goal_2149":{"entryPoint":11402,"id":2149,"parameterSlots":4,"returnSlots":1},"@create_goal_ideas_vote_2895":{"entryPoint":8894,"id":2895,"parameterSlots":5,"returnSlots":1},"@create_ideas_2394":{"entryPoint":13400,"id":2394,"parameterSlots":5,"returnSlots":1},"@create_ideas_smart_contract_2414":{"entryPoint":14105,"id":2414,"parameterSlots":3,"returnSlots":0},"@dao_uri_2086":{"entryPoint":6630,"id":2086,"parameterSlots":1,"returnSlots":1},"@getMsgIDs_2999":{"entryPoint":5736,"id":2999,"parameterSlots":1,"returnSlots":1},"@getReadMsg_3180":{"entryPoint":13052,"id":3180,"parameterSlots":2,"returnSlots":1},"@getReplyIDs_3093":{"entryPoint":7695,"id":3093,"parameterSlots":1,"returnSlots":1},"@get_all_daos_2073":{"entryPoint":12287,"id":2073,"parameterSlots":0,"returnSlots":1},"@get_all_goals_2205":{"entryPoint":4923,"id":2205,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_2272":{"entryPoint":3223,"id":2272,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_2685":{"entryPoint":9484,"id":2685,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_2751":{"entryPoint":8098,"id":2751,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_2313":{"entryPoint":3949,"id":2313,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_2836":{"entryPoint":10398,"id":2836,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_2792":{"entryPoint":9799,"id":2792,"parameterSlots":1,"returnSlots":1},"@get_person_joinedID_2644":{"entryPoint":9912,"id":2644,"parameterSlots":2,"returnSlots":1},"@goal_uri_2326":{"entryPoint":13753,"id":2326,"parameterSlots":1,"returnSlots":1},"@ideas_uri_2849":{"entryPoint":9162,"id":2849,"parameterSlots":1,"returnSlots":1},"@is_person_joined_2592":{"entryPoint":10243,"id":2592,"parameterSlots":2,"returnSlots":1},"@join_community_2524":{"entryPoint":6964,"id":2524,"parameterSlots":4,"returnSlots":0},"@leave_community_2540":{"entryPoint":7922,"id":2540,"parameterSlots":1,"returnSlots":0},"@reset_all_3320":{"entryPoint":10680,"id":3320,"parameterSlots":0,"returnSlots":0},"@sendMsg_2932":{"entryPoint":12647,"id":2932,"parameterSlots":4,"returnSlots":1},"@sendReadMsg_3123":{"entryPoint":9336,"id":3123,"parameterSlots":4,"returnSlots":1},"@sendReply_3036":{"entryPoint":13203,"id":3036,"parameterSlots":4,"returnSlots":1},"@set_dao_2032":{"entryPoint":8817,"id":2032,"parameterSlots":3,"returnSlots":0},"@set_goal_2164":{"entryPoint":12601,"id":2164,"parameterSlots":2,"returnSlots":0},"@set_ideas_2429":{"entryPoint":12247,"id":2429,"parameterSlots":2,"returnSlots":0},"@update_template_2008":{"entryPoint":8780,"id":2008,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":18089,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":14528,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":18224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":16878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":14594,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":15143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":14640,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":17789,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":18270,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":16425,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":17512,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptrt_bool":{"entryPoint":16899,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":17237,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":16121,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":15352,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":15164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":16612,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":16704,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256":{"entryPoint":17909,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr":{"entryPoint":17106,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":14884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":15839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15876,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":17329,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":14827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":15824,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":15078,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":17485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16308,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15559,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15283,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_string_memory_ptr__to_t_string_memory_ptr_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15635,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16363,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":15093,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":17344,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17699,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18505,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16004,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15704,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":14437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14294,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":18040,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":14464,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14741,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15808,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":18674,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":19067,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14713,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15780,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14757,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14904,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15863,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14724,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15791,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18663,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":14768,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15209,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":19015,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":19354,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_bool":{"entryPoint":16843,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":15068,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":19319,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":19209,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":19495,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14513,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14785,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":19088,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":18614,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":19467,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":14388,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":19199,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18943,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":19437,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":18896,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":18567,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18849,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14341,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":19243,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":14314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":18084,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":14319,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":14309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14304,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14324,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":19104,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":19424,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":19295,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":19117,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":19253,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":16855,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":15120,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":19290,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:40197:7","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:7","statements":[{"nodeType":"YulAssignment","src":"57:19:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:7"},"nodeType":"YulFunctionCall","src":"67:9:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:7"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:7","type":""}],"src":"7:75:7"},{"body":{"nodeType":"YulBlock","src":"177:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:7"},"nodeType":"YulFunctionCall","src":"187:12:7"},"nodeType":"YulExpressionStatement","src":"187:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:7"},{"body":{"nodeType":"YulBlock","src":"300:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:7"},"nodeType":"YulFunctionCall","src":"310:12:7"},"nodeType":"YulExpressionStatement","src":"310:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:7"},{"body":{"nodeType":"YulBlock","src":"423:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:7"},"nodeType":"YulFunctionCall","src":"433:12:7"},"nodeType":"YulExpressionStatement","src":"433:12:7"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:7"},{"body":{"nodeType":"YulBlock","src":"546:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:7"},"nodeType":"YulFunctionCall","src":"556:12:7"},"nodeType":"YulExpressionStatement","src":"556:12:7"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:7"},{"body":{"nodeType":"YulBlock","src":"628:54:7","statements":[{"nodeType":"YulAssignment","src":"638:38:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:7"},"nodeType":"YulFunctionCall","src":"652:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:7","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:7"},"nodeType":"YulFunctionCall","src":"668:7:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:7"},"nodeType":"YulFunctionCall","src":"648:28:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:7"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:7","type":""}],"src":"580:102:7"},{"body":{"nodeType":"YulBlock","src":"716:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:7"},"nodeType":"YulFunctionCall","src":"726:88:7"},"nodeType":"YulExpressionStatement","src":"726:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:7"},"nodeType":"YulFunctionCall","src":"823:15:7"},"nodeType":"YulExpressionStatement","src":"823:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:7"},"nodeType":"YulFunctionCall","src":"847:15:7"},"nodeType":"YulExpressionStatement","src":"847:15:7"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:7"},{"body":{"nodeType":"YulBlock","src":"917:238:7","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:7","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:7"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:7"},"nodeType":"YulFunctionCall","src":"957:27:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:7"},"nodeType":"YulFunctionCall","src":"945:40:7"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:7"},"nodeType":"YulFunctionCall","src":"1098:18:7"},"nodeType":"YulExpressionStatement","src":"1098:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:7"},"nodeType":"YulFunctionCall","src":"1036:34:7"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:7"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:7"},"nodeType":"YulFunctionCall","src":"1072:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:7"},"nodeType":"YulFunctionCall","src":"1033:62:7"},"nodeType":"YulIf","src":"1030:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:7","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:7"},"nodeType":"YulFunctionCall","src":"1127:22:7"},"nodeType":"YulExpressionStatement","src":"1127:22:7"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:7","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:7","type":""}],"src":"874:281:7"},{"body":{"nodeType":"YulBlock","src":"1202:88:7","statements":[{"nodeType":"YulAssignment","src":"1212:30:7","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:7"},"nodeType":"YulFunctionCall","src":"1222:20:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:7"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:7"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:7"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:7"},"nodeType":"YulFunctionCall","src":"1251:33:7"},"nodeType":"YulExpressionStatement","src":"1251:33:7"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:7","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:7","type":""}],"src":"1161:129:7"},{"body":{"nodeType":"YulBlock","src":"1363:241:7","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:7"},"nodeType":"YulFunctionCall","src":"1470:18:7"},"nodeType":"YulExpressionStatement","src":"1470:18:7"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:7"},"nodeType":"YulFunctionCall","src":"1437:30:7"},"nodeType":"YulIf","src":"1434:56:7"},{"nodeType":"YulAssignment","src":"1500:37:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:7"},"nodeType":"YulFunctionCall","src":"1508:29:7"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:7"}]},{"nodeType":"YulAssignment","src":"1574:23:7","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:7"},"nodeType":"YulFunctionCall","src":"1582:15:7"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:7"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:7","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:7","type":""}],"src":"1296:308:7"},{"body":{"nodeType":"YulBlock","src":"1674:82:7","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1697:3:7"},{"name":"src","nodeType":"YulIdentifier","src":"1702:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"1707:6:7"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1684:12:7"},"nodeType":"YulFunctionCall","src":"1684:30:7"},"nodeType":"YulExpressionStatement","src":"1684:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1734:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"1739:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:7"},"nodeType":"YulFunctionCall","src":"1730:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1723:6:7"},"nodeType":"YulFunctionCall","src":"1723:27:7"},"nodeType":"YulExpressionStatement","src":"1723:27:7"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1656:3:7","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1661:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"1666:6:7","type":""}],"src":"1610:146:7"},{"body":{"nodeType":"YulBlock","src":"1846:341:7","statements":[{"nodeType":"YulAssignment","src":"1856:75:7","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1923:6:7"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1881:41:7"},"nodeType":"YulFunctionCall","src":"1881:49:7"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1865:15:7"},"nodeType":"YulFunctionCall","src":"1865:66:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1856:5:7"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1947:5:7"},{"name":"length","nodeType":"YulIdentifier","src":"1954:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:7"},"nodeType":"YulFunctionCall","src":"1940:21:7"},"nodeType":"YulExpressionStatement","src":"1940:21:7"},{"nodeType":"YulVariableDeclaration","src":"1970:27:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1985:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1992:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:7"},"nodeType":"YulFunctionCall","src":"1981:16:7"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1974:3:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"2035:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2037:77:7"},"nodeType":"YulFunctionCall","src":"2037:79:7"},"nodeType":"YulExpressionStatement","src":"2037:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2016:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"2021:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:7"},"nodeType":"YulFunctionCall","src":"2012:16:7"},{"name":"end","nodeType":"YulIdentifier","src":"2030:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2009:2:7"},"nodeType":"YulFunctionCall","src":"2009:25:7"},"nodeType":"YulIf","src":"2006:112:7"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2164:3:7"},{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:7"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2127:36:7"},"nodeType":"YulFunctionCall","src":"2127:54:7"},"nodeType":"YulExpressionStatement","src":"2127:54:7"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1819:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"1824:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:7","type":""}],"src":"1762:425:7"},{"body":{"nodeType":"YulBlock","src":"2269:278:7","statements":[{"body":{"nodeType":"YulBlock","src":"2318:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2320:77:7"},"nodeType":"YulFunctionCall","src":"2320:79:7"},"nodeType":"YulExpressionStatement","src":"2320:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2297:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:7"},"nodeType":"YulFunctionCall","src":"2293:17:7"},{"name":"end","nodeType":"YulIdentifier","src":"2312:3:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2289:3:7"},"nodeType":"YulFunctionCall","src":"2289:27:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2282:6:7"},"nodeType":"YulFunctionCall","src":"2282:35:7"},"nodeType":"YulIf","src":"2279:122:7"},{"nodeType":"YulVariableDeclaration","src":"2410:34:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2424:12:7"},"nodeType":"YulFunctionCall","src":"2424:20:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2414:6:7","type":""}]},{"nodeType":"YulAssignment","src":"2453:88:7","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2514:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2522:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:7"},"nodeType":"YulFunctionCall","src":"2510:17:7"},{"name":"length","nodeType":"YulIdentifier","src":"2529:6:7"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:7"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2462:47:7"},"nodeType":"YulFunctionCall","src":"2462:79:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2453:5:7"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2247:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2263:5:7","type":""}],"src":"2207:340:7"},{"body":{"nodeType":"YulBlock","src":"2629:433:7","statements":[{"body":{"nodeType":"YulBlock","src":"2675:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2677:77:7"},"nodeType":"YulFunctionCall","src":"2677:79:7"},"nodeType":"YulExpressionStatement","src":"2677:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2650:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2659:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2646:3:7"},"nodeType":"YulFunctionCall","src":"2646:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2642:3:7"},"nodeType":"YulFunctionCall","src":"2642:32:7"},"nodeType":"YulIf","src":"2639:119:7"},{"nodeType":"YulBlock","src":"2768:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2783:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2814:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2825:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:7"},"nodeType":"YulFunctionCall","src":"2810:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2797:12:7"},"nodeType":"YulFunctionCall","src":"2797:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2787:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"2875:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2877:77:7"},"nodeType":"YulFunctionCall","src":"2877:79:7"},"nodeType":"YulExpressionStatement","src":"2877:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2855:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2844:2:7"},"nodeType":"YulFunctionCall","src":"2844:30:7"},"nodeType":"YulIf","src":"2841:117:7"},{"nodeType":"YulAssignment","src":"2972:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3028:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:7"},"nodeType":"YulFunctionCall","src":"3013:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3037:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2982:30:7"},"nodeType":"YulFunctionCall","src":"2982:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2972:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2599:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2610:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2622:6:7","type":""}],"src":"2553:509:7"},{"body":{"nodeType":"YulBlock","src":"3152:40:7","statements":[{"nodeType":"YulAssignment","src":"3163:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3179:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3173:5:7"},"nodeType":"YulFunctionCall","src":"3173:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3163:6:7"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3135:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3145:6:7","type":""}],"src":"3068:124:7"},{"body":{"nodeType":"YulBlock","src":"3319:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3336:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"3341:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3329:6:7"},"nodeType":"YulFunctionCall","src":"3329:19:7"},"nodeType":"YulExpressionStatement","src":"3329:19:7"},{"nodeType":"YulAssignment","src":"3357:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3376:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3381:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3372:3:7"},"nodeType":"YulFunctionCall","src":"3372:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3357:11:7"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3291:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"3296:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3307:11:7","type":""}],"src":"3198:194:7"},{"body":{"nodeType":"YulBlock","src":"3480:60:7","statements":[{"nodeType":"YulAssignment","src":"3490:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3498:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3490:4:7"}]},{"nodeType":"YulAssignment","src":"3511:22:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3523:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3528:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3519:3:7"},"nodeType":"YulFunctionCall","src":"3519:14:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:7"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3467:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3475:4:7","type":""}],"src":"3398:142:7"},{"body":{"nodeType":"YulBlock","src":"3605:40:7","statements":[{"nodeType":"YulAssignment","src":"3616:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3632:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3626:5:7"},"nodeType":"YulFunctionCall","src":"3626:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3616:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3588:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3598:6:7","type":""}],"src":"3546:99:7"},{"body":{"nodeType":"YulBlock","src":"3737:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3754:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"3759:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:7"},"nodeType":"YulFunctionCall","src":"3747:19:7"},"nodeType":"YulExpressionStatement","src":"3747:19:7"},{"nodeType":"YulAssignment","src":"3775:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3794:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3799:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:7"},"nodeType":"YulFunctionCall","src":"3790:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3775:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3709:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"3714:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3725:11:7","type":""}],"src":"3651:159:7"},{"body":{"nodeType":"YulBlock","src":"3878:184:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3888:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"3897:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3892:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3957:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3982:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"3987:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3978:3:7"},"nodeType":"YulFunctionCall","src":"3978:11:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4001:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"4006:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:7"},"nodeType":"YulFunctionCall","src":"3997:11:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3991:5:7"},"nodeType":"YulFunctionCall","src":"3991:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3971:6:7"},"nodeType":"YulFunctionCall","src":"3971:39:7"},"nodeType":"YulExpressionStatement","src":"3971:39:7"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3918:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"3921:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3915:2:7"},"nodeType":"YulFunctionCall","src":"3915:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3929:19:7","statements":[{"nodeType":"YulAssignment","src":"3931:15:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3940:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:7"},"nodeType":"YulFunctionCall","src":"3936:10:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3931:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"3911:3:7","statements":[]},"src":"3907:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4040:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"4045:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:7"},"nodeType":"YulFunctionCall","src":"4036:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"4054:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:7"},"nodeType":"YulFunctionCall","src":"4029:27:7"},"nodeType":"YulExpressionStatement","src":"4029:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3860:3:7","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3865:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"3870:6:7","type":""}],"src":"3816:246:7"},{"body":{"nodeType":"YulBlock","src":"4150:275:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4160:53:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4207:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4174:32:7"},"nodeType":"YulFunctionCall","src":"4174:39:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4164:6:7","type":""}]},{"nodeType":"YulAssignment","src":"4222:68:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4278:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"4283:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4229:48:7"},"nodeType":"YulFunctionCall","src":"4229:61:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4222:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4338:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"4345:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4334:3:7"},"nodeType":"YulFunctionCall","src":"4334:16:7"},{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"4357:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4299:34:7"},"nodeType":"YulFunctionCall","src":"4299:65:7"},"nodeType":"YulExpressionStatement","src":"4299:65:7"},{"nodeType":"YulAssignment","src":"4373:46:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4384:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4411:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4389:21:7"},"nodeType":"YulFunctionCall","src":"4389:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4380:3:7"},"nodeType":"YulFunctionCall","src":"4380:39:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4373:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4131:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4138:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4146:3:7","type":""}],"src":"4068:357:7"},{"body":{"nodeType":"YulBlock","src":"4531:96:7","statements":[{"nodeType":"YulAssignment","src":"4541:80:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:7"},{"name":"pos","nodeType":"YulIdentifier","src":"4617:3:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4555:53:7"},"nodeType":"YulFunctionCall","src":"4555:66:7"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4541:10:7"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4504:6:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4512:3:7","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4520:10:7","type":""}],"src":"4431:196:7"},{"body":{"nodeType":"YulBlock","src":"4718:38:7","statements":[{"nodeType":"YulAssignment","src":"4728:22:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4740:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4745:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4736:3:7"},"nodeType":"YulFunctionCall","src":"4736:14:7"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"4728:4:7"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4705:3:7","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"4713:4:7","type":""}],"src":"4633:123:7"},{"body":{"nodeType":"YulBlock","src":"4934:847:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4944:78:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5016:5:7"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4958:57:7"},"nodeType":"YulFunctionCall","src":"4958:64:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4948:6:7","type":""}]},{"nodeType":"YulAssignment","src":"5031:103:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5122:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"5127:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5038:83:7"},"nodeType":"YulFunctionCall","src":"5038:96:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5031:3:7"}]},{"nodeType":"YulVariableDeclaration","src":"5143:20:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"5160:3:7"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"5147:9:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5172:39:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5188:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5197:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"5205:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5193:3:7"},"nodeType":"YulFunctionCall","src":"5193:17:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5184:3:7"},"nodeType":"YulFunctionCall","src":"5184:27:7"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5176:4:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5220:81:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5295:5:7"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5235:59:7"},"nodeType":"YulFunctionCall","src":"5235:66:7"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5224:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5310:21:7","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5324:7:7"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5314:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"5400:336:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5421:3:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5430:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"5436:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5426:3:7"},"nodeType":"YulFunctionCall","src":"5426:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:7"},"nodeType":"YulFunctionCall","src":"5414:33:7"},"nodeType":"YulExpressionStatement","src":"5414:33:7"},{"nodeType":"YulVariableDeclaration","src":"5460:34:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5487:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5481:5:7"},"nodeType":"YulFunctionCall","src":"5481:13:7"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5464:13:7","type":""}]},{"nodeType":"YulAssignment","src":"5507:92:7","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5579:13:7"},{"name":"tail","nodeType":"YulIdentifier","src":"5594:4:7"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5515:63:7"},"nodeType":"YulFunctionCall","src":"5515:84:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5507:4:7"}]},{"nodeType":"YulAssignment","src":"5612:80:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5685:6:7"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5622:62:7"},"nodeType":"YulFunctionCall","src":"5622:70:7"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5612:6:7"}]},{"nodeType":"YulAssignment","src":"5705:21:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5716:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"5721:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5712:3:7"},"nodeType":"YulFunctionCall","src":"5712:14:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5362:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"5365:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5359:2:7"},"nodeType":"YulFunctionCall","src":"5359:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5373:18:7","statements":[{"nodeType":"YulAssignment","src":"5375:14:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5384:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"5387:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:7"},"nodeType":"YulFunctionCall","src":"5380:9:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5375:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"5344:14:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5346:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5355:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5350:1:7","type":""}]}]},"src":"5340:396:7"},{"nodeType":"YulAssignment","src":"5745:11:7","value":{"name":"tail","nodeType":"YulIdentifier","src":"5752:4:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5745:3:7"}]},{"nodeType":"YulAssignment","src":"5765:10:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"5772:3:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5765:3:7"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4913:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4920:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4929:3:7","type":""}],"src":"4790:991:7"},{"body":{"nodeType":"YulBlock","src":"5955:245:7","statements":[{"nodeType":"YulAssignment","src":"5965:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5988:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5973:3:7"},"nodeType":"YulFunctionCall","src":"5973:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5965:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6012:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6023:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6008:3:7"},"nodeType":"YulFunctionCall","src":"6008:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6031:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"6037:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6027:3:7"},"nodeType":"YulFunctionCall","src":"6027:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6001:6:7"},"nodeType":"YulFunctionCall","src":"6001:47:7"},"nodeType":"YulExpressionStatement","src":"6001:47:7"},{"nodeType":"YulAssignment","src":"6057:136:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6179:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"6188:4:7"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6065:113:7"},"nodeType":"YulFunctionCall","src":"6065:128:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6057:4:7"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5927:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5939:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5950:4:7","type":""}],"src":"5787:413:7"},{"body":{"nodeType":"YulBlock","src":"6251:32:7","statements":[{"nodeType":"YulAssignment","src":"6261:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"6272:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6261:7:7"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6243:7:7","type":""}],"src":"6206:77:7"},{"body":{"nodeType":"YulBlock","src":"6354:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6371:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6394:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6376:17:7"},"nodeType":"YulFunctionCall","src":"6376:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6364:6:7"},"nodeType":"YulFunctionCall","src":"6364:37:7"},"nodeType":"YulExpressionStatement","src":"6364:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6342:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6349:3:7","type":""}],"src":"6289:118:7"},{"body":{"nodeType":"YulBlock","src":"6511:124:7","statements":[{"nodeType":"YulAssignment","src":"6521:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6533:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6544:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6529:3:7"},"nodeType":"YulFunctionCall","src":"6529:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6521:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6601:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6614:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6625:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6610:3:7"},"nodeType":"YulFunctionCall","src":"6610:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6557:43:7"},"nodeType":"YulFunctionCall","src":"6557:71:7"},"nodeType":"YulExpressionStatement","src":"6557:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6483:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6495:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6506:4:7","type":""}],"src":"6413:222:7"},{"body":{"nodeType":"YulBlock","src":"6684:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"6741:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6750:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6753:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6743:6:7"},"nodeType":"YulFunctionCall","src":"6743:12:7"},"nodeType":"YulExpressionStatement","src":"6743:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6707:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6732:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6714:17:7"},"nodeType":"YulFunctionCall","src":"6714:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6704:2:7"},"nodeType":"YulFunctionCall","src":"6704:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6697:6:7"},"nodeType":"YulFunctionCall","src":"6697:43:7"},"nodeType":"YulIf","src":"6694:63:7"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6677:5:7","type":""}],"src":"6641:122:7"},{"body":{"nodeType":"YulBlock","src":"6821:87:7","statements":[{"nodeType":"YulAssignment","src":"6831:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6853:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6840:12:7"},"nodeType":"YulFunctionCall","src":"6840:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6831:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6896:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6869:26:7"},"nodeType":"YulFunctionCall","src":"6869:33:7"},"nodeType":"YulExpressionStatement","src":"6869:33:7"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6799:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"6807:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6815:5:7","type":""}],"src":"6769:139:7"},{"body":{"nodeType":"YulBlock","src":"6980:263:7","statements":[{"body":{"nodeType":"YulBlock","src":"7026:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7028:77:7"},"nodeType":"YulFunctionCall","src":"7028:79:7"},"nodeType":"YulExpressionStatement","src":"7028:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7001:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"7010:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6997:3:7"},"nodeType":"YulFunctionCall","src":"6997:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"7022:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6993:3:7"},"nodeType":"YulFunctionCall","src":"6993:32:7"},"nodeType":"YulIf","src":"6990:119:7"},{"nodeType":"YulBlock","src":"7119:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"7134:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"7148:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7138:6:7","type":""}]},{"nodeType":"YulAssignment","src":"7163:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7198:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"7209:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7194:3:7"},"nodeType":"YulFunctionCall","src":"7194:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7218:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7173:20:7"},"nodeType":"YulFunctionCall","src":"7173:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7163:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6950:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6961:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6973:6:7","type":""}],"src":"6914:329:7"},{"body":{"nodeType":"YulBlock","src":"7345:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7362:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"7367:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7355:6:7"},"nodeType":"YulFunctionCall","src":"7355:19:7"},"nodeType":"YulExpressionStatement","src":"7355:19:7"},{"nodeType":"YulAssignment","src":"7383:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7402:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"7407:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7398:3:7"},"nodeType":"YulFunctionCall","src":"7398:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7383:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7317:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"7322:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7333:11:7","type":""}],"src":"7249:169:7"},{"body":{"nodeType":"YulBlock","src":"7516:285:7","statements":[{"nodeType":"YulVariableDeclaration","src":"7526:53:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7573:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7540:32:7"},"nodeType":"YulFunctionCall","src":"7540:39:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7530:6:7","type":""}]},{"nodeType":"YulAssignment","src":"7588:78:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7654:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"7659:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7595:58:7"},"nodeType":"YulFunctionCall","src":"7595:71:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7588:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7714:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"7721:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7710:3:7"},"nodeType":"YulFunctionCall","src":"7710:16:7"},{"name":"pos","nodeType":"YulIdentifier","src":"7728:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"7733:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7675:34:7"},"nodeType":"YulFunctionCall","src":"7675:65:7"},"nodeType":"YulExpressionStatement","src":"7675:65:7"},{"nodeType":"YulAssignment","src":"7749:46:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7760:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7787:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7765:21:7"},"nodeType":"YulFunctionCall","src":"7765:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7756:3:7"},"nodeType":"YulFunctionCall","src":"7756:39:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7749:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7497:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7504:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7512:3:7","type":""}],"src":"7424:377:7"},{"body":{"nodeType":"YulBlock","src":"8001:430:7","statements":[{"nodeType":"YulAssignment","src":"8011:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8023:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8034:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8019:3:7"},"nodeType":"YulFunctionCall","src":"8019:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8011:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8058:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8069:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8054:3:7"},"nodeType":"YulFunctionCall","src":"8054:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8077:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"8083:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8073:3:7"},"nodeType":"YulFunctionCall","src":"8073:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8047:6:7"},"nodeType":"YulFunctionCall","src":"8047:47:7"},"nodeType":"YulExpressionStatement","src":"8047:47:7"},{"nodeType":"YulAssignment","src":"8103:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8175:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"8184:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8111:63:7"},"nodeType":"YulFunctionCall","src":"8111:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8103:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8210:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8221:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8206:3:7"},"nodeType":"YulFunctionCall","src":"8206:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8230:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"8236:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8226:3:7"},"nodeType":"YulFunctionCall","src":"8226:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8199:6:7"},"nodeType":"YulFunctionCall","src":"8199:48:7"},"nodeType":"YulExpressionStatement","src":"8199:48:7"},{"nodeType":"YulAssignment","src":"8256:86:7","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8328:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"8337:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8264:63:7"},"nodeType":"YulFunctionCall","src":"8264:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8256:4:7"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8396:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8409:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8420:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8405:3:7"},"nodeType":"YulFunctionCall","src":"8405:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8352:43:7"},"nodeType":"YulFunctionCall","src":"8352:72:7"},"nodeType":"YulExpressionStatement","src":"8352:72:7"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7957:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7969:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7977:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7985:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7996:4:7","type":""}],"src":"7807:624:7"},{"body":{"nodeType":"YulBlock","src":"8601:1287:7","statements":[{"body":{"nodeType":"YulBlock","src":"8648:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8650:77:7"},"nodeType":"YulFunctionCall","src":"8650:79:7"},"nodeType":"YulExpressionStatement","src":"8650:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8622:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"8631:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8618:3:7"},"nodeType":"YulFunctionCall","src":"8618:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"8643:3:7","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8614:3:7"},"nodeType":"YulFunctionCall","src":"8614:33:7"},"nodeType":"YulIf","src":"8611:120:7"},{"nodeType":"YulBlock","src":"8741:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8756:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8787:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8798:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:7"},"nodeType":"YulFunctionCall","src":"8783:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8770:12:7"},"nodeType":"YulFunctionCall","src":"8770:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8760:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"8848:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8850:77:7"},"nodeType":"YulFunctionCall","src":"8850:79:7"},"nodeType":"YulExpressionStatement","src":"8850:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8820:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"8828:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8817:2:7"},"nodeType":"YulFunctionCall","src":"8817:30:7"},"nodeType":"YulIf","src":"8814:117:7"},{"nodeType":"YulAssignment","src":"8945:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8990:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"9001:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8986:3:7"},"nodeType":"YulFunctionCall","src":"8986:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9010:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8955:30:7"},"nodeType":"YulFunctionCall","src":"8955:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8945:6:7"}]}]},{"nodeType":"YulBlock","src":"9038:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9053:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"9067:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9057:6:7","type":""}]},{"nodeType":"YulAssignment","src":"9083:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9118:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"9129:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9114:3:7"},"nodeType":"YulFunctionCall","src":"9114:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9138:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9093:20:7"},"nodeType":"YulFunctionCall","src":"9093:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9083:6:7"}]}]},{"nodeType":"YulBlock","src":"9166:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9181:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"9195:2:7","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9185:6:7","type":""}]},{"nodeType":"YulAssignment","src":"9211:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9246:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"9257:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9242:3:7"},"nodeType":"YulFunctionCall","src":"9242:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9266:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9221:20:7"},"nodeType":"YulFunctionCall","src":"9221:53:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9211:6:7"}]}]},{"nodeType":"YulBlock","src":"9294:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9309:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9340:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"9351:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9336:3:7"},"nodeType":"YulFunctionCall","src":"9336:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9323:12:7"},"nodeType":"YulFunctionCall","src":"9323:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9313:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"9402:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9404:77:7"},"nodeType":"YulFunctionCall","src":"9404:79:7"},"nodeType":"YulExpressionStatement","src":"9404:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9374:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"9382:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9371:2:7"},"nodeType":"YulFunctionCall","src":"9371:30:7"},"nodeType":"YulIf","src":"9368:117:7"},{"nodeType":"YulAssignment","src":"9499:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9544:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"9555:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9540:3:7"},"nodeType":"YulFunctionCall","src":"9540:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9564:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9509:30:7"},"nodeType":"YulFunctionCall","src":"9509:63:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9499:6:7"}]}]},{"nodeType":"YulBlock","src":"9592:289:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9607:47:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9638:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"9649:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9634:3:7"},"nodeType":"YulFunctionCall","src":"9634:19:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9621:12:7"},"nodeType":"YulFunctionCall","src":"9621:33:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9611:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"9701:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9703:77:7"},"nodeType":"YulFunctionCall","src":"9703:79:7"},"nodeType":"YulExpressionStatement","src":"9703:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9673:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"9681:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9670:2:7"},"nodeType":"YulFunctionCall","src":"9670:30:7"},"nodeType":"YulIf","src":"9667:117:7"},{"nodeType":"YulAssignment","src":"9798:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9843:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"9854:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9839:3:7"},"nodeType":"YulFunctionCall","src":"9839:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9863:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9808:30:7"},"nodeType":"YulFunctionCall","src":"9808:63:7"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9798:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8539:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8550:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8562:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8570:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8578:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8586:6:7","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8594:6:7","type":""}],"src":"8437:1451:7"},{"body":{"nodeType":"YulBlock","src":"10108:501:7","statements":[{"nodeType":"YulAssignment","src":"10118:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10130:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10141:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10126:3:7"},"nodeType":"YulFunctionCall","src":"10126:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10118:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10165:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10176:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10161:3:7"},"nodeType":"YulFunctionCall","src":"10161:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10184:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"10190:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10180:3:7"},"nodeType":"YulFunctionCall","src":"10180:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10154:6:7"},"nodeType":"YulFunctionCall","src":"10154:47:7"},"nodeType":"YulExpressionStatement","src":"10154:47:7"},{"nodeType":"YulAssignment","src":"10210:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10282:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"10291:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10218:63:7"},"nodeType":"YulFunctionCall","src":"10218:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10210:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10317:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10328:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10313:3:7"},"nodeType":"YulFunctionCall","src":"10313:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10337:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"10343:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10333:3:7"},"nodeType":"YulFunctionCall","src":"10333:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10306:6:7"},"nodeType":"YulFunctionCall","src":"10306:48:7"},"nodeType":"YulExpressionStatement","src":"10306:48:7"},{"nodeType":"YulAssignment","src":"10363:86:7","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10435:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10371:63:7"},"nodeType":"YulFunctionCall","src":"10371:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10363:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10470:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10481:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10466:3:7"},"nodeType":"YulFunctionCall","src":"10466:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10490:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"10496:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10486:3:7"},"nodeType":"YulFunctionCall","src":"10486:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10459:6:7"},"nodeType":"YulFunctionCall","src":"10459:48:7"},"nodeType":"YulExpressionStatement","src":"10459:48:7"},{"nodeType":"YulAssignment","src":"10516:86:7","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10588:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"10597:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10524:63:7"},"nodeType":"YulFunctionCall","src":"10524:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10516:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10064:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10076:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10084:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10092:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10103:4:7","type":""}],"src":"9894:715:7"},{"body":{"nodeType":"YulBlock","src":"10809:430:7","statements":[{"nodeType":"YulAssignment","src":"10819:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10831:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10842:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10827:3:7"},"nodeType":"YulFunctionCall","src":"10827:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10819:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10866:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10877:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10862:3:7"},"nodeType":"YulFunctionCall","src":"10862:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10885:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"10891:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10881:3:7"},"nodeType":"YulFunctionCall","src":"10881:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10855:6:7"},"nodeType":"YulFunctionCall","src":"10855:47:7"},"nodeType":"YulExpressionStatement","src":"10855:47:7"},{"nodeType":"YulAssignment","src":"10911:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10983:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"10992:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10919:63:7"},"nodeType":"YulFunctionCall","src":"10919:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10911:4:7"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11051:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11064:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11075:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11060:3:7"},"nodeType":"YulFunctionCall","src":"11060:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11007:43:7"},"nodeType":"YulFunctionCall","src":"11007:72:7"},"nodeType":"YulExpressionStatement","src":"11007:72:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11100:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11111:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11096:3:7"},"nodeType":"YulFunctionCall","src":"11096:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11120:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"11126:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11116:3:7"},"nodeType":"YulFunctionCall","src":"11116:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11089:6:7"},"nodeType":"YulFunctionCall","src":"11089:48:7"},"nodeType":"YulExpressionStatement","src":"11089:48:7"},{"nodeType":"YulAssignment","src":"11146:86:7","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11218:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"11227:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11154:63:7"},"nodeType":"YulFunctionCall","src":"11154:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11146:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_string_memory_ptr__to_t_string_memory_ptr_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10765:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10777:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10785:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10793:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10804:4:7","type":""}],"src":"10615:624:7"},{"body":{"nodeType":"YulBlock","src":"11447:442:7","statements":[{"nodeType":"YulAssignment","src":"11457:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11469:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11480:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11465:3:7"},"nodeType":"YulFunctionCall","src":"11465:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11457:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11538:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11551:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11562:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11547:3:7"},"nodeType":"YulFunctionCall","src":"11547:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11494:43:7"},"nodeType":"YulFunctionCall","src":"11494:71:7"},"nodeType":"YulExpressionStatement","src":"11494:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11619:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11632:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11643:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11628:3:7"},"nodeType":"YulFunctionCall","src":"11628:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11575:43:7"},"nodeType":"YulFunctionCall","src":"11575:72:7"},"nodeType":"YulExpressionStatement","src":"11575:72:7"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11701:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11714:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11725:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11710:3:7"},"nodeType":"YulFunctionCall","src":"11710:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11657:43:7"},"nodeType":"YulFunctionCall","src":"11657:72:7"},"nodeType":"YulExpressionStatement","src":"11657:72:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11750:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11761:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11746:3:7"},"nodeType":"YulFunctionCall","src":"11746:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11770:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"11776:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11766:3:7"},"nodeType":"YulFunctionCall","src":"11766:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11739:6:7"},"nodeType":"YulFunctionCall","src":"11739:48:7"},"nodeType":"YulExpressionStatement","src":"11739:48:7"},{"nodeType":"YulAssignment","src":"11796:86:7","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11868:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"11877:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11804:63:7"},"nodeType":"YulFunctionCall","src":"11804:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11796:4:7"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11395:9:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11407:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11415:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11423:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11431:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11442:4:7","type":""}],"src":"11245:644:7"},{"body":{"nodeType":"YulBlock","src":"11969:40:7","statements":[{"nodeType":"YulAssignment","src":"11980:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11996:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11990:5:7"},"nodeType":"YulFunctionCall","src":"11990:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11980:6:7"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11952:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11962:6:7","type":""}],"src":"11895:114:7"},{"body":{"nodeType":"YulBlock","src":"12126:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12143:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"12148:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12136:6:7"},"nodeType":"YulFunctionCall","src":"12136:19:7"},"nodeType":"YulExpressionStatement","src":"12136:19:7"},{"nodeType":"YulAssignment","src":"12164:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12183:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"12188:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12179:3:7"},"nodeType":"YulFunctionCall","src":"12179:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12164:11:7"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12098:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"12103:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12114:11:7","type":""}],"src":"12015:184:7"},{"body":{"nodeType":"YulBlock","src":"12277:60:7","statements":[{"nodeType":"YulAssignment","src":"12287:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12295:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12287:4:7"}]},{"nodeType":"YulAssignment","src":"12308:22:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12320:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"12325:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12316:3:7"},"nodeType":"YulFunctionCall","src":"12316:14:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12308:4:7"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12264:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12272:4:7","type":""}],"src":"12205:132:7"},{"body":{"nodeType":"YulBlock","src":"12398:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12415:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12438:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12420:17:7"},"nodeType":"YulFunctionCall","src":"12420:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12408:6:7"},"nodeType":"YulFunctionCall","src":"12408:37:7"},"nodeType":"YulExpressionStatement","src":"12408:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12386:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12393:3:7","type":""}],"src":"12343:108:7"},{"body":{"nodeType":"YulBlock","src":"12537:99:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12581:6:7"},{"name":"pos","nodeType":"YulIdentifier","src":"12589:3:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12547:33:7"},"nodeType":"YulFunctionCall","src":"12547:46:7"},"nodeType":"YulExpressionStatement","src":"12547:46:7"},{"nodeType":"YulAssignment","src":"12602:28:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12620:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"12625:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12616:3:7"},"nodeType":"YulFunctionCall","src":"12616:14:7"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"12602:10:7"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"12510:6:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12518:3:7","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"12526:10:7","type":""}],"src":"12457:179:7"},{"body":{"nodeType":"YulBlock","src":"12717:38:7","statements":[{"nodeType":"YulAssignment","src":"12727:22:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12739:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"12744:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12735:3:7"},"nodeType":"YulFunctionCall","src":"12735:14:7"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12727:4:7"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12704:3:7","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12712:4:7","type":""}],"src":"12642:113:7"},{"body":{"nodeType":"YulBlock","src":"12915:608:7","statements":[{"nodeType":"YulVariableDeclaration","src":"12925:68:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12987:5:7"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12939:47:7"},"nodeType":"YulFunctionCall","src":"12939:54:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12929:6:7","type":""}]},{"nodeType":"YulAssignment","src":"13002:93:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13083:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"13088:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13009:73:7"},"nodeType":"YulFunctionCall","src":"13009:86:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13002:3:7"}]},{"nodeType":"YulVariableDeclaration","src":"13104:71:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13169:5:7"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13119:49:7"},"nodeType":"YulFunctionCall","src":"13119:56:7"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13108:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13184:21:7","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13198:7:7"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13188:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"13274:224:7","statements":[{"nodeType":"YulVariableDeclaration","src":"13288:34:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13315:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13309:5:7"},"nodeType":"YulFunctionCall","src":"13309:13:7"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13292:13:7","type":""}]},{"nodeType":"YulAssignment","src":"13335:70:7","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13386:13:7"},{"name":"pos","nodeType":"YulIdentifier","src":"13401:3:7"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13342:43:7"},"nodeType":"YulFunctionCall","src":"13342:63:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13335:3:7"}]},{"nodeType":"YulAssignment","src":"13418:70:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13481:6:7"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13428:52:7"},"nodeType":"YulFunctionCall","src":"13428:60:7"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13418:6:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13236:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"13239:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13233:2:7"},"nodeType":"YulFunctionCall","src":"13233:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13247:18:7","statements":[{"nodeType":"YulAssignment","src":"13249:14:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13258:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"13261:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13254:3:7"},"nodeType":"YulFunctionCall","src":"13254:9:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13249:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"13218:14:7","statements":[{"nodeType":"YulVariableDeclaration","src":"13220:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"13229:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13224:1:7","type":""}]}]},"src":"13214:284:7"},{"nodeType":"YulAssignment","src":"13507:10:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"13514:3:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13507:3:7"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12894:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12901:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12910:3:7","type":""}],"src":"12791:732:7"},{"body":{"nodeType":"YulBlock","src":"13677:225:7","statements":[{"nodeType":"YulAssignment","src":"13687:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13699:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13710:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13695:3:7"},"nodeType":"YulFunctionCall","src":"13695:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13687:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13734:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13745:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13730:3:7"},"nodeType":"YulFunctionCall","src":"13730:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13753:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"13759:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13749:3:7"},"nodeType":"YulFunctionCall","src":"13749:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13723:6:7"},"nodeType":"YulFunctionCall","src":"13723:47:7"},"nodeType":"YulExpressionStatement","src":"13723:47:7"},{"nodeType":"YulAssignment","src":"13779:116:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13881:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"13890:4:7"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13787:93:7"},"nodeType":"YulFunctionCall","src":"13787:108:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13779:4:7"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13649:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13661:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13672:4:7","type":""}],"src":"13529:373:7"},{"body":{"nodeType":"YulBlock","src":"14130:513:7","statements":[{"nodeType":"YulAssignment","src":"14140:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14152:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"14163:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14148:3:7"},"nodeType":"YulFunctionCall","src":"14148:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14140:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14221:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14234:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"14245:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14230:3:7"},"nodeType":"YulFunctionCall","src":"14230:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14177:43:7"},"nodeType":"YulFunctionCall","src":"14177:71:7"},"nodeType":"YulExpressionStatement","src":"14177:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14302:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14315:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"14326:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14311:3:7"},"nodeType":"YulFunctionCall","src":"14311:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14258:43:7"},"nodeType":"YulFunctionCall","src":"14258:72:7"},"nodeType":"YulExpressionStatement","src":"14258:72:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14351:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"14362:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14347:3:7"},"nodeType":"YulFunctionCall","src":"14347:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14371:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"14377:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14367:3:7"},"nodeType":"YulFunctionCall","src":"14367:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14340:6:7"},"nodeType":"YulFunctionCall","src":"14340:48:7"},"nodeType":"YulExpressionStatement","src":"14340:48:7"},{"nodeType":"YulAssignment","src":"14397:86:7","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14469:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"14478:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14405:63:7"},"nodeType":"YulFunctionCall","src":"14405:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14397:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14504:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"14515:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14500:3:7"},"nodeType":"YulFunctionCall","src":"14500:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14524:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"14530:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14520:3:7"},"nodeType":"YulFunctionCall","src":"14520:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14493:6:7"},"nodeType":"YulFunctionCall","src":"14493:48:7"},"nodeType":"YulExpressionStatement","src":"14493:48:7"},{"nodeType":"YulAssignment","src":"14550:86:7","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14622:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"14631:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14558:63:7"},"nodeType":"YulFunctionCall","src":"14558:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14550:4:7"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14078:9:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14090:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14098:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14106:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14114:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14125:4:7","type":""}],"src":"13908:735:7"},{"body":{"nodeType":"YulBlock","src":"14767:195:7","statements":[{"nodeType":"YulAssignment","src":"14777:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14789:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"14800:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14785:3:7"},"nodeType":"YulFunctionCall","src":"14785:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14777:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14824:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"14835:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14820:3:7"},"nodeType":"YulFunctionCall","src":"14820:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14843:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"14849:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14839:3:7"},"nodeType":"YulFunctionCall","src":"14839:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14813:6:7"},"nodeType":"YulFunctionCall","src":"14813:47:7"},"nodeType":"YulExpressionStatement","src":"14813:47:7"},{"nodeType":"YulAssignment","src":"14869:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14941:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"14950:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14877:63:7"},"nodeType":"YulFunctionCall","src":"14877:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14869:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14739:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14751:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14762:4:7","type":""}],"src":"14649:313:7"},{"body":{"nodeType":"YulBlock","src":"15115:1158:7","statements":[{"body":{"nodeType":"YulBlock","src":"15162:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15164:77:7"},"nodeType":"YulFunctionCall","src":"15164:79:7"},"nodeType":"YulExpressionStatement","src":"15164:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15136:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"15145:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15132:3:7"},"nodeType":"YulFunctionCall","src":"15132:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"15157:3:7","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15128:3:7"},"nodeType":"YulFunctionCall","src":"15128:33:7"},"nodeType":"YulIf","src":"15125:120:7"},{"nodeType":"YulBlock","src":"15255:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"15270:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15301:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"15312:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15297:3:7"},"nodeType":"YulFunctionCall","src":"15297:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15284:12:7"},"nodeType":"YulFunctionCall","src":"15284:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15274:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"15362:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15364:77:7"},"nodeType":"YulFunctionCall","src":"15364:79:7"},"nodeType":"YulExpressionStatement","src":"15364:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15334:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"15342:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15331:2:7"},"nodeType":"YulFunctionCall","src":"15331:30:7"},"nodeType":"YulIf","src":"15328:117:7"},{"nodeType":"YulAssignment","src":"15459:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15504:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"15515:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15500:3:7"},"nodeType":"YulFunctionCall","src":"15500:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15524:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15469:30:7"},"nodeType":"YulFunctionCall","src":"15469:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15459:6:7"}]}]},{"nodeType":"YulBlock","src":"15552:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"15567:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15581:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15571:6:7","type":""}]},{"nodeType":"YulAssignment","src":"15597:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15632:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"15643:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15628:3:7"},"nodeType":"YulFunctionCall","src":"15628:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15652:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15607:20:7"},"nodeType":"YulFunctionCall","src":"15607:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15597:6:7"}]}]},{"nodeType":"YulBlock","src":"15680:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"15695:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15726:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"15737:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15722:3:7"},"nodeType":"YulFunctionCall","src":"15722:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15709:12:7"},"nodeType":"YulFunctionCall","src":"15709:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15699:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"15788:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15790:77:7"},"nodeType":"YulFunctionCall","src":"15790:79:7"},"nodeType":"YulExpressionStatement","src":"15790:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15760:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"15768:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15757:2:7"},"nodeType":"YulFunctionCall","src":"15757:30:7"},"nodeType":"YulIf","src":"15754:117:7"},{"nodeType":"YulAssignment","src":"15885:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15930:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"15941:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15926:3:7"},"nodeType":"YulFunctionCall","src":"15926:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15950:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15895:30:7"},"nodeType":"YulFunctionCall","src":"15895:63:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15885:6:7"}]}]},{"nodeType":"YulBlock","src":"15978:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"15993:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16024:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"16035:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16020:3:7"},"nodeType":"YulFunctionCall","src":"16020:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16007:12:7"},"nodeType":"YulFunctionCall","src":"16007:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15997:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"16086:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16088:77:7"},"nodeType":"YulFunctionCall","src":"16088:79:7"},"nodeType":"YulExpressionStatement","src":"16088:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16058:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"16066:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16055:2:7"},"nodeType":"YulFunctionCall","src":"16055:30:7"},"nodeType":"YulIf","src":"16052:117:7"},{"nodeType":"YulAssignment","src":"16183:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16228:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"16239:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16224:3:7"},"nodeType":"YulFunctionCall","src":"16224:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16248:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16193:30:7"},"nodeType":"YulFunctionCall","src":"16193:63:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16183:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15061:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15072:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15084:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15092:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15100:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15108:6:7","type":""}],"src":"14968:1305:7"},{"body":{"nodeType":"YulBlock","src":"16445:348:7","statements":[{"nodeType":"YulAssignment","src":"16455:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16467:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"16478:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16463:3:7"},"nodeType":"YulFunctionCall","src":"16463:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16455:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16502:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"16513:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16498:3:7"},"nodeType":"YulFunctionCall","src":"16498:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16521:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"16527:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16517:3:7"},"nodeType":"YulFunctionCall","src":"16517:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16491:6:7"},"nodeType":"YulFunctionCall","src":"16491:47:7"},"nodeType":"YulExpressionStatement","src":"16491:47:7"},{"nodeType":"YulAssignment","src":"16547:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16619:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"16628:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16555:63:7"},"nodeType":"YulFunctionCall","src":"16555:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16547:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16654:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"16665:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16650:3:7"},"nodeType":"YulFunctionCall","src":"16650:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16674:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"16680:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16670:3:7"},"nodeType":"YulFunctionCall","src":"16670:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16643:6:7"},"nodeType":"YulFunctionCall","src":"16643:48:7"},"nodeType":"YulExpressionStatement","src":"16643:48:7"},{"nodeType":"YulAssignment","src":"16700:86:7","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16772:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"16781:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16708:63:7"},"nodeType":"YulFunctionCall","src":"16708:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16700:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16409:9:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16421:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16429:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16440:4:7","type":""}],"src":"16279:514:7"},{"body":{"nodeType":"YulBlock","src":"16973:359:7","statements":[{"nodeType":"YulAssignment","src":"16983:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16995:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"17006:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16991:3:7"},"nodeType":"YulFunctionCall","src":"16991:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16983:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17030:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"17041:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17026:3:7"},"nodeType":"YulFunctionCall","src":"17026:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17049:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"17055:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17045:3:7"},"nodeType":"YulFunctionCall","src":"17045:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17019:6:7"},"nodeType":"YulFunctionCall","src":"17019:47:7"},"nodeType":"YulExpressionStatement","src":"17019:47:7"},{"nodeType":"YulAssignment","src":"17075:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17147:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"17156:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17083:63:7"},"nodeType":"YulFunctionCall","src":"17083:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17075:4:7"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17215:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17228:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"17239:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17224:3:7"},"nodeType":"YulFunctionCall","src":"17224:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17171:43:7"},"nodeType":"YulFunctionCall","src":"17171:72:7"},"nodeType":"YulExpressionStatement","src":"17171:72:7"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17297:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17310:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"17321:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17306:3:7"},"nodeType":"YulFunctionCall","src":"17306:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17253:43:7"},"nodeType":"YulFunctionCall","src":"17253:72:7"},"nodeType":"YulExpressionStatement","src":"17253:72:7"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16929:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16941:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16949:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16957:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16968:4:7","type":""}],"src":"16799:533:7"},{"body":{"nodeType":"YulBlock","src":"17485:1158:7","statements":[{"body":{"nodeType":"YulBlock","src":"17532:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17534:77:7"},"nodeType":"YulFunctionCall","src":"17534:79:7"},"nodeType":"YulExpressionStatement","src":"17534:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17506:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"17515:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17502:3:7"},"nodeType":"YulFunctionCall","src":"17502:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"17527:3:7","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17498:3:7"},"nodeType":"YulFunctionCall","src":"17498:33:7"},"nodeType":"YulIf","src":"17495:120:7"},{"nodeType":"YulBlock","src":"17625:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"17640:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17671:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"17682:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17667:3:7"},"nodeType":"YulFunctionCall","src":"17667:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17654:12:7"},"nodeType":"YulFunctionCall","src":"17654:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17644:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"17732:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17734:77:7"},"nodeType":"YulFunctionCall","src":"17734:79:7"},"nodeType":"YulExpressionStatement","src":"17734:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17704:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"17712:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17701:2:7"},"nodeType":"YulFunctionCall","src":"17701:30:7"},"nodeType":"YulIf","src":"17698:117:7"},{"nodeType":"YulAssignment","src":"17829:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17874:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"17885:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17870:3:7"},"nodeType":"YulFunctionCall","src":"17870:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17894:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17839:30:7"},"nodeType":"YulFunctionCall","src":"17839:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17829:6:7"}]}]},{"nodeType":"YulBlock","src":"17922:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"17937:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17968:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"17979:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17964:3:7"},"nodeType":"YulFunctionCall","src":"17964:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17951:12:7"},"nodeType":"YulFunctionCall","src":"17951:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17941:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"18030:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18032:77:7"},"nodeType":"YulFunctionCall","src":"18032:79:7"},"nodeType":"YulExpressionStatement","src":"18032:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18002:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"18010:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17999:2:7"},"nodeType":"YulFunctionCall","src":"17999:30:7"},"nodeType":"YulIf","src":"17996:117:7"},{"nodeType":"YulAssignment","src":"18127:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18172:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"18183:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18168:3:7"},"nodeType":"YulFunctionCall","src":"18168:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18192:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18137:30:7"},"nodeType":"YulFunctionCall","src":"18137:63:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18127:6:7"}]}]},{"nodeType":"YulBlock","src":"18220:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"18235:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18266:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"18277:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18262:3:7"},"nodeType":"YulFunctionCall","src":"18262:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18249:12:7"},"nodeType":"YulFunctionCall","src":"18249:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18239:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"18328:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18330:77:7"},"nodeType":"YulFunctionCall","src":"18330:79:7"},"nodeType":"YulExpressionStatement","src":"18330:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18300:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"18308:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18297:2:7"},"nodeType":"YulFunctionCall","src":"18297:30:7"},"nodeType":"YulIf","src":"18294:117:7"},{"nodeType":"YulAssignment","src":"18425:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18470:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"18481:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18466:3:7"},"nodeType":"YulFunctionCall","src":"18466:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18490:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18435:30:7"},"nodeType":"YulFunctionCall","src":"18435:63:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18425:6:7"}]}]},{"nodeType":"YulBlock","src":"18518:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"18533:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"18547:2:7","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18537:6:7","type":""}]},{"nodeType":"YulAssignment","src":"18563:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18598:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"18609:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:7"},"nodeType":"YulFunctionCall","src":"18594:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18618:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18573:20:7"},"nodeType":"YulFunctionCall","src":"18573:53:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18563:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17431:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17442:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17454:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17462:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17470:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17478:6:7","type":""}],"src":"17338:1305:7"},{"body":{"nodeType":"YulBlock","src":"18742:561:7","statements":[{"body":{"nodeType":"YulBlock","src":"18788:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18790:77:7"},"nodeType":"YulFunctionCall","src":"18790:79:7"},"nodeType":"YulExpressionStatement","src":"18790:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18763:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"18772:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18759:3:7"},"nodeType":"YulFunctionCall","src":"18759:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"18784:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18755:3:7"},"nodeType":"YulFunctionCall","src":"18755:32:7"},"nodeType":"YulIf","src":"18752:119:7"},{"nodeType":"YulBlock","src":"18881:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"18896:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"18910:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18900:6:7","type":""}]},{"nodeType":"YulAssignment","src":"18925:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18960:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"18971:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18956:3:7"},"nodeType":"YulFunctionCall","src":"18956:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18980:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18935:20:7"},"nodeType":"YulFunctionCall","src":"18935:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18925:6:7"}]}]},{"nodeType":"YulBlock","src":"19008:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"19023:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19054:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"19065:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19050:3:7"},"nodeType":"YulFunctionCall","src":"19050:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19037:12:7"},"nodeType":"YulFunctionCall","src":"19037:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19027:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"19116:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19118:77:7"},"nodeType":"YulFunctionCall","src":"19118:79:7"},"nodeType":"YulExpressionStatement","src":"19118:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19088:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"19096:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19085:2:7"},"nodeType":"YulFunctionCall","src":"19085:30:7"},"nodeType":"YulIf","src":"19082:117:7"},{"nodeType":"YulAssignment","src":"19213:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19258:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"19269:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19254:3:7"},"nodeType":"YulFunctionCall","src":"19254:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19278:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19223:30:7"},"nodeType":"YulFunctionCall","src":"19223:63:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19213:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18704:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18715:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18727:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18735:6:7","type":""}],"src":"18649:654:7"},{"body":{"nodeType":"YulBlock","src":"19429:859:7","statements":[{"body":{"nodeType":"YulBlock","src":"19475:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19477:77:7"},"nodeType":"YulFunctionCall","src":"19477:79:7"},"nodeType":"YulExpressionStatement","src":"19477:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19450:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"19459:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19446:3:7"},"nodeType":"YulFunctionCall","src":"19446:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"19471:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19442:3:7"},"nodeType":"YulFunctionCall","src":"19442:32:7"},"nodeType":"YulIf","src":"19439:119:7"},{"nodeType":"YulBlock","src":"19568:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"19583:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"19597:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19587:6:7","type":""}]},{"nodeType":"YulAssignment","src":"19612:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19647:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"19658:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19643:3:7"},"nodeType":"YulFunctionCall","src":"19643:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19667:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19622:20:7"},"nodeType":"YulFunctionCall","src":"19622:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19612:6:7"}]}]},{"nodeType":"YulBlock","src":"19695:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"19710:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19741:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"19752:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19737:3:7"},"nodeType":"YulFunctionCall","src":"19737:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19724:12:7"},"nodeType":"YulFunctionCall","src":"19724:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19714:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"19803:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19805:77:7"},"nodeType":"YulFunctionCall","src":"19805:79:7"},"nodeType":"YulExpressionStatement","src":"19805:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19775:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"19783:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19772:2:7"},"nodeType":"YulFunctionCall","src":"19772:30:7"},"nodeType":"YulIf","src":"19769:117:7"},{"nodeType":"YulAssignment","src":"19900:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19945:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"19956:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19941:3:7"},"nodeType":"YulFunctionCall","src":"19941:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19965:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19910:30:7"},"nodeType":"YulFunctionCall","src":"19910:63:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19900:6:7"}]}]},{"nodeType":"YulBlock","src":"19993:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"20008:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20039:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"20050:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20035:3:7"},"nodeType":"YulFunctionCall","src":"20035:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20022:12:7"},"nodeType":"YulFunctionCall","src":"20022:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20012:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"20101:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20103:77:7"},"nodeType":"YulFunctionCall","src":"20103:79:7"},"nodeType":"YulExpressionStatement","src":"20103:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20073:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"20081:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20070:2:7"},"nodeType":"YulFunctionCall","src":"20070:30:7"},"nodeType":"YulIf","src":"20067:117:7"},{"nodeType":"YulAssignment","src":"20198:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20243:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"20254:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20239:3:7"},"nodeType":"YulFunctionCall","src":"20239:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20263:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20208:30:7"},"nodeType":"YulFunctionCall","src":"20208:63:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20198:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19383:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19394:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19406:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19414:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19422:6:7","type":""}],"src":"19309:979:7"},{"body":{"nodeType":"YulBlock","src":"20336:48:7","statements":[{"nodeType":"YulAssignment","src":"20346:32:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20371:5:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20364:6:7"},"nodeType":"YulFunctionCall","src":"20364:13:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20357:6:7"},"nodeType":"YulFunctionCall","src":"20357:21:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20346:7:7"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20318:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20328:7:7","type":""}],"src":"20294:90:7"},{"body":{"nodeType":"YulBlock","src":"20430:76:7","statements":[{"body":{"nodeType":"YulBlock","src":"20484:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20493:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20496:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20486:6:7"},"nodeType":"YulFunctionCall","src":"20486:12:7"},"nodeType":"YulExpressionStatement","src":"20486:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20453:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20475:5:7"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20460:14:7"},"nodeType":"YulFunctionCall","src":"20460:21:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20450:2:7"},"nodeType":"YulFunctionCall","src":"20450:32:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20443:6:7"},"nodeType":"YulFunctionCall","src":"20443:40:7"},"nodeType":"YulIf","src":"20440:60:7"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20423:5:7","type":""}],"src":"20390:116:7"},{"body":{"nodeType":"YulBlock","src":"20561:84:7","statements":[{"nodeType":"YulAssignment","src":"20571:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20593:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20580:12:7"},"nodeType":"YulFunctionCall","src":"20580:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20571:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20633:5:7"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"20609:23:7"},"nodeType":"YulFunctionCall","src":"20609:30:7"},"nodeType":"YulExpressionStatement","src":"20609:30:7"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20539:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"20547:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20555:5:7","type":""}],"src":"20512:133:7"},{"body":{"nodeType":"YulBlock","src":"20812:1284:7","statements":[{"body":{"nodeType":"YulBlock","src":"20859:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20861:77:7"},"nodeType":"YulFunctionCall","src":"20861:79:7"},"nodeType":"YulExpressionStatement","src":"20861:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20833:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"20842:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20829:3:7"},"nodeType":"YulFunctionCall","src":"20829:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"20854:3:7","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20825:3:7"},"nodeType":"YulFunctionCall","src":"20825:33:7"},"nodeType":"YulIf","src":"20822:120:7"},{"nodeType":"YulBlock","src":"20952:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"20967:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20998:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"21009:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20994:3:7"},"nodeType":"YulFunctionCall","src":"20994:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20981:12:7"},"nodeType":"YulFunctionCall","src":"20981:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20971:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"21059:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21061:77:7"},"nodeType":"YulFunctionCall","src":"21061:79:7"},"nodeType":"YulExpressionStatement","src":"21061:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21031:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"21039:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21028:2:7"},"nodeType":"YulFunctionCall","src":"21028:30:7"},"nodeType":"YulIf","src":"21025:117:7"},{"nodeType":"YulAssignment","src":"21156:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21201:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"21212:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21197:3:7"},"nodeType":"YulFunctionCall","src":"21197:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21221:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21166:30:7"},"nodeType":"YulFunctionCall","src":"21166:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21156:6:7"}]}]},{"nodeType":"YulBlock","src":"21249:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"21264:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21295:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"21306:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21291:3:7"},"nodeType":"YulFunctionCall","src":"21291:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21278:12:7"},"nodeType":"YulFunctionCall","src":"21278:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21268:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"21357:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21359:77:7"},"nodeType":"YulFunctionCall","src":"21359:79:7"},"nodeType":"YulExpressionStatement","src":"21359:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21329:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"21337:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21326:2:7"},"nodeType":"YulFunctionCall","src":"21326:30:7"},"nodeType":"YulIf","src":"21323:117:7"},{"nodeType":"YulAssignment","src":"21454:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21499:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"21510:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21495:3:7"},"nodeType":"YulFunctionCall","src":"21495:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21519:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21464:30:7"},"nodeType":"YulFunctionCall","src":"21464:63:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21454:6:7"}]}]},{"nodeType":"YulBlock","src":"21547:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"21562:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"21576:2:7","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21566:6:7","type":""}]},{"nodeType":"YulAssignment","src":"21592:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21627:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"21638:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21623:3:7"},"nodeType":"YulFunctionCall","src":"21623:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21647:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21602:20:7"},"nodeType":"YulFunctionCall","src":"21602:53:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21592:6:7"}]}]},{"nodeType":"YulBlock","src":"21675:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"21690:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21721:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"21732:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21717:3:7"},"nodeType":"YulFunctionCall","src":"21717:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21704:12:7"},"nodeType":"YulFunctionCall","src":"21704:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21694:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"21783:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21785:77:7"},"nodeType":"YulFunctionCall","src":"21785:79:7"},"nodeType":"YulExpressionStatement","src":"21785:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21755:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"21763:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21752:2:7"},"nodeType":"YulFunctionCall","src":"21752:30:7"},"nodeType":"YulIf","src":"21749:117:7"},{"nodeType":"YulAssignment","src":"21880:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21925:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"21936:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21921:3:7"},"nodeType":"YulFunctionCall","src":"21921:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21945:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21890:30:7"},"nodeType":"YulFunctionCall","src":"21890:63:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21880:6:7"}]}]},{"nodeType":"YulBlock","src":"21973:116:7","statements":[{"nodeType":"YulVariableDeclaration","src":"21988:17:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22002:3:7","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21992:6:7","type":""}]},{"nodeType":"YulAssignment","src":"22019:60:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22051:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"22062:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22047:3:7"},"nodeType":"YulFunctionCall","src":"22047:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22071:7:7"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"22029:17:7"},"nodeType":"YulFunctionCall","src":"22029:50:7"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"22019:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20750:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20761:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20773:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20781:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20789:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20797:6:7","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20805:6:7","type":""}],"src":"20651:1445:7"},{"body":{"nodeType":"YulBlock","src":"22229:818:7","statements":[{"body":{"nodeType":"YulBlock","src":"22276:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22278:77:7"},"nodeType":"YulFunctionCall","src":"22278:79:7"},"nodeType":"YulExpressionStatement","src":"22278:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22250:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"22259:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22246:3:7"},"nodeType":"YulFunctionCall","src":"22246:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"22271:3:7","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22242:3:7"},"nodeType":"YulFunctionCall","src":"22242:33:7"},"nodeType":"YulIf","src":"22239:120:7"},{"nodeType":"YulBlock","src":"22369:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"22384:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22398:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22388:6:7","type":""}]},{"nodeType":"YulAssignment","src":"22413:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22448:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"22459:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22444:3:7"},"nodeType":"YulFunctionCall","src":"22444:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22468:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22423:20:7"},"nodeType":"YulFunctionCall","src":"22423:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22413:6:7"}]}]},{"nodeType":"YulBlock","src":"22496:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"22511:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22525:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22515:6:7","type":""}]},{"nodeType":"YulAssignment","src":"22541:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22576:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"22587:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22572:3:7"},"nodeType":"YulFunctionCall","src":"22572:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22596:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22551:20:7"},"nodeType":"YulFunctionCall","src":"22551:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22541:6:7"}]}]},{"nodeType":"YulBlock","src":"22624:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"22639:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22653:2:7","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22643:6:7","type":""}]},{"nodeType":"YulAssignment","src":"22669:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22704:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"22715:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22700:3:7"},"nodeType":"YulFunctionCall","src":"22700:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22724:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22679:20:7"},"nodeType":"YulFunctionCall","src":"22679:53:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22669:6:7"}]}]},{"nodeType":"YulBlock","src":"22752:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"22767:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22798:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"22809:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22794:3:7"},"nodeType":"YulFunctionCall","src":"22794:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22781:12:7"},"nodeType":"YulFunctionCall","src":"22781:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22771:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"22860:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22862:77:7"},"nodeType":"YulFunctionCall","src":"22862:79:7"},"nodeType":"YulExpressionStatement","src":"22862:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22832:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"22840:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22829:2:7"},"nodeType":"YulFunctionCall","src":"22829:30:7"},"nodeType":"YulIf","src":"22826:117:7"},{"nodeType":"YulAssignment","src":"22957:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23002:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"23013:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22998:3:7"},"nodeType":"YulFunctionCall","src":"22998:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23022:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"22967:30:7"},"nodeType":"YulFunctionCall","src":"22967:63:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22957:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22175:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22186:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22198:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22206:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22214:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22222:6:7","type":""}],"src":"22102:945:7"},{"body":{"nodeType":"YulBlock","src":"23146:561:7","statements":[{"body":{"nodeType":"YulBlock","src":"23192:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23194:77:7"},"nodeType":"YulFunctionCall","src":"23194:79:7"},"nodeType":"YulExpressionStatement","src":"23194:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23167:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"23176:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23163:3:7"},"nodeType":"YulFunctionCall","src":"23163:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"23188:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23159:3:7"},"nodeType":"YulFunctionCall","src":"23159:32:7"},"nodeType":"YulIf","src":"23156:119:7"},{"nodeType":"YulBlock","src":"23285:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"23300:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23331:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"23342:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23327:3:7"},"nodeType":"YulFunctionCall","src":"23327:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23314:12:7"},"nodeType":"YulFunctionCall","src":"23314:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23304:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"23392:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23394:77:7"},"nodeType":"YulFunctionCall","src":"23394:79:7"},"nodeType":"YulExpressionStatement","src":"23394:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23364:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"23372:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23361:2:7"},"nodeType":"YulFunctionCall","src":"23361:30:7"},"nodeType":"YulIf","src":"23358:117:7"},{"nodeType":"YulAssignment","src":"23489:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23534:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"23545:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23530:3:7"},"nodeType":"YulFunctionCall","src":"23530:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23554:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23499:30:7"},"nodeType":"YulFunctionCall","src":"23499:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23489:6:7"}]}]},{"nodeType":"YulBlock","src":"23582:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"23597:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"23611:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23601:6:7","type":""}]},{"nodeType":"YulAssignment","src":"23627:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23662:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"23673:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23658:3:7"},"nodeType":"YulFunctionCall","src":"23658:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23682:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23637:20:7"},"nodeType":"YulFunctionCall","src":"23637:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23627:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23108:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23119:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23131:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23139:6:7","type":""}],"src":"23053:654:7"},{"body":{"nodeType":"YulBlock","src":"23772:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23789:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23809:5:7"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"23794:14:7"},"nodeType":"YulFunctionCall","src":"23794:21:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23782:6:7"},"nodeType":"YulFunctionCall","src":"23782:34:7"},"nodeType":"YulExpressionStatement","src":"23782:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23760:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23767:3:7","type":""}],"src":"23713:109:7"},{"body":{"nodeType":"YulBlock","src":"24102:738:7","statements":[{"nodeType":"YulAssignment","src":"24112:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24124:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24135:3:7","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24120:3:7"},"nodeType":"YulFunctionCall","src":"24120:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24112:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24193:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24206:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24217:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24202:3:7"},"nodeType":"YulFunctionCall","src":"24202:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24149:43:7"},"nodeType":"YulFunctionCall","src":"24149:71:7"},"nodeType":"YulExpressionStatement","src":"24149:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24268:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24281:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24292:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24277:3:7"},"nodeType":"YulFunctionCall","src":"24277:18:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24230:37:7"},"nodeType":"YulFunctionCall","src":"24230:66:7"},"nodeType":"YulExpressionStatement","src":"24230:66:7"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24344:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24357:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24368:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24353:3:7"},"nodeType":"YulFunctionCall","src":"24353:18:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24306:37:7"},"nodeType":"YulFunctionCall","src":"24306:66:7"},"nodeType":"YulExpressionStatement","src":"24306:66:7"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24420:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24433:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24444:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24429:3:7"},"nodeType":"YulFunctionCall","src":"24429:18:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24382:37:7"},"nodeType":"YulFunctionCall","src":"24382:66:7"},"nodeType":"YulExpressionStatement","src":"24382:66:7"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24496:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24509:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24520:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24505:3:7"},"nodeType":"YulFunctionCall","src":"24505:19:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24458:37:7"},"nodeType":"YulFunctionCall","src":"24458:67:7"},"nodeType":"YulExpressionStatement","src":"24458:67:7"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"24573:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24586:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24597:3:7","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24582:3:7"},"nodeType":"YulFunctionCall","src":"24582:19:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24535:37:7"},"nodeType":"YulFunctionCall","src":"24535:67:7"},"nodeType":"YulExpressionStatement","src":"24535:67:7"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"24650:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24663:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24674:3:7","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24659:3:7"},"nodeType":"YulFunctionCall","src":"24659:19:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24612:37:7"},"nodeType":"YulFunctionCall","src":"24612:67:7"},"nodeType":"YulExpressionStatement","src":"24612:67:7"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"24727:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24740:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24751:3:7","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24736:3:7"},"nodeType":"YulFunctionCall","src":"24736:19:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24689:37:7"},"nodeType":"YulFunctionCall","src":"24689:67:7"},"nodeType":"YulExpressionStatement","src":"24689:67:7"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"24804:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24817:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24828:3:7","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24813:3:7"},"nodeType":"YulFunctionCall","src":"24813:19:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24766:37:7"},"nodeType":"YulFunctionCall","src":"24766:67:7"},"nodeType":"YulExpressionStatement","src":"24766:67:7"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24010:9:7","type":""},{"name":"value8","nodeType":"YulTypedName","src":"24022:6:7","type":""},{"name":"value7","nodeType":"YulTypedName","src":"24030:6:7","type":""},{"name":"value6","nodeType":"YulTypedName","src":"24038:6:7","type":""},{"name":"value5","nodeType":"YulTypedName","src":"24046:6:7","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24054:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24062:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24070:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24078:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24086:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24097:4:7","type":""}],"src":"23828:1012:7"},{"body":{"nodeType":"YulBlock","src":"24938:118:7","statements":[{"nodeType":"YulAssignment","src":"24948:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24960:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24971:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24956:3:7"},"nodeType":"YulFunctionCall","src":"24956:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24948:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25022:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25035:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"25046:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25031:3:7"},"nodeType":"YulFunctionCall","src":"25031:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24984:37:7"},"nodeType":"YulFunctionCall","src":"24984:65:7"},"nodeType":"YulExpressionStatement","src":"24984:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24910:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24922:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24933:4:7","type":""}],"src":"24846:210:7"},{"body":{"nodeType":"YulBlock","src":"25209:1158:7","statements":[{"body":{"nodeType":"YulBlock","src":"25256:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25258:77:7"},"nodeType":"YulFunctionCall","src":"25258:79:7"},"nodeType":"YulExpressionStatement","src":"25258:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25230:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"25239:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25226:3:7"},"nodeType":"YulFunctionCall","src":"25226:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"25251:3:7","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25222:3:7"},"nodeType":"YulFunctionCall","src":"25222:33:7"},"nodeType":"YulIf","src":"25219:120:7"},{"nodeType":"YulBlock","src":"25349:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"25364:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25395:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"25406:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25391:3:7"},"nodeType":"YulFunctionCall","src":"25391:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25378:12:7"},"nodeType":"YulFunctionCall","src":"25378:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25368:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"25456:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25458:77:7"},"nodeType":"YulFunctionCall","src":"25458:79:7"},"nodeType":"YulExpressionStatement","src":"25458:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25428:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"25436:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25425:2:7"},"nodeType":"YulFunctionCall","src":"25425:30:7"},"nodeType":"YulIf","src":"25422:117:7"},{"nodeType":"YulAssignment","src":"25553:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25598:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"25609:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25594:3:7"},"nodeType":"YulFunctionCall","src":"25594:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25618:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25563:30:7"},"nodeType":"YulFunctionCall","src":"25563:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25553:6:7"}]}]},{"nodeType":"YulBlock","src":"25646:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"25661:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25692:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"25703:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25688:3:7"},"nodeType":"YulFunctionCall","src":"25688:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25675:12:7"},"nodeType":"YulFunctionCall","src":"25675:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25665:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"25754:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25756:77:7"},"nodeType":"YulFunctionCall","src":"25756:79:7"},"nodeType":"YulExpressionStatement","src":"25756:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25726:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"25734:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25723:2:7"},"nodeType":"YulFunctionCall","src":"25723:30:7"},"nodeType":"YulIf","src":"25720:117:7"},{"nodeType":"YulAssignment","src":"25851:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25896:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"25907:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25892:3:7"},"nodeType":"YulFunctionCall","src":"25892:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25916:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25861:30:7"},"nodeType":"YulFunctionCall","src":"25861:63:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25851:6:7"}]}]},{"nodeType":"YulBlock","src":"25944:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"25959:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"25973:2:7","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25963:6:7","type":""}]},{"nodeType":"YulAssignment","src":"25989:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26024:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"26035:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26020:3:7"},"nodeType":"YulFunctionCall","src":"26020:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26044:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25999:20:7"},"nodeType":"YulFunctionCall","src":"25999:53:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"25989:6:7"}]}]},{"nodeType":"YulBlock","src":"26072:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"26087:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26118:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"26129:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26114:3:7"},"nodeType":"YulFunctionCall","src":"26114:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26101:12:7"},"nodeType":"YulFunctionCall","src":"26101:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26091:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"26180:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26182:77:7"},"nodeType":"YulFunctionCall","src":"26182:79:7"},"nodeType":"YulExpressionStatement","src":"26182:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26152:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"26160:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26149:2:7"},"nodeType":"YulFunctionCall","src":"26149:30:7"},"nodeType":"YulIf","src":"26146:117:7"},{"nodeType":"YulAssignment","src":"26277:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26322:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"26333:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26318:3:7"},"nodeType":"YulFunctionCall","src":"26318:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26342:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26287:30:7"},"nodeType":"YulFunctionCall","src":"26287:63:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"26277:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25155:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25166:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25178:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25186:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25194:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25202:6:7","type":""}],"src":"25062:1305:7"},{"body":{"nodeType":"YulBlock","src":"26615:584:7","statements":[{"nodeType":"YulAssignment","src":"26625:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26637:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"26648:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26633:3:7"},"nodeType":"YulFunctionCall","src":"26633:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26625:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26706:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26719:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"26730:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26715:3:7"},"nodeType":"YulFunctionCall","src":"26715:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26662:43:7"},"nodeType":"YulFunctionCall","src":"26662:71:7"},"nodeType":"YulExpressionStatement","src":"26662:71:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26754:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"26765:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26750:3:7"},"nodeType":"YulFunctionCall","src":"26750:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26774:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"26780:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26770:3:7"},"nodeType":"YulFunctionCall","src":"26770:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26743:6:7"},"nodeType":"YulFunctionCall","src":"26743:48:7"},"nodeType":"YulExpressionStatement","src":"26743:48:7"},{"nodeType":"YulAssignment","src":"26800:86:7","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26872:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"26881:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26808:63:7"},"nodeType":"YulFunctionCall","src":"26808:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26800:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26907:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"26918:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26903:3:7"},"nodeType":"YulFunctionCall","src":"26903:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26927:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"26933:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26923:3:7"},"nodeType":"YulFunctionCall","src":"26923:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26896:6:7"},"nodeType":"YulFunctionCall","src":"26896:48:7"},"nodeType":"YulExpressionStatement","src":"26896:48:7"},{"nodeType":"YulAssignment","src":"26953:86:7","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27025:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"27034:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26961:63:7"},"nodeType":"YulFunctionCall","src":"26961:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26953:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27060:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27071:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27056:3:7"},"nodeType":"YulFunctionCall","src":"27056:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27080:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"27086:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27076:3:7"},"nodeType":"YulFunctionCall","src":"27076:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27049:6:7"},"nodeType":"YulFunctionCall","src":"27049:48:7"},"nodeType":"YulExpressionStatement","src":"27049:48:7"},{"nodeType":"YulAssignment","src":"27106:86:7","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27178:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"27187:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27114:63:7"},"nodeType":"YulFunctionCall","src":"27114:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27106:4:7"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26563:9:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26575:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26583:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26591:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26599:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26610:4:7","type":""}],"src":"26373:826:7"},{"body":{"nodeType":"YulBlock","src":"27308:731:7","statements":[{"body":{"nodeType":"YulBlock","src":"27354:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"27356:77:7"},"nodeType":"YulFunctionCall","src":"27356:79:7"},"nodeType":"YulExpressionStatement","src":"27356:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27329:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"27338:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27325:3:7"},"nodeType":"YulFunctionCall","src":"27325:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"27350:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27321:3:7"},"nodeType":"YulFunctionCall","src":"27321:32:7"},"nodeType":"YulIf","src":"27318:119:7"},{"nodeType":"YulBlock","src":"27447:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"27462:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27493:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27504:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27489:3:7"},"nodeType":"YulFunctionCall","src":"27489:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27476:12:7"},"nodeType":"YulFunctionCall","src":"27476:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27466:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"27554:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27556:77:7"},"nodeType":"YulFunctionCall","src":"27556:79:7"},"nodeType":"YulExpressionStatement","src":"27556:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27526:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"27534:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27523:2:7"},"nodeType":"YulFunctionCall","src":"27523:30:7"},"nodeType":"YulIf","src":"27520:117:7"},{"nodeType":"YulAssignment","src":"27651:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27696:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"27707:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27692:3:7"},"nodeType":"YulFunctionCall","src":"27692:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27716:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"27661:30:7"},"nodeType":"YulFunctionCall","src":"27661:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27651:6:7"}]}]},{"nodeType":"YulBlock","src":"27744:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"27759:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27790:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27801:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27786:3:7"},"nodeType":"YulFunctionCall","src":"27786:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27773:12:7"},"nodeType":"YulFunctionCall","src":"27773:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27763:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"27852:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27854:77:7"},"nodeType":"YulFunctionCall","src":"27854:79:7"},"nodeType":"YulExpressionStatement","src":"27854:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27824:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"27832:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27821:2:7"},"nodeType":"YulFunctionCall","src":"27821:30:7"},"nodeType":"YulIf","src":"27818:117:7"},{"nodeType":"YulAssignment","src":"27949:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27994:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"28005:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27990:3:7"},"nodeType":"YulFunctionCall","src":"27990:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28014:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"27959:30:7"},"nodeType":"YulFunctionCall","src":"27959:63:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"27949:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27270:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27281:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27293:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27301:6:7","type":""}],"src":"27205:834:7"},{"body":{"nodeType":"YulBlock","src":"28172:818:7","statements":[{"body":{"nodeType":"YulBlock","src":"28219:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28221:77:7"},"nodeType":"YulFunctionCall","src":"28221:79:7"},"nodeType":"YulExpressionStatement","src":"28221:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28193:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"28202:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28189:3:7"},"nodeType":"YulFunctionCall","src":"28189:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"28214:3:7","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28185:3:7"},"nodeType":"YulFunctionCall","src":"28185:33:7"},"nodeType":"YulIf","src":"28182:120:7"},{"nodeType":"YulBlock","src":"28312:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"28327:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"28341:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28331:6:7","type":""}]},{"nodeType":"YulAssignment","src":"28356:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28391:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"28402:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28387:3:7"},"nodeType":"YulFunctionCall","src":"28387:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28411:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"28366:20:7"},"nodeType":"YulFunctionCall","src":"28366:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28356:6:7"}]}]},{"nodeType":"YulBlock","src":"28439:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"28454:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28485:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"28496:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28481:3:7"},"nodeType":"YulFunctionCall","src":"28481:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28468:12:7"},"nodeType":"YulFunctionCall","src":"28468:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28458:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"28547:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28549:77:7"},"nodeType":"YulFunctionCall","src":"28549:79:7"},"nodeType":"YulExpressionStatement","src":"28549:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28519:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"28527:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28516:2:7"},"nodeType":"YulFunctionCall","src":"28516:30:7"},"nodeType":"YulIf","src":"28513:117:7"},{"nodeType":"YulAssignment","src":"28644:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28689:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"28700:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28685:3:7"},"nodeType":"YulFunctionCall","src":"28685:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28709:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"28654:30:7"},"nodeType":"YulFunctionCall","src":"28654:63:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28644:6:7"}]}]},{"nodeType":"YulBlock","src":"28737:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"28752:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"28766:2:7","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28756:6:7","type":""}]},{"nodeType":"YulAssignment","src":"28782:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28817:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"28828:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28813:3:7"},"nodeType":"YulFunctionCall","src":"28813:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28837:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"28792:20:7"},"nodeType":"YulFunctionCall","src":"28792:53:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"28782:6:7"}]}]},{"nodeType":"YulBlock","src":"28865:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"28880:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"28894:2:7","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28884:6:7","type":""}]},{"nodeType":"YulAssignment","src":"28910:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28945:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"28956:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28941:3:7"},"nodeType":"YulFunctionCall","src":"28941:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28965:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"28920:20:7"},"nodeType":"YulFunctionCall","src":"28920:53:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"28910:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28118:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28129:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28141:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28149:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28157:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28165:6:7","type":""}],"src":"28045:945:7"},{"body":{"nodeType":"YulBlock","src":"29088:229:7","statements":[{"body":{"nodeType":"YulBlock","src":"29193:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"29195:16:7"},"nodeType":"YulFunctionCall","src":"29195:18:7"},"nodeType":"YulExpressionStatement","src":"29195:18:7"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29165:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"29173:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29162:2:7"},"nodeType":"YulFunctionCall","src":"29162:30:7"},"nodeType":"YulIf","src":"29159:56:7"},{"nodeType":"YulAssignment","src":"29225:25:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29237:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"29245:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29233:3:7"},"nodeType":"YulFunctionCall","src":"29233:17:7"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"29225:4:7"}]},{"nodeType":"YulAssignment","src":"29287:23:7","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"29299:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"29305:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29295:3:7"},"nodeType":"YulFunctionCall","src":"29295:15:7"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"29287:4:7"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"29072:6:7","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"29083:4:7","type":""}],"src":"28996:321:7"},{"body":{"nodeType":"YulBlock","src":"29412:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29429:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29432:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29422:6:7"},"nodeType":"YulFunctionCall","src":"29422:12:7"},"nodeType":"YulExpressionStatement","src":"29422:12:7"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"29323:117:7"},{"body":{"nodeType":"YulBlock","src":"29574:833:7","statements":[{"nodeType":"YulAssignment","src":"29584:100:7","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29676:6:7"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29609:66:7"},"nodeType":"YulFunctionCall","src":"29609:74:7"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"29593:15:7"},"nodeType":"YulFunctionCall","src":"29593:91:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"29584:5:7"}]},{"nodeType":"YulVariableDeclaration","src":"29693:16:7","value":{"name":"array","nodeType":"YulIdentifier","src":"29704:5:7"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"29697:3:7","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"29726:5:7"},{"name":"length","nodeType":"YulIdentifier","src":"29733:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29719:6:7"},"nodeType":"YulFunctionCall","src":"29719:21:7"},"nodeType":"YulExpressionStatement","src":"29719:21:7"},{"nodeType":"YulAssignment","src":"29749:23:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"29760:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"29767:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29756:3:7"},"nodeType":"YulFunctionCall","src":"29756:16:7"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"29749:3:7"}]},{"nodeType":"YulVariableDeclaration","src":"29782:44:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29800:6:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29812:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"29820:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29808:3:7"},"nodeType":"YulFunctionCall","src":"29808:17:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29796:3:7"},"nodeType":"YulFunctionCall","src":"29796:30:7"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"29786:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"29854:103:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"29868:77:7"},"nodeType":"YulFunctionCall","src":"29868:79:7"},"nodeType":"YulExpressionStatement","src":"29868:79:7"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"29841:6:7"},{"name":"end","nodeType":"YulIdentifier","src":"29849:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29838:2:7"},"nodeType":"YulFunctionCall","src":"29838:15:7"},"nodeType":"YulIf","src":"29835:122:7"},{"body":{"nodeType":"YulBlock","src":"30042:359:7","statements":[{"nodeType":"YulVariableDeclaration","src":"30057:36:7","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30089:3:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30076:12:7"},"nodeType":"YulFunctionCall","src":"30076:17:7"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"30061:11:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"30145:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"30147:77:7"},"nodeType":"YulFunctionCall","src":"30147:79:7"},"nodeType":"YulExpressionStatement","src":"30147:79:7"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"30112:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"30125:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30109:2:7"},"nodeType":"YulFunctionCall","src":"30109:35:7"},"nodeType":"YulIf","src":"30106:122:7"},{"nodeType":"YulVariableDeclaration","src":"30241:42:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30263:6:7"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"30271:11:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30259:3:7"},"nodeType":"YulFunctionCall","src":"30259:24:7"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"30245:10:7","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"30304:3:7"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"30340:10:7"},{"name":"end","nodeType":"YulIdentifier","src":"30352:3:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"30309:30:7"},"nodeType":"YulFunctionCall","src":"30309:47:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30297:6:7"},"nodeType":"YulFunctionCall","src":"30297:60:7"},"nodeType":"YulExpressionStatement","src":"30297:60:7"},{"nodeType":"YulAssignment","src":"30370:21:7","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"30381:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"30386:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30377:3:7"},"nodeType":"YulFunctionCall","src":"30377:14:7"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"30370:3:7"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29995:3:7"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"30000:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29992:2:7"},"nodeType":"YulFunctionCall","src":"29992:15:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30008:25:7","statements":[{"nodeType":"YulAssignment","src":"30010:21:7","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30021:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"30026:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30017:3:7"},"nodeType":"YulFunctionCall","src":"30017:14:7"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"30010:3:7"}]}]},"pre":{"nodeType":"YulBlock","src":"29970:21:7","statements":[{"nodeType":"YulVariableDeclaration","src":"29972:17:7","value":{"name":"offset","nodeType":"YulIdentifier","src":"29983:6:7"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"29976:3:7","type":""}]}]},"src":"29966:435:7"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"29544:6:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"29552:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"29560:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"29568:5:7","type":""}],"src":"29462:945:7"},{"body":{"nodeType":"YulBlock","src":"30516:303:7","statements":[{"body":{"nodeType":"YulBlock","src":"30565:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"30567:77:7"},"nodeType":"YulFunctionCall","src":"30567:79:7"},"nodeType":"YulExpressionStatement","src":"30567:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30544:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"30552:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30540:3:7"},"nodeType":"YulFunctionCall","src":"30540:17:7"},{"name":"end","nodeType":"YulIdentifier","src":"30559:3:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30536:3:7"},"nodeType":"YulFunctionCall","src":"30536:27:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30529:6:7"},"nodeType":"YulFunctionCall","src":"30529:35:7"},"nodeType":"YulIf","src":"30526:122:7"},{"nodeType":"YulVariableDeclaration","src":"30657:34:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30684:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30671:12:7"},"nodeType":"YulFunctionCall","src":"30671:20:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"30661:6:7","type":""}]},{"nodeType":"YulAssignment","src":"30700:113:7","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30786:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"30794:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30782:3:7"},"nodeType":"YulFunctionCall","src":"30782:17:7"},{"name":"length","nodeType":"YulIdentifier","src":"30801:6:7"},{"name":"end","nodeType":"YulIdentifier","src":"30809:3:7"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30709:72:7"},"nodeType":"YulFunctionCall","src":"30709:104:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"30700:5:7"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"30494:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"30502:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"30510:5:7","type":""}],"src":"30429:390:7"},{"body":{"nodeType":"YulBlock","src":"31024:1482:7","statements":[{"body":{"nodeType":"YulBlock","src":"31071:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31073:77:7"},"nodeType":"YulFunctionCall","src":"31073:79:7"},"nodeType":"YulExpressionStatement","src":"31073:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31045:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"31054:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31041:3:7"},"nodeType":"YulFunctionCall","src":"31041:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"31066:3:7","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31037:3:7"},"nodeType":"YulFunctionCall","src":"31037:33:7"},"nodeType":"YulIf","src":"31034:120:7"},{"nodeType":"YulBlock","src":"31164:287:7","statements":[{"nodeType":"YulVariableDeclaration","src":"31179:45:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31210:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"31221:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31206:3:7"},"nodeType":"YulFunctionCall","src":"31206:17:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31193:12:7"},"nodeType":"YulFunctionCall","src":"31193:31:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31183:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"31271:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"31273:77:7"},"nodeType":"YulFunctionCall","src":"31273:79:7"},"nodeType":"YulExpressionStatement","src":"31273:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31243:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"31251:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31240:2:7"},"nodeType":"YulFunctionCall","src":"31240:30:7"},"nodeType":"YulIf","src":"31237:117:7"},{"nodeType":"YulAssignment","src":"31368:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31413:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"31424:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31409:3:7"},"nodeType":"YulFunctionCall","src":"31409:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31433:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"31378:30:7"},"nodeType":"YulFunctionCall","src":"31378:63:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31368:6:7"}]}]},{"nodeType":"YulBlock","src":"31461:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"31476:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31507:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"31518:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31503:3:7"},"nodeType":"YulFunctionCall","src":"31503:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31490:12:7"},"nodeType":"YulFunctionCall","src":"31490:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31480:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"31569:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"31571:77:7"},"nodeType":"YulFunctionCall","src":"31571:79:7"},"nodeType":"YulExpressionStatement","src":"31571:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31541:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"31549:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31538:2:7"},"nodeType":"YulFunctionCall","src":"31538:30:7"},"nodeType":"YulIf","src":"31535:117:7"},{"nodeType":"YulAssignment","src":"31666:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31711:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"31722:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31707:3:7"},"nodeType":"YulFunctionCall","src":"31707:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31731:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"31676:30:7"},"nodeType":"YulFunctionCall","src":"31676:63:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"31666:6:7"}]}]},{"nodeType":"YulBlock","src":"31759:313:7","statements":[{"nodeType":"YulVariableDeclaration","src":"31774:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31805:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"31816:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31801:3:7"},"nodeType":"YulFunctionCall","src":"31801:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31788:12:7"},"nodeType":"YulFunctionCall","src":"31788:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31778:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"31867:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"31869:77:7"},"nodeType":"YulFunctionCall","src":"31869:79:7"},"nodeType":"YulExpressionStatement","src":"31869:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31839:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"31847:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31836:2:7"},"nodeType":"YulFunctionCall","src":"31836:30:7"},"nodeType":"YulIf","src":"31833:117:7"},{"nodeType":"YulAssignment","src":"31964:98:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32034:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"32045:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32030:3:7"},"nodeType":"YulFunctionCall","src":"32030:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32054:7:7"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31974:55:7"},"nodeType":"YulFunctionCall","src":"31974:88:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"31964:6:7"}]}]},{"nodeType":"YulBlock","src":"32082:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"32097:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"32111:2:7","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32101:6:7","type":""}]},{"nodeType":"YulAssignment","src":"32127:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32162:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"32173:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32158:3:7"},"nodeType":"YulFunctionCall","src":"32158:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32182:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"32137:20:7"},"nodeType":"YulFunctionCall","src":"32137:53:7"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"32127:6:7"}]}]},{"nodeType":"YulBlock","src":"32210:289:7","statements":[{"nodeType":"YulVariableDeclaration","src":"32225:47:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32256:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"32267:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32252:3:7"},"nodeType":"YulFunctionCall","src":"32252:19:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32239:12:7"},"nodeType":"YulFunctionCall","src":"32239:33:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32229:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"32319:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"32321:77:7"},"nodeType":"YulFunctionCall","src":"32321:79:7"},"nodeType":"YulExpressionStatement","src":"32321:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32291:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"32299:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32288:2:7"},"nodeType":"YulFunctionCall","src":"32288:30:7"},"nodeType":"YulIf","src":"32285:117:7"},{"nodeType":"YulAssignment","src":"32416:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32461:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"32472:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32457:3:7"},"nodeType":"YulFunctionCall","src":"32457:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32481:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"32426:30:7"},"nodeType":"YulFunctionCall","src":"32426:63:7"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"32416:6:7"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30962:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30973:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30985:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30993:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31001:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31009:6:7","type":""},{"name":"value4","nodeType":"YulTypedName","src":"31017:6:7","type":""}],"src":"30825:1681:7"},{"body":{"nodeType":"YulBlock","src":"32686:359:7","statements":[{"nodeType":"YulAssignment","src":"32696:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32708:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"32719:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32704:3:7"},"nodeType":"YulFunctionCall","src":"32704:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32696:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32776:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32789:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"32800:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32785:3:7"},"nodeType":"YulFunctionCall","src":"32785:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32732:43:7"},"nodeType":"YulFunctionCall","src":"32732:71:7"},"nodeType":"YulExpressionStatement","src":"32732:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32857:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32870:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"32881:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32866:3:7"},"nodeType":"YulFunctionCall","src":"32866:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32813:43:7"},"nodeType":"YulFunctionCall","src":"32813:72:7"},"nodeType":"YulExpressionStatement","src":"32813:72:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32906:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"32917:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32902:3:7"},"nodeType":"YulFunctionCall","src":"32902:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32926:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"32932:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32922:3:7"},"nodeType":"YulFunctionCall","src":"32922:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32895:6:7"},"nodeType":"YulFunctionCall","src":"32895:48:7"},"nodeType":"YulExpressionStatement","src":"32895:48:7"},{"nodeType":"YulAssignment","src":"32952:86:7","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33024:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"33033:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32960:63:7"},"nodeType":"YulFunctionCall","src":"32960:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32952:4:7"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32642:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32654:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32662:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32670:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32681:4:7","type":""}],"src":"32512:533:7"},{"body":{"nodeType":"YulBlock","src":"33079:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33096:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33099:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33089:6:7"},"nodeType":"YulFunctionCall","src":"33089:88:7"},"nodeType":"YulExpressionStatement","src":"33089:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33193:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33196:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33186:6:7"},"nodeType":"YulFunctionCall","src":"33186:15:7"},"nodeType":"YulExpressionStatement","src":"33186:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33217:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33220:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33210:6:7"},"nodeType":"YulFunctionCall","src":"33210:15:7"},"nodeType":"YulExpressionStatement","src":"33210:15:7"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"33051:180:7"},{"body":{"nodeType":"YulBlock","src":"33288:269:7","statements":[{"nodeType":"YulAssignment","src":"33298:22:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"33312:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"33318:1:7","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"33308:3:7"},"nodeType":"YulFunctionCall","src":"33308:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"33298:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"33329:38:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"33359:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"33365:1:7","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33355:3:7"},"nodeType":"YulFunctionCall","src":"33355:12:7"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"33333:18:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"33406:51:7","statements":[{"nodeType":"YulAssignment","src":"33420:27:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33434:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"33442:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33430:3:7"},"nodeType":"YulFunctionCall","src":"33430:17:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"33420:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"33386:18:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33379:6:7"},"nodeType":"YulFunctionCall","src":"33379:26:7"},"nodeType":"YulIf","src":"33376:81:7"},{"body":{"nodeType":"YulBlock","src":"33509:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"33523:16:7"},"nodeType":"YulFunctionCall","src":"33523:18:7"},"nodeType":"YulExpressionStatement","src":"33523:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"33473:18:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33496:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"33504:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33493:2:7"},"nodeType":"YulFunctionCall","src":"33493:14:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33470:2:7"},"nodeType":"YulFunctionCall","src":"33470:38:7"},"nodeType":"YulIf","src":"33467:84:7"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"33272:4:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"33281:6:7","type":""}],"src":"33237:320:7"},{"body":{"nodeType":"YulBlock","src":"33676:34:7","statements":[{"nodeType":"YulAssignment","src":"33686:18:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"33701:3:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"33686:11:7"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33648:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"33653:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"33664:11:7","type":""}],"src":"33563:147:7"},{"body":{"nodeType":"YulBlock","src":"33773:87:7","statements":[{"nodeType":"YulAssignment","src":"33783:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"33791:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33783:4:7"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33811:1:7","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"33814:3:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33804:6:7"},"nodeType":"YulFunctionCall","src":"33804:14:7"},"nodeType":"YulExpressionStatement","src":"33804:14:7"},{"nodeType":"YulAssignment","src":"33827:26:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33845:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33848:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"33835:9:7"},"nodeType":"YulFunctionCall","src":"33835:18:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33827:4:7"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"33760:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"33768:4:7","type":""}],"src":"33716:144:7"},{"body":{"nodeType":"YulBlock","src":"33997:769:7","statements":[{"nodeType":"YulVariableDeclaration","src":"34007:29:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34030:5:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34024:5:7"},"nodeType":"YulFunctionCall","src":"34024:12:7"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"34011:9:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34045:50:7","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34085:9:7"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"34059:25:7"},"nodeType":"YulFunctionCall","src":"34059:36:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34049:6:7","type":""}]},{"nodeType":"YulAssignment","src":"34104:95:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34187:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"34192:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34111:75:7"},"nodeType":"YulFunctionCall","src":"34111:88:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34104:3:7"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"34248:159:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34301:3:7"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34310:9:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34325:4:7","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34321:3:7"},"nodeType":"YulFunctionCall","src":"34321:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34306:3:7"},"nodeType":"YulFunctionCall","src":"34306:25:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34294:6:7"},"nodeType":"YulFunctionCall","src":"34294:38:7"},"nodeType":"YulExpressionStatement","src":"34294:38:7"},{"nodeType":"YulAssignment","src":"34345:52:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34356:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34365:6:7"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34387:6:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34380:6:7"},"nodeType":"YulFunctionCall","src":"34380:14:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34373:6:7"},"nodeType":"YulFunctionCall","src":"34373:22:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34361:3:7"},"nodeType":"YulFunctionCall","src":"34361:35:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34352:3:7"},"nodeType":"YulFunctionCall","src":"34352:45:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34345:3:7"}]}]},"nodeType":"YulCase","src":"34241:166:7","value":{"kind":"number","nodeType":"YulLiteral","src":"34246:1:7","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"34423:337:7","statements":[{"nodeType":"YulVariableDeclaration","src":"34468:56:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34518:5:7"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"34483:34:7"},"nodeType":"YulFunctionCall","src":"34483:41:7"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"34472:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34537:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"34546:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"34541:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"34604:110:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34633:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"34638:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34629:3:7"},"nodeType":"YulFunctionCall","src":"34629:11:7"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34648:7:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34642:5:7"},"nodeType":"YulFunctionCall","src":"34642:14:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34622:6:7"},"nodeType":"YulFunctionCall","src":"34622:35:7"},"nodeType":"YulExpressionStatement","src":"34622:35:7"},{"nodeType":"YulAssignment","src":"34674:26:7","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34689:7:7"},{"kind":"number","nodeType":"YulLiteral","src":"34698:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34685:3:7"},"nodeType":"YulFunctionCall","src":"34685:15:7"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34674:7:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"34571:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"34574:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34568:2:7"},"nodeType":"YulFunctionCall","src":"34568:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"34582:21:7","statements":[{"nodeType":"YulAssignment","src":"34584:17:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"34593:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"34596:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34589:3:7"},"nodeType":"YulFunctionCall","src":"34589:12:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"34584:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"34564:3:7","statements":[]},"src":"34560:154:7"},{"nodeType":"YulAssignment","src":"34727:23:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34738:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"34743:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34734:3:7"},"nodeType":"YulFunctionCall","src":"34734:16:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34727:3:7"}]}]},"nodeType":"YulCase","src":"34416:344:7","value":{"kind":"number","nodeType":"YulLiteral","src":"34421:1:7","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34219:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"34230:1:7","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34215:3:7"},"nodeType":"YulFunctionCall","src":"34215:17:7"},"nodeType":"YulSwitch","src":"34208:552:7"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33978:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33985:3:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33993:3:7","type":""}],"src":"33888:878:7"},{"body":{"nodeType":"YulBlock","src":"34907:138:7","statements":[{"nodeType":"YulAssignment","src":"34918:101:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35006:6:7"},{"name":"pos","nodeType":"YulIdentifier","src":"35015:3:7"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34925:80:7"},"nodeType":"YulFunctionCall","src":"34925:94:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34918:3:7"}]},{"nodeType":"YulAssignment","src":"35029:10:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"35036:3:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35029:3:7"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34886:3:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34892:6:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34903:3:7","type":""}],"src":"34772:273:7"},{"body":{"nodeType":"YulBlock","src":"35079:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35096:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35099:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35089:6:7"},"nodeType":"YulFunctionCall","src":"35089:88:7"},"nodeType":"YulExpressionStatement","src":"35089:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35193:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"35196:4:7","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35186:6:7"},"nodeType":"YulFunctionCall","src":"35186:15:7"},"nodeType":"YulExpressionStatement","src":"35186:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35217:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35220:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35210:6:7"},"nodeType":"YulFunctionCall","src":"35210:15:7"},"nodeType":"YulExpressionStatement","src":"35210:15:7"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"35051:180:7"},{"body":{"nodeType":"YulBlock","src":"35265:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35282:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35285:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35275:6:7"},"nodeType":"YulFunctionCall","src":"35275:88:7"},"nodeType":"YulExpressionStatement","src":"35275:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35379:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"35382:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35372:6:7"},"nodeType":"YulFunctionCall","src":"35372:15:7"},"nodeType":"YulExpressionStatement","src":"35372:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35403:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35406:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35396:6:7"},"nodeType":"YulFunctionCall","src":"35396:15:7"},"nodeType":"YulExpressionStatement","src":"35396:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"35237:180:7"},{"body":{"nodeType":"YulBlock","src":"35466:190:7","statements":[{"nodeType":"YulAssignment","src":"35476:33:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35503:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35485:17:7"},"nodeType":"YulFunctionCall","src":"35485:24:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35476:5:7"}]},{"body":{"nodeType":"YulBlock","src":"35599:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35601:16:7"},"nodeType":"YulFunctionCall","src":"35601:18:7"},"nodeType":"YulExpressionStatement","src":"35601:18:7"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35524:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"35531:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"35521:2:7"},"nodeType":"YulFunctionCall","src":"35521:77:7"},"nodeType":"YulIf","src":"35518:103:7"},{"nodeType":"YulAssignment","src":"35630:20:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35641:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"35648:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35637:3:7"},"nodeType":"YulFunctionCall","src":"35637:13:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35630:3:7"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35452:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35462:3:7","type":""}],"src":"35423:233:7"},{"body":{"nodeType":"YulBlock","src":"35706:147:7","statements":[{"nodeType":"YulAssignment","src":"35716:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35739:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35721:17:7"},"nodeType":"YulFunctionCall","src":"35721:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35716:1:7"}]},{"nodeType":"YulAssignment","src":"35750:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35773:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35755:17:7"},"nodeType":"YulFunctionCall","src":"35755:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35750:1:7"}]},{"nodeType":"YulAssignment","src":"35784:16:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35795:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"35798:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35791:3:7"},"nodeType":"YulFunctionCall","src":"35791:9:7"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"35784:3:7"}]},{"body":{"nodeType":"YulBlock","src":"35824:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35826:16:7"},"nodeType":"YulFunctionCall","src":"35826:18:7"},"nodeType":"YulExpressionStatement","src":"35826:18:7"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35816:1:7"},{"name":"sum","nodeType":"YulIdentifier","src":"35819:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35813:2:7"},"nodeType":"YulFunctionCall","src":"35813:10:7"},"nodeType":"YulIf","src":"35810:36:7"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35693:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"35696:1:7","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"35702:3:7","type":""}],"src":"35662:191:7"},{"body":{"nodeType":"YulBlock","src":"35913:87:7","statements":[{"nodeType":"YulAssignment","src":"35923:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"35931:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"35923:4:7"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35951:1:7","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"35954:3:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35944:6:7"},"nodeType":"YulFunctionCall","src":"35944:14:7"},"nodeType":"YulExpressionStatement","src":"35944:14:7"},{"nodeType":"YulAssignment","src":"35967:26:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35985:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35988:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"35975:9:7"},"nodeType":"YulFunctionCall","src":"35975:18:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"35967:4:7"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"35900:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"35908:4:7","type":""}],"src":"35859:141:7"},{"body":{"nodeType":"YulBlock","src":"36050:49:7","statements":[{"nodeType":"YulAssignment","src":"36060:33:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36078:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"36085:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36074:3:7"},"nodeType":"YulFunctionCall","src":"36074:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"36090:2:7","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"36070:3:7"},"nodeType":"YulFunctionCall","src":"36070:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"36060:6:7"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36033:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"36043:6:7","type":""}],"src":"36006:93:7"},{"body":{"nodeType":"YulBlock","src":"36158:54:7","statements":[{"nodeType":"YulAssignment","src":"36168:37:7","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"36193:4:7"},{"name":"value","nodeType":"YulIdentifier","src":"36199:5:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"36189:3:7"},"nodeType":"YulFunctionCall","src":"36189:16:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"36168:8:7"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"36133:4:7","type":""},{"name":"value","nodeType":"YulTypedName","src":"36139:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"36149:8:7","type":""}],"src":"36105:107:7"},{"body":{"nodeType":"YulBlock","src":"36294:317:7","statements":[{"nodeType":"YulVariableDeclaration","src":"36304:35:7","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"36325:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"36337:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36321:3:7"},"nodeType":"YulFunctionCall","src":"36321:18:7"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"36308:9:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36348:109:7","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"36379:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"36390:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"36360:18:7"},"nodeType":"YulFunctionCall","src":"36360:97:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"36352:4:7","type":""}]},{"nodeType":"YulAssignment","src":"36466:51:7","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"36497:9:7"},{"name":"toInsert","nodeType":"YulIdentifier","src":"36508:8:7"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"36478:18:7"},"nodeType":"YulFunctionCall","src":"36478:39:7"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"36466:8:7"}]},{"nodeType":"YulAssignment","src":"36526:30:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36539:5:7"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"36550:4:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36546:3:7"},"nodeType":"YulFunctionCall","src":"36546:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36535:3:7"},"nodeType":"YulFunctionCall","src":"36535:21:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36526:5:7"}]},{"nodeType":"YulAssignment","src":"36565:40:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36578:5:7"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"36589:8:7"},{"name":"mask","nodeType":"YulIdentifier","src":"36599:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36585:3:7"},"nodeType":"YulFunctionCall","src":"36585:19:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"36575:2:7"},"nodeType":"YulFunctionCall","src":"36575:30:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"36565:6:7"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36255:5:7","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"36262:10:7","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"36274:8:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"36287:6:7","type":""}],"src":"36218:393:7"},{"body":{"nodeType":"YulBlock","src":"36649:28:7","statements":[{"nodeType":"YulAssignment","src":"36659:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"36666:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"36659:3:7"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36635:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"36645:3:7","type":""}],"src":"36617:60:7"},{"body":{"nodeType":"YulBlock","src":"36743:82:7","statements":[{"nodeType":"YulAssignment","src":"36753:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36811:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36793:17:7"},"nodeType":"YulFunctionCall","src":"36793:24:7"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"36784:8:7"},"nodeType":"YulFunctionCall","src":"36784:34:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36766:17:7"},"nodeType":"YulFunctionCall","src":"36766:53:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"36753:9:7"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36723:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"36733:9:7","type":""}],"src":"36683:142:7"},{"body":{"nodeType":"YulBlock","src":"36878:28:7","statements":[{"nodeType":"YulAssignment","src":"36888:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"36895:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"36888:3:7"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36864:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"36874:3:7","type":""}],"src":"36831:75:7"},{"body":{"nodeType":"YulBlock","src":"36988:193:7","statements":[{"nodeType":"YulVariableDeclaration","src":"36998:63:7","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"37053:7:7"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"37022:30:7"},"nodeType":"YulFunctionCall","src":"37022:39:7"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"37002:16:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37077:4:7"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37117:4:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"37111:5:7"},"nodeType":"YulFunctionCall","src":"37111:11:7"},{"name":"offset","nodeType":"YulIdentifier","src":"37124:6:7"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"37156:16:7"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"37132:23:7"},"nodeType":"YulFunctionCall","src":"37132:41:7"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"37083:27:7"},"nodeType":"YulFunctionCall","src":"37083:91:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37070:6:7"},"nodeType":"YulFunctionCall","src":"37070:105:7"},"nodeType":"YulExpressionStatement","src":"37070:105:7"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"36965:4:7","type":""},{"name":"offset","nodeType":"YulTypedName","src":"36971:6:7","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"36979:7:7","type":""}],"src":"36912:269:7"},{"body":{"nodeType":"YulBlock","src":"37236:24:7","statements":[{"nodeType":"YulAssignment","src":"37246:8:7","value":{"kind":"number","nodeType":"YulLiteral","src":"37253:1:7","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"37246:3:7"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"37232:3:7","type":""}],"src":"37187:73:7"},{"body":{"nodeType":"YulBlock","src":"37319:136:7","statements":[{"nodeType":"YulVariableDeclaration","src":"37329:46:7","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"37343:30:7"},"nodeType":"YulFunctionCall","src":"37343:32:7"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"37333:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37428:4:7"},{"name":"offset","nodeType":"YulIdentifier","src":"37434:6:7"},{"name":"zero_0","nodeType":"YulIdentifier","src":"37442:6:7"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"37384:43:7"},"nodeType":"YulFunctionCall","src":"37384:65:7"},"nodeType":"YulExpressionStatement","src":"37384:65:7"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"37305:4:7","type":""},{"name":"offset","nodeType":"YulTypedName","src":"37311:6:7","type":""}],"src":"37266:189:7"},{"body":{"nodeType":"YulBlock","src":"37511:136:7","statements":[{"body":{"nodeType":"YulBlock","src":"37578:63:7","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"37622:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"37629:1:7","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"37592:29:7"},"nodeType":"YulFunctionCall","src":"37592:39:7"},"nodeType":"YulExpressionStatement","src":"37592:39:7"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"37531:5:7"},{"name":"end","nodeType":"YulIdentifier","src":"37538:3:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37528:2:7"},"nodeType":"YulFunctionCall","src":"37528:14:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"37543:26:7","statements":[{"nodeType":"YulAssignment","src":"37545:22:7","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"37558:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"37565:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37554:3:7"},"nodeType":"YulFunctionCall","src":"37554:13:7"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"37545:5:7"}]}]},"pre":{"nodeType":"YulBlock","src":"37525:2:7","statements":[]},"src":"37521:120:7"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"37499:5:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"37506:3:7","type":""}],"src":"37461:186:7"},{"body":{"nodeType":"YulBlock","src":"37732:464:7","statements":[{"body":{"nodeType":"YulBlock","src":"37758:431:7","statements":[{"nodeType":"YulVariableDeclaration","src":"37772:54:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"37820:5:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"37788:31:7"},"nodeType":"YulFunctionCall","src":"37788:38:7"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"37776:8:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37839:63:7","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"37862:8:7"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"37890:10:7"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"37872:17:7"},"nodeType":"YulFunctionCall","src":"37872:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37858:3:7"},"nodeType":"YulFunctionCall","src":"37858:44:7"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"37843:11:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"38059:27:7","statements":[{"nodeType":"YulAssignment","src":"38061:23:7","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"38076:8:7"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"38061:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"38043:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"38055:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38040:2:7"},"nodeType":"YulFunctionCall","src":"38040:18:7"},"nodeType":"YulIf","src":"38037:49:7"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"38128:11:7"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"38145:8:7"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"38173:3:7"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"38155:17:7"},"nodeType":"YulFunctionCall","src":"38155:22:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38141:3:7"},"nodeType":"YulFunctionCall","src":"38141:37:7"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"38099:28:7"},"nodeType":"YulFunctionCall","src":"38099:80:7"},"nodeType":"YulExpressionStatement","src":"38099:80:7"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"37749:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"37754:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37746:2:7"},"nodeType":"YulFunctionCall","src":"37746:11:7"},"nodeType":"YulIf","src":"37743:446:7"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"37708:5:7","type":""},{"name":"len","nodeType":"YulTypedName","src":"37715:3:7","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"37720:10:7","type":""}],"src":"37653:543:7"},{"body":{"nodeType":"YulBlock","src":"38265:54:7","statements":[{"nodeType":"YulAssignment","src":"38275:37:7","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"38300:4:7"},{"name":"value","nodeType":"YulIdentifier","src":"38306:5:7"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"38296:3:7"},"nodeType":"YulFunctionCall","src":"38296:16:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"38275:8:7"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"38240:4:7","type":""},{"name":"value","nodeType":"YulTypedName","src":"38246:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"38256:8:7","type":""}],"src":"38202:117:7"},{"body":{"nodeType":"YulBlock","src":"38376:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"38386:68:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38435:1:7","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"38438:5:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38431:3:7"},"nodeType":"YulFunctionCall","src":"38431:13:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38450:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"38446:3:7"},"nodeType":"YulFunctionCall","src":"38446:6:7"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"38402:28:7"},"nodeType":"YulFunctionCall","src":"38402:51:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"38398:3:7"},"nodeType":"YulFunctionCall","src":"38398:56:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"38390:4:7","type":""}]},{"nodeType":"YulAssignment","src":"38463:25:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"38477:4:7"},{"name":"mask","nodeType":"YulIdentifier","src":"38483:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38473:3:7"},"nodeType":"YulFunctionCall","src":"38473:15:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"38463:6:7"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"38353:4:7","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"38359:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"38369:6:7","type":""}],"src":"38325:169:7"},{"body":{"nodeType":"YulBlock","src":"38580:214:7","statements":[{"nodeType":"YulAssignment","src":"38713:37:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"38740:4:7"},{"name":"len","nodeType":"YulIdentifier","src":"38746:3:7"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"38721:18:7"},"nodeType":"YulFunctionCall","src":"38721:29:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"38713:4:7"}]},{"nodeType":"YulAssignment","src":"38759:29:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"38770:4:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38780:1:7","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"38783:3:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38776:3:7"},"nodeType":"YulFunctionCall","src":"38776:11:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"38767:2:7"},"nodeType":"YulFunctionCall","src":"38767:21:7"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"38759:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"38561:4:7","type":""},{"name":"len","nodeType":"YulTypedName","src":"38567:3:7","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"38575:4:7","type":""}],"src":"38499:295:7"},{"body":{"nodeType":"YulBlock","src":"38891:1303:7","statements":[{"nodeType":"YulVariableDeclaration","src":"38902:51:7","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38949:3:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"38916:32:7"},"nodeType":"YulFunctionCall","src":"38916:37:7"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"38906:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"39038:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"39040:16:7"},"nodeType":"YulFunctionCall","src":"39040:18:7"},"nodeType":"YulExpressionStatement","src":"39040:18:7"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"39010:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"39018:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39007:2:7"},"nodeType":"YulFunctionCall","src":"39007:30:7"},"nodeType":"YulIf","src":"39004:56:7"},{"nodeType":"YulVariableDeclaration","src":"39070:52:7","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"39116:4:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"39110:5:7"},"nodeType":"YulFunctionCall","src":"39110:11:7"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"39084:25:7"},"nodeType":"YulFunctionCall","src":"39084:38:7"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"39074:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"39215:4:7"},{"name":"oldLen","nodeType":"YulIdentifier","src":"39221:6:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"39229:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"39169:45:7"},"nodeType":"YulFunctionCall","src":"39169:67:7"},"nodeType":"YulExpressionStatement","src":"39169:67:7"},{"nodeType":"YulVariableDeclaration","src":"39246:18:7","value":{"kind":"number","nodeType":"YulLiteral","src":"39263:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"39250:9:7","type":""}]},{"nodeType":"YulAssignment","src":"39274:17:7","value":{"kind":"number","nodeType":"YulLiteral","src":"39287:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"39274:9:7"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"39338:611:7","statements":[{"nodeType":"YulVariableDeclaration","src":"39352:37:7","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"39371:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39383:4:7","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"39379:3:7"},"nodeType":"YulFunctionCall","src":"39379:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39367:3:7"},"nodeType":"YulFunctionCall","src":"39367:22:7"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"39356:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"39403:51:7","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"39449:4:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"39417:31:7"},"nodeType":"YulFunctionCall","src":"39417:37:7"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"39407:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"39467:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"39476:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"39471:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"39535:163:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"39560:6:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"39578:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"39583:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39574:3:7"},"nodeType":"YulFunctionCall","src":"39574:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39568:5:7"},"nodeType":"YulFunctionCall","src":"39568:26:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"39553:6:7"},"nodeType":"YulFunctionCall","src":"39553:42:7"},"nodeType":"YulExpressionStatement","src":"39553:42:7"},{"nodeType":"YulAssignment","src":"39612:24:7","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"39626:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"39634:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39622:3:7"},"nodeType":"YulFunctionCall","src":"39622:14:7"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"39612:6:7"}]},{"nodeType":"YulAssignment","src":"39653:31:7","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"39670:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"39681:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39666:3:7"},"nodeType":"YulFunctionCall","src":"39666:18:7"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"39653:9:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39501:1:7"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"39504:7:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39498:2:7"},"nodeType":"YulFunctionCall","src":"39498:14:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"39513:21:7","statements":[{"nodeType":"YulAssignment","src":"39515:17:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39524:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"39527:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39520:3:7"},"nodeType":"YulFunctionCall","src":"39520:12:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"39515:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"39494:3:7","statements":[]},"src":"39490:208:7"},{"body":{"nodeType":"YulBlock","src":"39734:156:7","statements":[{"nodeType":"YulVariableDeclaration","src":"39752:43:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"39779:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"39784:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39775:3:7"},"nodeType":"YulFunctionCall","src":"39775:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39769:5:7"},"nodeType":"YulFunctionCall","src":"39769:26:7"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"39756:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"39819:6:7"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"39846:9:7"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"39861:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"39869:4:7","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39857:3:7"},"nodeType":"YulFunctionCall","src":"39857:17:7"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"39827:18:7"},"nodeType":"YulFunctionCall","src":"39827:48:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"39812:6:7"},"nodeType":"YulFunctionCall","src":"39812:64:7"},"nodeType":"YulExpressionStatement","src":"39812:64:7"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"39717:7:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"39726:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39714:2:7"},"nodeType":"YulFunctionCall","src":"39714:19:7"},"nodeType":"YulIf","src":"39711:179:7"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"39910:4:7"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"39924:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"39932:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"39920:3:7"},"nodeType":"YulFunctionCall","src":"39920:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"39936:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39916:3:7"},"nodeType":"YulFunctionCall","src":"39916:22:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"39903:6:7"},"nodeType":"YulFunctionCall","src":"39903:36:7"},"nodeType":"YulExpressionStatement","src":"39903:36:7"}]},"nodeType":"YulCase","src":"39331:618:7","value":{"kind":"number","nodeType":"YulLiteral","src":"39336:1:7","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"39966:222:7","statements":[{"nodeType":"YulVariableDeclaration","src":"39980:14:7","value":{"kind":"number","nodeType":"YulLiteral","src":"39993:1:7","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"39984:5:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"40017:67:7","statements":[{"nodeType":"YulAssignment","src":"40035:35:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"40054:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"40059:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40050:3:7"},"nodeType":"YulFunctionCall","src":"40050:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40044:5:7"},"nodeType":"YulFunctionCall","src":"40044:26:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"40035:5:7"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"40010:6:7"},"nodeType":"YulIf","src":"40007:77:7"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"40104:4:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40163:5:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"40170:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"40110:52:7"},"nodeType":"YulFunctionCall","src":"40110:67:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"40097:6:7"},"nodeType":"YulFunctionCall","src":"40097:81:7"},"nodeType":"YulExpressionStatement","src":"40097:81:7"}]},"nodeType":"YulCase","src":"39958:230:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"39311:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"39319:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39308:2:7"},"nodeType":"YulFunctionCall","src":"39308:14:7"},"nodeType":"YulSwitch","src":"39301:887:7"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"38880:4:7","type":""},{"name":"src","nodeType":"YulTypedName","src":"38886:3:7","type":""}],"src":"38799:1395:7"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_string_memory_ptr__to_t_string_memory_ptr_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106103835760003560e01c806389e93784116101de578063b527d45e1161010f578063cace8d46116100ad578063dddb6f861161007c578063dddb6f8614610be7578063e32acc1a14610c17578063ec24580214610c47578063ff4a37ef14610c6557610383565b8063cace8d4614610b36578063cd23080914610b69578063d3791b2014610b99578063d9fc52db14610bb757610383565b8063c04fe978116100e9578063c04fe97814610aae578063c29595c514610acc578063ca013f1714610ae8578063ca98210414610b0657610383565b8063b527d45e14610a43578063bda0033514610a76578063c04e743014610a9257610383565b8063a36adb9f1161017c578063aa2bf5d311610156578063aa2bf5d3146109bb578063aa4cdf2a146109d9578063b16060a614610a09578063b39a38bd14610a1357610383565b8063a36adb9f14610923578063a428a47f14610953578063a807c20e1461098b57610383565b80639077007d116101b85780639077007d14610887578063934c5f00146108a557806397ee7606146108d5578063a1ca9178146108f357610383565b806389e93784146108095780638ac4110c146108395780638d3d25951461085757610383565b80634a797bd7116102b85780637fc543ec11610256578063829a5d9811610230578063829a5d981461077157806386ffa45b146107a157806387633eb2146107d1578063881de858146107ed57610383565b80637fc543ec146106f3578063812fae1f14610725578063826eeefe1461075557610383565b80636ecda4ee116102925780636ecda4ee146106585780637bbd582d146106885780637bc9724b146106a65780637f2035d4146106c257610383565b80634a797bd7146105d757806354a9fb18146105f55780635d907da11461062857610383565b806320959ed011610325578063330b8f26116102ff578063330b8f26146105105780633f87a2f41461054257806342f78f4714610575578063468d0c80146105a557610383565b806320959ed01461049057806327a568b9146104c057806329b56f60146104f257610383565b80631b592aeb116103615780631b592aeb146103f45780631ba44c4c146104125780631e9ac9f5146104445780631fd4d6641461047457610383565b80630377d44a146103885780631171b621146103b857806313bf4cea146103d6575b600080fd5b6103a2600480360381019061039d9190613930565b610c97565b6040516103af9190613aba565b60405180910390f35b6103c0610e21565b6040516103cd9190613af5565b60405180910390f35b6103de610e27565b6040516103eb9190613af5565b60405180910390f35b6103fc610e2d565b6040516104099190613af5565b60405180910390f35b61042c60048036038101906104279190613b3c565b610e33565b60405161043b93929190613bb3565b60405180910390f35b61045e60048036038101906104599190613930565b610f6d565b60405161046b9190613af5565b60405180910390f35b61048e60048036038101906104899190613bf8565b610fde565b005b6104aa60048036038101906104a59190613b3c565b611161565b6040516104b79190613af5565b60405180910390f35b6104da60048036038101906104d59190613b3c565b611179565b6040516104e993929190613cc7565b60405180910390f35b6104fa61133b565b6040516105079190613aba565b60405180910390f35b61052a60048036038101906105259190613b3c565b611476565b60405161053993929190613d13565b60405180910390f35b61055c60048036038101906105579190613b3c565b6115b0565b60405161056c9493929190613d58565b60405180910390f35b61058f600480360381019061058a9190613930565b611668565b60405161059c9190613e62565b60405180910390f35b6105bf60048036038101906105ba9190613b3c565b611766565b6040516105ce93929190613bb3565b60405180910390f35b6105df6118a0565b6040516105ec9190613af5565b60405180910390f35b61060f600480360381019061060a9190613b3c565b6118a6565b60405161061f9493929190613e84565b60405180910390f35b610642600480360381019061063d9190613b3c565b6119e6565b60405161064f9190613ed7565b60405180910390f35b610672600480360381019061066d9190613b3c565b611a8e565b60405161067f9190613ed7565b60405180910390f35b610690611b2e565b60405161069d9190613af5565b60405180910390f35b6106c060048036038101906106bb9190613ef9565b611b34565b005b6106dc60048036038101906106d79190613b3c565b611c29565b6040516106ea929190613fb4565b60405180910390f35b61070d60048036038101906107089190613b3c565b611d5d565b60405161071c93929190613feb565b60405180910390f35b61073f600480360381019061073a9190613b3c565b611e0f565b60405161074c9190613e62565b60405180910390f35b61076f600480360381019061076a9190613b3c565b611ef2565b005b61078b60048036038101906107869190613930565b611fa2565b6040516107989190613aba565b60405180910390f35b6107bb60048036038101906107b69190614029565b61212c565b6040516107c89190613af5565b60405180910390f35b6107eb60048036038101906107e691906140e4565b61224c565b005b61080760048036038101906108029190614140565b612271565b005b610823600480360381019061081e9190614203565b6122be565b6040516108309190613af5565b60405180910390f35b6108416123c4565b60405161084e9190613af5565b60405180910390f35b610871600480360381019061086c9190613b3c565b6123ca565b60405161087e9190613ed7565b60405180910390f35b61088f612472565b60405161089c9190613af5565b60405180910390f35b6108bf60048036038101906108ba91906142d2565b612478565b6040516108cc9190613af5565b60405180910390f35b6108dd61250c565b6040516108ea9190613aba565b60405180910390f35b61090d60048036038101906109089190613930565b612647565b60405161091a9190613af5565b60405180910390f35b61093d60048036038101906109389190614355565b6126b8565b60405161094a9190613af5565b60405180910390f35b61096d60048036038101906109689190613b3c565b61274d565b604051610982999897969594939291906143c0565b60405180910390f35b6109a560048036038101906109a09190614355565b612803565b6040516109b2919061444d565b60405180910390f35b6109c3612898565b6040516109d09190613af5565b60405180910390f35b6109f360048036038101906109ee9190613930565b61289e565b604051610a009190613ed7565b60405180910390f35b610a116129b8565b005b610a2d6004803603810190610a289190614468565b612c8a565b604051610a3a9190613af5565b60405180910390f35b610a5d6004803603810190610a589190613b3c565b612d78565b604051610a6d9493929190614523565b60405180910390f35b610a906004803603810190610a8b919061457d565b612f40565b005b610aac6004803603810190610aa791906140e4565b612fd7565b005b610ab6612fff565b604051610ac39190613aba565b60405180910390f35b610ae66004803603810190610ae191906140e4565b613139565b005b610af0613161565b604051610afd9190613af5565b60405180910390f35b610b206004803603810190610b1b9190614029565b613167565b604051610b2d9190613af5565b60405180910390f35b610b506004803603810190610b4b9190613b3c565b613244565b604051610b609493929190613d58565b60405180910390f35b610b836004803603810190610b7e91906140e4565b6132fc565b604051610b90919061444d565b60405180910390f35b610ba161338d565b604051610bae9190613af5565b60405180910390f35b610bd16004803603810190610bcc91906145f5565b613393565b604051610bde9190613af5565b60405180910390f35b610c016004803603810190610bfc919061475e565b613458565b604051610c0e9190613af5565b60405180910390f35b610c316004803603810190610c2c9190613b3c565b6135b9565b604051610c3e9190613ed7565b60405180910390f35b610c4f613661565b604051610c5c9190613af5565b60405180910390f35b610c7f6004803603810190610c7a9190613b3c565b613667565b604051610c8e93929190614849565b60405180910390f35b6060600060025467ffffffffffffffff811115610cb757610cb6613805565b5b604051908082528060200260200182016040528015610cea57816020015b6060815260200190600190039081610cd55790505b509050600080600090505b600254811015610e16578480519060200120600e6000838152602001908152602001600020600001604051610d2a919061498a565b604051809103902003610e0357600e60008281526020019081526020016000206001018054610d58906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d84906148b6565b8015610dd15780601f10610da657610100808354040283529160200191610dd1565b820191906000526020600020905b815481529060010190602001808311610db457829003601f168201915b5050505050838381518110610de957610de86149a1565b5b60200260200101819052508180610dff906149ff565b9250505b8080610e0e906149ff565b915050610cf5565b508192505050919050565b60045481565b60025481565b60055481565b6014602052806000526040600020600091509050806000018054610e56906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610e82906148b6565b8015610ecf5780601f10610ea457610100808354040283529160200191610ecf565b820191906000526020600020905b815481529060010190602001808311610eb257829003601f168201915b505050505090806001018054610ee4906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f10906148b6565b8015610f5d5780601f10610f3257610100808354040283529160200191610f5d565b820191906000526020600020905b815481529060010190602001808311610f4057829003601f168201915b5050505050908060020154905083565b600080600090505b600254811015610fd3578280519060200120600e6000838152602001908152602001600020600101604051610faa919061498a565b604051809103902003610fc05780915050610fd9565b8080610fcb906149ff565b915050610f75565b50600090505b919050565b600015156018600085815260200190815260200160002060010160059054906101000a900460ff1615150361104d5761104c826040518060400160405280600581526020017f6261646765000000000000000000000000000000000000000000000000000000815250612f40565b5b61108c816040518060400160405280600881526020017f646f6e6174696f6e000000000000000000000000000000000000000000000000815250612f40565b60016018600085815260200190815260200160002060010160056101000a81548160ff021916908315150217905550836010600085815260200190815260200160002060008282546110de9190614a47565b92505081905550604051806060016040528086815260200184815260200185815250601260006001548152602001908152602001600020600082015181600001908161112a9190614c27565b50602082015181600101556040820151816002015590505060016000815480929190611155906149ff565b91905055505050505050565b60106020528060005260406000206000915090505481565b600b60205280600052604060002060009150905080600001805461119c906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546111c8906148b6565b80156112155780601f106111ea57610100808354040283529160200191611215565b820191906000526020600020905b8154815290600101906020018083116111f857829003601f168201915b50505050509080600101805461122a906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611256906148b6565b80156112a35780601f10611278576101008083540402835291602001916112a3565b820191906000526020600020905b81548152906001019060200180831161128657829003601f168201915b5050505050908060020180546112b8906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546112e4906148b6565b80156113315780601f1061130657610100808354040283529160200191611331565b820191906000526020600020905b81548152906001019060200180831161131457829003601f168201915b5050505050905083565b6060600060025467ffffffffffffffff81111561135b5761135a613805565b5b60405190808252806020026020018201604052801561138e57816020015b60608152602001906001900390816113795790505b50905060005b60025481101561146e57600e600082815260200190815260200160002060010180546113bf906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546113eb906148b6565b80156114385780601f1061140d57610100808354040283529160200191611438565b820191906000526020600020905b81548152906001019060200180831161141b57829003601f168201915b50505050508282815181106114505761144f6149a1565b5b60200260200101819052508080611466906149ff565b915050611394565b508091505090565b600d602052806000526040600020600091509050806000018054611499906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546114c5906148b6565b80156115125780601f106114e757610100808354040283529160200191611512565b820191906000526020600020905b8154815290600101906020018083116114f557829003601f168201915b50505050509080600101549080600201805461152d906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611559906148b6565b80156115a65780601f1061157b576101008083540402835291602001916115a6565b820191906000526020600020905b81548152906001019060200180831161158957829003601f168201915b5050505050905083565b60176020528060005260406000206000915090508060000154908060010154908060020154908060030180546115e5906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611611906148b6565b801561165e5780601f106116335761010080835404028352916020019161165e565b820191906000526020600020905b81548152906001019060200180831161164157829003601f168201915b5050505050905084565b6060600060075467ffffffffffffffff81111561168857611687613805565b5b6040519080825280602002602001820160405280156116b65781602001602082028036833780820191505090505b509050600080600090505b60075481101561175b578480519060200120601560008381526020019081526020016000206001016040516116f6919061498a565b60405180910390200361174857601560008281526020019081526020016000206000015483838151811061172d5761172c6149a1565b5b6020026020010181815250508180611744906149ff565b9250505b8080611753906149ff565b9150506116c1565b508192505050919050565b600f602052806000526040600020600091509050806000018054611789906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546117b5906148b6565b80156118025780601f106117d757610100808354040283529160200191611802565b820191906000526020600020905b8154815290600101906020018083116117e557829003601f168201915b505050505090806001018054611817906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611843906148b6565b80156118905780601f1061186557610100808354040283529160200191611890565b820191906000526020600020905b81548152906001019060200180831161187357829003601f168201915b5050505050908060020154905083565b60065481565b60116020528060005260406000206000915090508060000154908060010154908060020180546118d5906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611901906148b6565b801561194e5780601f106119235761010080835404028352916020019161194e565b820191906000526020600020905b81548152906001019060200180831161193157829003601f168201915b505050505090806003018054611963906148b6565b80601f016020809104026020016040519081016040528092919081815260200182805461198f906148b6565b80156119dc5780601f106119b1576101008083540402835291602001916119dc565b820191906000526020600020905b8154815290600101906020018083116119bf57829003601f168201915b5050505050905084565b6060600b60008381526020019081526020016000206001018054611a09906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611a35906148b6565b8015611a825780601f10611a5757610100808354040283529160200191611a82565b820191906000526020600020905b815481529060010190602001808311611a6557829003601f168201915b50505050509050919050565b600c6020528060005260406000206000915090508054611aad906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611ad9906148b6565b8015611b265780601f10611afb57610100808354040283529160200191611b26565b820191906000526020600020905b815481529060010190602001808311611b0957829003601f168201915b505050505081565b60005481565b60016018600085815260200190815260200160002060010160016101000a81548160ff021916908315150217905550604051806060016040528085815260200184815260200183815250600d600060045481526020019081526020016000206000820151816000019081611ba89190614c27565b50602082015181600101556040820151816002019081611bc89190614c27565b5090505060046000815480929190611bdf906149ff565b9190505550611c23816040518060400160405280600481526020017f6a6f696e00000000000000000000000000000000000000000000000000000000815250612f40565b50505050565b600e602052806000526040600020600091509050806000018054611c4c906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611c78906148b6565b8015611cc55780601f10611c9a57610100808354040283529160200191611cc5565b820191906000526020600020905b815481529060010190602001808311611ca857829003601f168201915b505050505090806001018054611cda906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611d06906148b6565b8015611d535780601f10611d2857610100808354040283529160200191611d53565b820191906000526020600020905b815481529060010190602001808311611d3657829003601f168201915b5050505050905082565b6012602052806000526040600020600091509050806000018054611d80906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054611dac906148b6565b8015611df95780601f10611dce57610100808354040283529160200191611df9565b820191906000526020600020905b815481529060010190602001808311611ddc57829003601f168201915b5050505050908060010154908060020154905083565b6060600060095467ffffffffffffffff811115611e2f57611e2e613805565b5b604051908082528060200260200182016040528015611e5d5781602001602082028036833780820191505090505b509050600080600090505b600954811015611ee75784601760008381526020019081526020016000206001015403611ed4576017600082815260200190815260200160002060000154838381518110611eb957611eb86149a1565b5b6020026020010181815250508180611ed0906149ff565b9250505b8080611edf906149ff565b915050611e68565b508192505050919050565b60405180606001604052806040518060400160405280600481526020017f3939393900000000000000000000000000000000000000000000000000000000815250815260200161270f815260200160405180602001604052806000815250815250600d60008381526020019081526020016000206000820151816000019081611f7b9190614c27565b50602082015181600101556040820151816002019081611f9b9190614c27565b5090505050565b6060600060035467ffffffffffffffff811115611fc257611fc1613805565b5b604051908082528060200260200182016040528015611ff557816020015b6060815260200190600190039081611fe05790505b509050600080600090505b600354811015612121578480519060200120600f6000838152602001908152602001600020600001604051612035919061498a565b60405180910390200361210057600f60008281526020019081526020016000206001018054612063906148b6565b80601f016020809104026020016040519081016040528092919081815260200182805461208f906148b6565b80156120dc5780601f106120b1576101008083540402835291602001916120dc565b820191906000526020600020905b8154815290600101906020018083116120bf57829003601f168201915b50505050508383815181106120f4576120f36149a1565b5b60200260200101819052505b818061210b906149ff565b9250508080612119906149ff565b915050612000565b508192505050919050565b600060405180606001604052808681526020018581526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600b60008054815260200190815260200160002060008201518160000190816121a79190614c27565b5060208201518160010190816121bd9190614c27565b5060408201518160020190816121d39190614c27565b5090505082600c60008054815260200190815260200160002090816121f89190614c27565b5060016018600084815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060008081548092919061223a906149ff565b91905055506000549050949350505050565b80600c6000848152602001908152602001600020908161226c9190614c27565b505050565b81600b600085815260200190815260200160002060000190816122949190614c27565b5080600b600085815260200190815260200160002060010190816122b89190614c27565b50505050565b600060016018600086815260200190815260200160002060010160046101000a81548160ff02191690831515021790555060405180606001604052808781526020018681526020018581525060146000600654815260200190815260200160002060008201518160000190816123349190614c27565b50602082015181600101908161234a9190614c27565b50604082015181600201559050506006600081548092919061236b906149ff565b919050555081156123b6576123b5836040518060400160405280600481526020017f766f746500000000000000000000000000000000000000000000000000000000815250612f40565b5b600654905095945050505050565b600a5481565b6060600f600083815260200190815260200160002060010180546123ed906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054612419906148b6565b80156124665780601f1061243b57610100808354040283529160200191612466565b820191906000526020600020905b81548152906001019060200180831161244957829003601f168201915b50505050509050919050565b60075481565b600060405180608001604052808681526020018581526020018481526020018381525060166000600854815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030190816124e39190614c27565b50905050600860008154809291906124fa906149ff565b91905055506008549050949350505050565b6060600060035467ffffffffffffffff81111561252c5761252b613805565b5b60405190808252806020026020018201604052801561255f57816020015b606081526020019060019003908161254a5790505b50905060005b60035481101561263f57600f60008281526020019081526020016000206001018054612590906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546125bc906148b6565b80156126095780601f106125de57610100808354040283529160200191612609565b820191906000526020600020905b8154815290600101906020018083116125ec57829003601f168201915b5050505050828281518110612621576126206149a1565b5b60200260200101819052508080612637906149ff565b915050612565565b508091505090565b600080600090505b6003548110156126ad578280519060200120600f6000838152602001908152602001600020600101604051612684919061498a565b60405180910390200361269a57809150506126b3565b80806126a5906149ff565b91505061264f565b50600090505b919050565b600080600090505b6004548110156127405782600d60008381526020019081526020016000206001015414801561271f57508380519060200120600d6000838152602001908152602001600020600001604051612715919061498a565b6040518091039020145b1561272d5780915050612747565b8080612738906149ff565b9150506126c0565b5061270f90505b92915050565b60186020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16908060010160049054906101000a900460ff16908060010160059054906101000a900460ff16908060010160069054906101000a900460ff16908060010160079054906101000a900460ff16905089565b600080600090505b60045481101561288c5782600d60008381526020019081526020016000206001015414801561286a57508380519060200120600d6000838152602001908152602001600020600001604051612860919061498a565b6040518091039020145b15612879576001915050612892565b8080612884906149ff565b91505061280b565b50600090505b92915050565b60095481565b606060005b60035481101561299f578280519060200120600f60008381526020019081526020016000206001016040516128d8919061498a565b60405180910390200361298c57600f60008281526020019081526020016000206000018054612906906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054612932906148b6565b801561297f5780601f106129545761010080835404028352916020019161297f565b820191906000526020600020905b81548152906001019060200180831161296257829003601f168201915b50505050509150506129b3565b8080612997906149ff565b9150506128a3565b506040518060200160405280600081525090505b919050565b60005b600054811015612a1e57600b6000828152602001908152602001600020600080820160006129e99190613779565b6001820160006129f99190613779565b600282016000612a099190613779565b50508080612a16906149ff565b9150506129bb565b5060005b600254811015612a7557600e600082815260200190815260200160002060008082016000612a509190613779565b600182016000612a609190613779565b50508080612a6d906149ff565b915050612a22565b5060005b600354811015612ad457600f600082815260200190815260200160002060008082016000612aa79190613779565b600182016000612ab79190613779565b600282016000905550508080612acc906149ff565b915050612a79565b5060005b600254811015612b2b57601360008281526020019081526020016000206000808201600090556001820160009055600282016000612b169190613779565b50508080612b23906149ff565b915050612ad8565b5060005b600754811015612b9a5760156000828152602001908152602001600020600080820160009055600182016000612b659190613779565b600282016000612b759190613779565b600382016000612b859190613779565b50508080612b92906149ff565b915050612b2f565b5060005b600954811015612bf9576017600082815260200190815260200160002060008082016000905560018201600090556002820160009055600382016000612be49190613779565b50508080612bf1906149ff565b915050612b9e565b5060005b600654811015612c58576014600082815260200190815260200160002060008082016000612c2b9190613779565b600182016000612c3b9190613779565b600282016000905550508080612c50906149ff565b915050612bfd565b506000808190555060006002819055506000600381905550600060078190555060006009819055506000600681905550565b6000604051806040016040528085815260200186815250600e600060025481526020019081526020016000206000820151816000019081612ccb9190614c27565b506020820151816001019081612ce19190614c27565b5090505060016018600085815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060026000815480929190612d27906149ff565b9190505550612d6b826040518060400160405280600481526020017f676f616c00000000000000000000000000000000000000000000000000000000815250612f40565b6002549050949350505050565b6015602052806000526040600020600091509050806000015490806001018054612da1906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054612dcd906148b6565b8015612e1a5780601f10612def57610100808354040283529160200191612e1a565b820191906000526020600020905b815481529060010190602001808311612dfd57829003601f168201915b505050505090806002018054612e2f906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054612e5b906148b6565b8015612ea85780601f10612e7d57610100808354040283529160200191612ea8565b820191906000526020600020905b815481529060010190602001808311612e8b57829003601f168201915b505050505090806003018054612ebd906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054612ee9906148b6565b8015612f365780601f10612f0b57610100808354040283529160200191612f36565b820191906000526020600020905b815481529060010190602001808311612f1957829003601f168201915b5050505050905084565b6040518060800160405280600a5481526020014281526020018281526020018381525060116000600a54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081612fa19190614c27565b506060820151816003019081612fb79190614c27565b50905050600a6000815480929190612fce906149ff565b91905055505050565b80600f60008481526020019081526020016000206001019081612ffa9190614c27565b505050565b60606000805467ffffffffffffffff81111561301e5761301d613805565b5b60405190808252806020026020018201604052801561305157816020015b606081526020019060019003908161303c5790505b50905060005b60005481101561313157600b60008281526020019081526020016000206001018054613082906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546130ae906148b6565b80156130fb5780601f106130d0576101008083540402835291602001916130fb565b820191906000526020600020905b8154815290600101906020018083116130de57829003601f168201915b5050505050828281518110613113576131126149a1565b5b60200260200101819052508080613129906149ff565b915050613057565b508091505090565b80600e6000848152602001908152602001600020600101908161315c9190614c27565b505050565b60085481565b600060016018600084815260200190815260200160002060010160066101000a81548160ff02191690831515021790555060405180608001604052806007548152602001868152602001858152602001848152506015600060075481526020019081526020016000206000820151816000015560208201518160010190816131ef9190614c27565b5060408201518160020190816132059190614c27565b50606082015181600301908161321b9190614c27565b5090505060076000815480929190613232906149ff565b91905055506007549050949350505050565b6016602052806000526040600020600091509050806000015490806001015490806002015490806003018054613279906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546132a5906148b6565b80156132f25780601f106132c7576101008083540402835291602001916132f2565b820191906000526020600020905b8154815290600101906020018083116132d557829003601f168201915b5050505050905084565b6000806000905060005b60085481101561338257846016600083815260200190815260200160002060000154148015613365575060166000828152602001908152602001600020600301604051613353919061498a565b60405180910390208480519060200120145b1561336f57600191505b808061337a906149ff565b915050613306565b508091505092915050565b60035481565b600060016018600084815260200190815260200160002060010160076101000a81548160ff0219169083151502179055506040518060800160405280600954815260200186815260200184815260200185815250601760006009548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301908161342f9190614c27565b5090505060096000815480929190613446906149ff565b91905055506009549050949350505050565b600060405180606001604052808681526020018781526020016000815250600f6000600354815260200190815260200160002060008201518160000190816134a09190614c27565b5060208201518160010190816134b69190614c27565b506040820151816002015590505060016018600085815260200190815260200160002060010160036101000a81548160ff02191690831515021790555060036000815480929190613506906149ff565b919050555060005b845181101561356b57613540600354600554878481518110613533576135326149a1565b5b6020026020010151613719565b60056000815480929190613553906149ff565b91905055508080613563906149ff565b91505061350e565b506135ab826040518060400160405280600481526020017f6964656100000000000000000000000000000000000000000000000000000000815250612f40565b600354905095945050505050565b6060600e600083815260200190815260200160002060010180546135dc906148b6565b80601f0160208091040260200160405190810160405280929190818152602001828054613608906148b6565b80156136555780601f1061362a57610100808354040283529160200191613655565b820191906000526020600020905b81548152906001019060200180831161363857829003601f168201915b50505050509050919050565b60015481565b6013602052806000526040600020600091509050806000015490806001015490806002018054613696906148b6565b80601f01602080910402602001604051908101604052809291908181526020018280546136c2906148b6565b801561370f5780601f106136e45761010080835404028352916020019161370f565b820191906000526020600020905b8154815290600101906020018083116136f257829003601f168201915b5050505050905083565b60405180606001604052808481526020018381526020018281525060136000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816137709190614c27565b50905050505050565b508054613785906148b6565b6000825580601f1061379757506137b6565b601f0160209004906000526020600020908101906137b591906137b9565b5b50565b5b808211156137d25760008160009055506001016137ba565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61383d826137f4565b810181811067ffffffffffffffff8211171561385c5761385b613805565b5b80604052505050565b600061386f6137d6565b905061387b8282613834565b919050565b600067ffffffffffffffff82111561389b5761389a613805565b5b6138a4826137f4565b9050602081019050919050565b82818337600083830152505050565b60006138d36138ce84613880565b613865565b9050828152602081018484840111156138ef576138ee6137ef565b5b6138fa8482856138b1565b509392505050565b600082601f830112613917576139166137ea565b5b81356139278482602086016138c0565b91505092915050565b600060208284031215613946576139456137e0565b5b600082013567ffffffffffffffff811115613964576139636137e5565b5b61397084828501613902565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156139df5780820151818401526020810190506139c4565b60008484015250505050565b60006139f6826139a5565b613a0081856139b0565b9350613a108185602086016139c1565b613a19816137f4565b840191505092915050565b6000613a3083836139eb565b905092915050565b6000602082019050919050565b6000613a5082613979565b613a5a8185613984565b935083602082028501613a6c85613995565b8060005b85811015613aa85784840389528151613a898582613a24565b9450613a9483613a38565b925060208a01995050600181019050613a70565b50829750879550505050505092915050565b60006020820190508181036000830152613ad48184613a45565b905092915050565b6000819050919050565b613aef81613adc565b82525050565b6000602082019050613b0a6000830184613ae6565b92915050565b613b1981613adc565b8114613b2457600080fd5b50565b600081359050613b3681613b10565b92915050565b600060208284031215613b5257613b516137e0565b5b6000613b6084828501613b27565b91505092915050565b600082825260208201905092915050565b6000613b85826139a5565b613b8f8185613b69565b9350613b9f8185602086016139c1565b613ba8816137f4565b840191505092915050565b60006060820190508181036000830152613bcd8186613b7a565b90508181036020830152613be18185613b7a565b9050613bf06040830184613ae6565b949350505050565b600080600080600060a08688031215613c1457613c136137e0565b5b600086013567ffffffffffffffff811115613c3257613c316137e5565b5b613c3e88828901613902565b9550506020613c4f88828901613b27565b9450506040613c6088828901613b27565b935050606086013567ffffffffffffffff811115613c8157613c806137e5565b5b613c8d88828901613902565b925050608086013567ffffffffffffffff811115613cae57613cad6137e5565b5b613cba88828901613902565b9150509295509295909350565b60006060820190508181036000830152613ce18186613b7a565b90508181036020830152613cf58185613b7a565b90508181036040830152613d098184613b7a565b9050949350505050565b60006060820190508181036000830152613d2d8186613b7a565b9050613d3c6020830185613ae6565b8181036040830152613d4e8184613b7a565b9050949350505050565b6000608082019050613d6d6000830187613ae6565b613d7a6020830186613ae6565b613d876040830185613ae6565b8181036060830152613d998184613b7a565b905095945050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613dd981613adc565b82525050565b6000613deb8383613dd0565b60208301905092915050565b6000602082019050919050565b6000613e0f82613da4565b613e198185613daf565b9350613e2483613dc0565b8060005b83811015613e55578151613e3c8882613ddf565b9750613e4783613df7565b925050600181019050613e28565b5085935050505092915050565b60006020820190508181036000830152613e7c8184613e04565b905092915050565b6000608082019050613e996000830187613ae6565b613ea66020830186613ae6565b8181036040830152613eb88185613b7a565b90508181036060830152613ecc8184613b7a565b905095945050505050565b60006020820190508181036000830152613ef18184613b7a565b905092915050565b60008060008060808587031215613f1357613f126137e0565b5b600085013567ffffffffffffffff811115613f3157613f306137e5565b5b613f3d87828801613902565b9450506020613f4e87828801613b27565b935050604085013567ffffffffffffffff811115613f6f57613f6e6137e5565b5b613f7b87828801613902565b925050606085013567ffffffffffffffff811115613f9c57613f9b6137e5565b5b613fa887828801613902565b91505092959194509250565b60006040820190508181036000830152613fce8185613b7a565b90508181036020830152613fe28184613b7a565b90509392505050565b600060608201905081810360008301526140058186613b7a565b90506140146020830185613ae6565b6140216040830184613ae6565b949350505050565b60008060008060808587031215614043576140426137e0565b5b600085013567ffffffffffffffff811115614061576140606137e5565b5b61406d87828801613902565b945050602085013567ffffffffffffffff81111561408e5761408d6137e5565b5b61409a87828801613902565b935050604085013567ffffffffffffffff8111156140bb576140ba6137e5565b5b6140c787828801613902565b92505060606140d887828801613b27565b91505092959194509250565b600080604083850312156140fb576140fa6137e0565b5b600061410985828601613b27565b925050602083013567ffffffffffffffff81111561412a576141296137e5565b5b61413685828601613902565b9150509250929050565b600080600060608486031215614159576141586137e0565b5b600061416786828701613b27565b935050602084013567ffffffffffffffff811115614188576141876137e5565b5b61419486828701613902565b925050604084013567ffffffffffffffff8111156141b5576141b46137e5565b5b6141c186828701613902565b9150509250925092565b60008115159050919050565b6141e0816141cb565b81146141eb57600080fd5b50565b6000813590506141fd816141d7565b92915050565b600080600080600060a0868803121561421f5761421e6137e0565b5b600086013567ffffffffffffffff81111561423d5761423c6137e5565b5b61424988828901613902565b955050602086013567ffffffffffffffff81111561426a576142696137e5565b5b61427688828901613902565b945050604061428788828901613b27565b935050606086013567ffffffffffffffff8111156142a8576142a76137e5565b5b6142b488828901613902565b92505060806142c5888289016141ee565b9150509295509295909350565b600080600080608085870312156142ec576142eb6137e0565b5b60006142fa87828801613b27565b945050602061430b87828801613b27565b935050604061431c87828801613b27565b925050606085013567ffffffffffffffff81111561433d5761433c6137e5565b5b61434987828801613902565b91505092959194509250565b6000806040838503121561436c5761436b6137e0565b5b600083013567ffffffffffffffff81111561438a576143896137e5565b5b61439685828601613902565b92505060206143a785828601613b27565b9150509250929050565b6143ba816141cb565b82525050565b6000610120820190506143d6600083018c613ae6565b6143e3602083018b6143b1565b6143f0604083018a6143b1565b6143fd60608301896143b1565b61440a60808301886143b1565b61441760a08301876143b1565b61442460c08301866143b1565b61443160e08301856143b1565b61443f6101008301846143b1565b9a9950505050505050505050565b600060208201905061446260008301846143b1565b92915050565b60008060008060808587031215614482576144816137e0565b5b600085013567ffffffffffffffff8111156144a05761449f6137e5565b5b6144ac87828801613902565b945050602085013567ffffffffffffffff8111156144cd576144cc6137e5565b5b6144d987828801613902565b93505060406144ea87828801613b27565b925050606085013567ffffffffffffffff81111561450b5761450a6137e5565b5b61451787828801613902565b91505092959194509250565b60006080820190506145386000830187613ae6565b818103602083015261454a8186613b7a565b9050818103604083015261455e8185613b7a565b905081810360608301526145728184613b7a565b905095945050505050565b60008060408385031215614594576145936137e0565b5b600083013567ffffffffffffffff8111156145b2576145b16137e5565b5b6145be85828601613902565b925050602083013567ffffffffffffffff8111156145df576145de6137e5565b5b6145eb85828601613902565b9150509250929050565b6000806000806080858703121561460f5761460e6137e0565b5b600061461d87828801613b27565b945050602085013567ffffffffffffffff81111561463e5761463d6137e5565b5b61464a87828801613902565b935050604061465b87828801613b27565b925050606061466c87828801613b27565b91505092959194509250565b600067ffffffffffffffff82111561469357614692613805565b5b602082029050602081019050919050565b600080fd5b60006146bc6146b784614678565b613865565b905080838252602082019050602084028301858111156146df576146de6146a4565b5b835b8181101561472657803567ffffffffffffffff811115614704576147036137ea565b5b8086016147118982613902565b855260208501945050506020810190506146e1565b5050509392505050565b600082601f830112614745576147446137ea565b5b81356147558482602086016146a9565b91505092915050565b600080600080600060a0868803121561477a576147796137e0565b5b600086013567ffffffffffffffff811115614798576147976137e5565b5b6147a488828901613902565b955050602086013567ffffffffffffffff8111156147c5576147c46137e5565b5b6147d188828901613902565b945050604086013567ffffffffffffffff8111156147f2576147f16137e5565b5b6147fe88828901614730565b935050606061480f88828901613b27565b925050608086013567ffffffffffffffff8111156148305761482f6137e5565b5b61483c88828901613902565b9150509295509295909350565b600060608201905061485e6000830186613ae6565b61486b6020830185613ae6565b818103604083015261487d8184613b7a565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806148ce57607f821691505b6020821081036148e1576148e0614887565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154614914816148b6565b61491e81866148e7565b94506001821660008114614939576001811461494e57614981565b60ff1983168652811515820286019350614981565b614957856148f2565b60005b838110156149795781548189015260018201915060208101905061495a565b838801955050505b50505092915050565b60006149968284614907565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614a0a82613adc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614a3c57614a3b6149d0565b5b600182019050919050565b6000614a5282613adc565b9150614a5d83613adc565b9250828201905080821115614a7557614a746149d0565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302614add7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614aa0565b614ae78683614aa0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000614b24614b1f614b1a84613adc565b614aff565b613adc565b9050919050565b6000819050919050565b614b3e83614b09565b614b52614b4a82614b2b565b848454614aad565b825550505050565b600090565b614b67614b5a565b614b72818484614b35565b505050565b5b81811015614b9657614b8b600082614b5f565b600181019050614b78565b5050565b601f821115614bdb57614bac81614a7b565b614bb584614a90565b81016020851015614bc4578190505b614bd8614bd085614a90565b830182614b77565b50505b505050565b600082821c905092915050565b6000614bfe60001984600802614be0565b1980831691505092915050565b6000614c178383614bed565b9150826002028217905092915050565b614c30826139a5565b67ffffffffffffffff811115614c4957614c48613805565b5b614c5382546148b6565b614c5e828285614b9a565b600060209050601f831160018114614c915760008415614c7f578287015190505b614c898582614c0b565b865550614cf1565b601f198416614c9f86614a7b565b60005b82811015614cc757848901518255600182019150602085019450602081019050614ca2565b86831015614ce45784890151614ce0601f891682614bed565b8355505b6001600288020188555050505b50505050505056fea264697066735822122050d350632a49b4eb9dee8fe1acdaebb57cbac822eba5a8d3d1c1caed8a6bf9da64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x383 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89E93784 GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB527D45E GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xCACE8D46 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDDDB6F86 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDDB6F86 EQ PUSH2 0xBE7 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xC47 JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xC65 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xB36 JUMPI DUP1 PUSH4 0xCD230809 EQ PUSH2 0xB69 JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xB99 JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xBB7 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xAAE JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xACC JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xAE8 JUMPI DUP1 PUSH4 0xCA982104 EQ PUSH2 0xB06 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0xBDA00335 EQ PUSH2 0xA76 JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xA92 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xA36ADB9F GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xAA2BF5D3 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x9BB JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x9D9 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0xB39A38BD EQ PUSH2 0xA13 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xA36ADB9F EQ PUSH2 0x923 JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xA807C20E EQ PUSH2 0x98B JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x9077007D GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x887 JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x8A5 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x8F3 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x89E93784 EQ PUSH2 0x809 JUMPI DUP1 PUSH4 0x8AC4110C EQ PUSH2 0x839 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x857 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 GT PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x7FC543EC GT PUSH2 0x256 JUMPI DUP1 PUSH4 0x829A5D98 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x829A5D98 EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x7D1 JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x7ED JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0x826EEEFE EQ PUSH2 0x755 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x6ECDA4EE GT PUSH2 0x292 JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x7BC9724B EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x6C2 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0x54A9FB18 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x628 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 GT PUSH2 0x325 JUMPI DUP1 PUSH4 0x330B8F26 GT PUSH2 0x2FF JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x42F78F47 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x5A5 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4F2 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x1B592AEB GT PUSH2 0x361 JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x1FD4D664 EQ PUSH2 0x474 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C0 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x3BF8 JUMP JUMPDEST PUSH2 0xFDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FA PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x539 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x3E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DF PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x642 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x672 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x690 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH2 0x1B34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EA SWAP3 SWAP2 SWAP1 PUSH2 0x3FB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x3E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x1EF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x4029 JUMP JUMPDEST PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x224C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x4140 JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x823 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x4203 JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x841 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x871 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86C SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87E SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88F PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x42D2 JUMP JUMPDEST PUSH2 0x2478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8DD PUSH2 0x250C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x968 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x274D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x982 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x444D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C3 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA11 PUSH2 0x29B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA2D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA28 SWAP2 SWAP1 PUSH2 0x4468 JUMP JUMPDEST PUSH2 0x2C8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8B SWAP2 SWAP1 PUSH2 0x457D JUMP JUMPDEST PUSH2 0x2F40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x2FD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB6 PUSH2 0x2FFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x3139 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAF0 PUSH2 0x3161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB20 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0x4029 JUMP JUMPDEST PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB50 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4B SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x3244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB60 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB83 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x40E4 JUMP JUMPDEST PUSH2 0x32FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x444D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA1 PUSH2 0x338D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x45F5 JUMP JUMPDEST PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC01 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x475E JUMP JUMPDEST PUSH2 0x3458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC31 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x35B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4F PUSH2 0x3661 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5C SWAP2 SWAP1 PUSH2 0x3AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH2 0x3667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCB7 JUMPI PUSH2 0xCB6 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCEA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCD5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE16 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xE03 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD58 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD84 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDE9 JUMPI PUSH2 0xDE8 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xDFF SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE0E SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCF5 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xE56 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE82 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xECF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xECF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEB2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xEE4 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF10 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF5D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF5D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF40 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xFD3 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xFC0 JUMPI DUP1 SWAP2 POP POP PUSH2 0xFD9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xFCB SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF75 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x104D JUMPI PUSH2 0x104C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261646765000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST JUMPDEST PUSH2 0x108C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F6E6174696F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x4A47 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1155 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x119C SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11C8 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1215 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1215 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x122A SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1256 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1278 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1286 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x12B8 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12E4 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1331 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1306 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1331 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1314 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH2 0x135A PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x138E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1379 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x146E JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x13BF SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13EB SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1438 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x140D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1438 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x141B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1450 JUMPI PUSH2 0x144F PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1466 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1394 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1499 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14C5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1512 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1512 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x152D SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1559 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1589 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x15E5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1611 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x165E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1633 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x165E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1641 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1688 JUMPI PUSH2 0x1687 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16B6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x175B JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1748 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x172D JUMPI PUSH2 0x172C PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1744 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1753 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16C1 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1789 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17B5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1802 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1817 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1843 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1890 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1865 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1890 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1873 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x18D5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1901 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x194E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1923 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x194E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1931 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1963 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x198F SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1A09 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A35 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1AAD SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AD9 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1BA8 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1BC8 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDF SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1C23 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6A6F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1C4C SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C78 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CC5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C9A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CC5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CA8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1CDA SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D06 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D53 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D28 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D53 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D36 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1D80 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DAC SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DF9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DCE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DF9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DDC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E2F JUMPI PUSH2 0x1E2E PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E5D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1EE7 JUMPI DUP5 PUSH1 0x17 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1ED4 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EB9 JUMPI PUSH2 0x1EB8 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1ED0 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1EDF SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E68 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3939393900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x270F DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1F7B SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1F9B SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FF5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FE0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2121 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x2035 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2100 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2063 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x208F SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x20F4 JUMPI PUSH2 0x20F3 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x210B SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x2119 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2000 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x21A7 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x21BD SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x21D3 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xC PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x21F8 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x223A SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x226C SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2294 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x22B8 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2334 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x234A SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x236B SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 ISZERO PUSH2 0x23B6 JUMPI PUSH2 0x23B5 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766F746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x23ED SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2419 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2466 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2466 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2449 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x16 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x24E3 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x24FA SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x252C JUMPI PUSH2 0x252B PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x255F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x254A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x263F JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2590 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25BC SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2609 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2609 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2621 JUMPI PUSH2 0x2620 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2637 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2565 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x26AD JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x2684 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x269A JUMPI DUP1 SWAP2 POP POP PUSH2 0x26B3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x26A5 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x264F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2740 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x271F JUMPI POP DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x272D JUMPI DUP1 SWAP2 POP POP PUSH2 0x2747 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2738 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26C0 JUMP JUMPDEST POP PUSH2 0x270F SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x288C JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x286A JUMPI POP DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x2860 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x2879 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2892 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2884 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x280B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x299F JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x28D8 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x298C JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x2906 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2932 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x297F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2954 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x297F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP PUSH2 0x29B3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2997 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28A3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2A1E JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x29E9 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x29F9 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2A09 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2A16 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29BB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2A75 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2A50 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2A60 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2A6D SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A22 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2AD4 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2AA7 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2AB7 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2ACC SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A79 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2B2B JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2B16 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2B23 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AD8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2B9A JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2B65 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2B75 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2B85 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2B92 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B2F JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2BE4 SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2BF1 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B9E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2C58 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2C2B SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2C3B SWAP2 SWAP1 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2C50 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BFD JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2CCB SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2CE1 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2D27 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x2D6B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x676F616C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2DA1 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DCD SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2E2F SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E5B SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2EBD SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EE9 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F36 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F0B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F36 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F19 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2FA1 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2FB7 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCE SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2FFA SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x301E JUMPI PUSH2 0x301D PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3051 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x303C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x3131 JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x3082 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30AE SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3113 JUMPI PUSH2 0x3112 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x3129 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3057 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x315C SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x31EF SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x3205 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x321B SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3232 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x3279 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32A5 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x32D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x3382 JUMPI DUP5 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x3365 JUMPI POP PUSH1 0x16 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x3353 SWAP2 SWAP1 PUSH2 0x498A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x336F JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x337A SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3306 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x17 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x342F SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3446 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x34A0 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x34B6 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3506 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x356B JUMPI PUSH2 0x3540 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3533 JUMPI PUSH2 0x3532 PUSH2 0x49A1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3719 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3553 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x3563 SWAP1 PUSH2 0x49FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x350E JUMP JUMPDEST POP PUSH2 0x35AB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6964656100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2F40 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x35DC SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3608 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3655 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x362A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3655 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3638 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3696 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36C2 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x370F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x370F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x3770 SWAP2 SWAP1 PUSH2 0x4C27 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3785 SWAP1 PUSH2 0x48B6 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x3797 JUMPI POP PUSH2 0x37B6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x37B5 SWAP2 SWAP1 PUSH2 0x37B9 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x37D2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37BA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x383D DUP3 PUSH2 0x37F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x385C JUMPI PUSH2 0x385B PUSH2 0x3805 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386F PUSH2 0x37D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x387B DUP3 DUP3 PUSH2 0x3834 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x389B JUMPI PUSH2 0x389A PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH2 0x38A4 DUP3 PUSH2 0x37F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38D3 PUSH2 0x38CE DUP5 PUSH2 0x3880 JUMP JUMPDEST PUSH2 0x3865 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x38EF JUMPI PUSH2 0x38EE PUSH2 0x37EF JUMP JUMPDEST JUMPDEST PUSH2 0x38FA DUP5 DUP3 DUP6 PUSH2 0x38B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3917 JUMPI PUSH2 0x3916 PUSH2 0x37EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3927 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3946 JUMPI PUSH2 0x3945 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3964 JUMPI PUSH2 0x3963 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3970 DUP5 DUP3 DUP6 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39DF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39C4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F6 DUP3 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x3A00 DUP2 DUP6 PUSH2 0x39B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A10 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39C1 JUMP JUMPDEST PUSH2 0x3A19 DUP2 PUSH2 0x37F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A30 DUP4 DUP4 PUSH2 0x39EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A50 DUP3 PUSH2 0x3979 JUMP JUMPDEST PUSH2 0x3A5A DUP2 DUP6 PUSH2 0x3984 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3A6C DUP6 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3AA8 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3A89 DUP6 DUP3 PUSH2 0x3A24 JUMP JUMPDEST SWAP5 POP PUSH2 0x3A94 DUP4 PUSH2 0x3A38 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3A70 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AD4 DUP2 DUP5 PUSH2 0x3A45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AEF DUP2 PUSH2 0x3ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B0A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B19 DUP2 PUSH2 0x3ADC JUMP JUMPDEST DUP2 EQ PUSH2 0x3B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B36 DUP2 PUSH2 0x3B10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B52 JUMPI PUSH2 0x3B51 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B60 DUP5 DUP3 DUP6 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B85 DUP3 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x3B8F DUP2 DUP6 PUSH2 0x3B69 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B9F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39C1 JUMP JUMPDEST PUSH2 0x3BA8 DUP2 PUSH2 0x37F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BCD DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3BE1 DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AE6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3C14 JUMPI PUSH2 0x3C13 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C32 JUMPI PUSH2 0x3C31 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3C3E DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3C4F DUP9 DUP3 DUP10 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3C60 DUP9 DUP3 DUP10 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C81 JUMPI PUSH2 0x3C80 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3C8D DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CAE JUMPI PUSH2 0x3CAD PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3CBA DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CE1 DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CF5 DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D09 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D2D DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x3D3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D4E DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3D6D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x3D7A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x3D87 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3D99 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DD9 DUP2 PUSH2 0x3ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DEB DUP4 DUP4 PUSH2 0x3DD0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E0F DUP3 PUSH2 0x3DA4 JUMP JUMPDEST PUSH2 0x3E19 DUP2 DUP6 PUSH2 0x3DAF JUMP JUMPDEST SWAP4 POP PUSH2 0x3E24 DUP4 PUSH2 0x3DC0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E55 JUMPI DUP2 MLOAD PUSH2 0x3E3C DUP9 DUP3 PUSH2 0x3DDF JUMP JUMPDEST SWAP8 POP PUSH2 0x3E47 DUP4 PUSH2 0x3DF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E28 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E7C DUP2 DUP5 PUSH2 0x3E04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E99 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x3EA6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3EB8 DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3ECC DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EF1 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F13 JUMPI PUSH2 0x3F12 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F31 JUMPI PUSH2 0x3F30 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3F3D DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3F4E DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F6F JUMPI PUSH2 0x3F6E PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3F7B DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F9C JUMPI PUSH2 0x3F9B PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x3FA8 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FCE DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3FE2 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4005 DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x4014 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x4021 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AE6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4043 JUMPI PUSH2 0x4042 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4061 JUMPI PUSH2 0x4060 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x406D DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x408E JUMPI PUSH2 0x408D PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x409A DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40BB JUMPI PUSH2 0x40BA PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x40C7 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x40D8 DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40FB JUMPI PUSH2 0x40FA PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4109 DUP6 DUP3 DUP7 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x412A JUMPI PUSH2 0x4129 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4136 DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4159 JUMPI PUSH2 0x4158 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4167 DUP7 DUP3 DUP8 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4188 JUMPI PUSH2 0x4187 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4194 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41B5 JUMPI PUSH2 0x41B4 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x41C1 DUP7 DUP3 DUP8 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41E0 DUP2 PUSH2 0x41CB JUMP JUMPDEST DUP2 EQ PUSH2 0x41EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41FD DUP2 PUSH2 0x41D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x421F JUMPI PUSH2 0x421E PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x423D JUMPI PUSH2 0x423C PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4249 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x426A JUMPI PUSH2 0x4269 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4276 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4287 DUP9 DUP3 DUP10 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42A8 JUMPI PUSH2 0x42A7 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x42B4 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x42C5 DUP9 DUP3 DUP10 ADD PUSH2 0x41EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x42EC JUMPI PUSH2 0x42EB PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42FA DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x430B DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x431C DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x433D JUMPI PUSH2 0x433C PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4349 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x436C JUMPI PUSH2 0x436B PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x438A JUMPI PUSH2 0x4389 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4396 DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x43A7 DUP6 DUP3 DUP7 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x43BA DUP2 PUSH2 0x41CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x43D6 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x43E3 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x43F0 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x43FD PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x440A PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x4417 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x4424 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x4431 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x43B1 JUMP JUMPDEST PUSH2 0x443F PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x43B1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4462 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4482 JUMPI PUSH2 0x4481 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44A0 JUMPI PUSH2 0x449F PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x44AC DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44CD JUMPI PUSH2 0x44CC PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x44D9 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x44EA DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x450B JUMPI PUSH2 0x450A PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x4517 DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4538 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x454A DUP2 DUP7 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x455E DUP2 DUP6 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4572 DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4594 JUMPI PUSH2 0x4593 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45B2 JUMPI PUSH2 0x45B1 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x45BE DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45DF JUMPI PUSH2 0x45DE PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x45EB DUP6 DUP3 DUP7 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x460F JUMPI PUSH2 0x460E PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x461D DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x463E JUMPI PUSH2 0x463D PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x464A DUP8 DUP3 DUP9 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x465B DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x466C DUP8 DUP3 DUP9 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4693 JUMPI PUSH2 0x4692 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x46BC PUSH2 0x46B7 DUP5 PUSH2 0x4678 JUMP JUMPDEST PUSH2 0x3865 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x46DF JUMPI PUSH2 0x46DE PUSH2 0x46A4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4726 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4704 JUMPI PUSH2 0x4703 PUSH2 0x37EA JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4711 DUP10 DUP3 PUSH2 0x3902 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x46E1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4745 JUMPI PUSH2 0x4744 PUSH2 0x37EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4755 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x46A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x477A JUMPI PUSH2 0x4779 PUSH2 0x37E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4798 JUMPI PUSH2 0x4797 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x47A4 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47C5 JUMPI PUSH2 0x47C4 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x47D1 DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47F2 JUMPI PUSH2 0x47F1 PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x47FE DUP9 DUP3 DUP10 ADD PUSH2 0x4730 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x480F DUP9 DUP3 DUP10 ADD PUSH2 0x3B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4830 JUMPI PUSH2 0x482F PUSH2 0x37E5 JUMP JUMPDEST JUMPDEST PUSH2 0x483C DUP9 DUP3 DUP10 ADD PUSH2 0x3902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x485E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3AE6 JUMP JUMPDEST PUSH2 0x486B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x487D DUP2 DUP5 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x48CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x48E1 JUMPI PUSH2 0x48E0 PUSH2 0x4887 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4914 DUP2 PUSH2 0x48B6 JUMP JUMPDEST PUSH2 0x491E DUP2 DUP7 PUSH2 0x48E7 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4939 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x494E JUMPI PUSH2 0x4981 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x4981 JUMP JUMPDEST PUSH2 0x4957 DUP6 PUSH2 0x48F2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4979 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x495A JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4996 DUP3 DUP5 PUSH2 0x4907 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A0A DUP3 PUSH2 0x3ADC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4A3C JUMPI PUSH2 0x4A3B PUSH2 0x49D0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A52 DUP3 PUSH2 0x3ADC JUMP JUMPDEST SWAP2 POP PUSH2 0x4A5D DUP4 PUSH2 0x3ADC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4A75 JUMPI PUSH2 0x4A74 PUSH2 0x49D0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4AA0 JUMP JUMPDEST PUSH2 0x4AE7 DUP7 DUP4 PUSH2 0x4AA0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B24 PUSH2 0x4B1F PUSH2 0x4B1A DUP5 PUSH2 0x3ADC JUMP JUMPDEST PUSH2 0x4AFF JUMP JUMPDEST PUSH2 0x3ADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B3E DUP4 PUSH2 0x4B09 JUMP JUMPDEST PUSH2 0x4B52 PUSH2 0x4B4A DUP3 PUSH2 0x4B2B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4AAD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4B67 PUSH2 0x4B5A JUMP JUMPDEST PUSH2 0x4B72 DUP2 DUP5 DUP5 PUSH2 0x4B35 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4B96 JUMPI PUSH2 0x4B8B PUSH1 0x0 DUP3 PUSH2 0x4B5F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4B78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4BDB JUMPI PUSH2 0x4BAC DUP2 PUSH2 0x4A7B JUMP JUMPDEST PUSH2 0x4BB5 DUP5 PUSH2 0x4A90 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4BC4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4BD8 PUSH2 0x4BD0 DUP6 PUSH2 0x4A90 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4B77 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BFE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4BE0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C17 DUP4 DUP4 PUSH2 0x4BED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C30 DUP3 PUSH2 0x39A5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C49 JUMPI PUSH2 0x4C48 PUSH2 0x3805 JUMP JUMPDEST JUMPDEST PUSH2 0x4C53 DUP3 SLOAD PUSH2 0x48B6 JUMP JUMPDEST PUSH2 0x4C5E DUP3 DUP3 DUP6 PUSH2 0x4B9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C91 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4C7F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C89 DUP6 DUP3 PUSH2 0x4C0B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4CF1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4C9F DUP7 PUSH2 0x4A7B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4CC7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4CA2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4CE4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4CE0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4BED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xD3 POP PUSH4 0x2A49B4EB SWAP14 0xEE DUP16 0xE1 0xAC 0xDA 0xEB 0xB5 PUSH29 0xBAC822EBA5A8D3D1C1CAED8A6BF9DA64736F6C63430008110033000000 ","sourceMap":"170:14666:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5921:468;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1788:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1729;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1817:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3118:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6395:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8113:456;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2666:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2019:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5635:280;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2284:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3536:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;12108:502;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2534:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1856:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2779:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4780:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2161:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1667:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8575:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2406:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2869;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;12961:469;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8896:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9972:457;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3760:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4141:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4269:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11242:470;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1990:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11070:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1891:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13436:341;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9682:284;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10435:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9364:312;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3644:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;9048:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1960:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10738:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14166:667;;;:::i;:::-;;5125:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3277:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4929:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7978:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4500:274;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5487:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1923:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11736:366;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3394:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;13783:377;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1758:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12616:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7119:594;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6953:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1695:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2967:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5921:468;5998:15;6057:26;6099:9;;6086:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6057:52;;6116:17;6145:9;6157:1;6145:13;;6140:218;6164:9;;6160:1;:13;6140:218;;;6251:7;6235:25;;;;;;6209:10;:13;6220:1;6209:13;;;;;;;;;;;:20;;6193:38;;;;;;:::i;:::-;;;;;;;;:67;6189:162;;6297:10;:13;6308:1;6297:13;;;;;;;;;;;:22;;6273:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;6284:9;6273:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;6330:11;;;;;:::i;:::-;;;;6189:162;6175:3;;;;;:::i;:::-;;;;6140:218;;;;6373:10;6366:17;;;;5921:468;;;:::o;1788:24::-;;;;:::o;1729:::-;;;;:::o;1817:34::-;;;;:::o;3118:71::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6395:289::-;6474:7;6525:9;6537:1;6525:13;;6520:142;6544:9;;6540:1;:13;6520:142;;;6633:9;6617:27;;;;;;6589:10;:13;6600:1;6589:13;;;;;;;;;;;:22;;6573:40;;;;;;:::i;:::-;;;;;;;;:71;6569:85;;6653:1;6646:8;;;;;6569:85;6555:3;;;;;:::i;:::-;;;;6520:142;;;;6677:1;6670:8;;6395:289;;;;:::o;8113:456::-;8292:5;8258:39;;:12;:21;8271:7;8258:21;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;8254:87;;8308:25;8317:6;8308:25;;;;;;;;;;;;;;;;;:8;:25::i;:::-;8254:87;8347:28;8356:6;8347:28;;;;;;;;;;;;;;;;;:8;:28::i;:::-;8417:4;8384:12;:21;8397:7;8384:21;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;8449:9;8428:8;:17;8437:7;8428:17;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;8494:46;;;;;;;;8510:9;8494:46;;;;8521:7;8494:46;;;;8530:9;8494:46;;;8465:10;:26;8476:14;;8465:26;;;;;;;;;;;:75;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8547:14;;:16;;;;;;;;;:::i;:::-;;;;;;8113:456;;;;;:::o;2666:43::-;;;;;;;;;;;;;;;;;:::o;2019:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5635:280::-;5681:15;5730:26;5772:9;;5759:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5730:52;;5794:9;5789:95;5813:9;;5809:1;:13;5789:95;;;5854:10;:13;5865:1;5854:13;;;;;;;;;;;:22;;5838:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5849:1;5838:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;5824:3;;;;;:::i;:::-;;;;5789:95;;;;5899:10;5892:17;;;5635:280;:::o;2284:53::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3536:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12108:502::-;12172:16;12240:36;12293:12;;12279:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12240:66;;12313:15;12340:9;12352:1;12340:13;;12335:235;12359:12;;12355:1;:16;12335:235;;;12453:8;12437:26;;;;;;12407:12;:15;12420:1;12407:15;;;;;;;;;;;:24;;12391:42;;;;;;:::i;:::-;;;;;;;;:72;12387:176;;12507:12;:15;12520:1;12507:15;;;;;;;;;;;:26;;;12476:19;12496:7;12476:28;;;;;;;;:::i;:::-;;;;;;;:57;;;;;12544:9;;;;;:::i;:::-;;;;12387:176;12373:3;;;;;:::i;:::-;;;;12335:235;;;;12585:19;12578:26;;;;12108:502;;;:::o;2534:55::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1856:30::-;;;;:::o;2779:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4780:143::-;4835:13;4891:9;:18;4901:7;4891:18;;;;;;;;;;;:26;;4884:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4780:143;;;:::o;2161:48::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1667:23::-;;;;:::o;8575:315::-;8728:4;8698:12;:20;8711:6;8698:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;8767:69;;;;;;;;8787:6;8767:69;;;;8804:6;8767:69;;;;8823:11;8767:69;;;8739:14;:25;8754:9;;8739:25;;;;;;;;;;;:97;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;8843:9;;:11;;;;;;;;;:::i;:::-;;;;;;8861:23;8870:5;8861:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;8575:315;;;;:::o;2406:53::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2869:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12961:469::-;13023:16;13091:37;13145:10;;13131:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13091:65;;13163:17;13192:9;13204:1;13192:13;;13187:202;13211:10;;13207:1;:14;13187:202;;;13270:10;13241:11;:14;13253:1;13241:14;;;;;;;;;;;:25;;;:39;13237:145;;13327:11;:14;13339:1;13327:14;;;;;;;;;;;:23;;;13293:20;13314:9;13293:31;;;;;;;;:::i;:::-;;;;;;;:57;;;;;13361:11;;;;;:::i;:::-;;;;13237:145;13223:3;;;;;:::i;:::-;;;;13187:202;;;;13404:20;13397:27;;;;12961:469;;;:::o;8896:146::-;8978:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9015:4;8978:58;;;;;;;;;;;;;;;;;;;8952:14;:23;8967:7;8952:23;;;;;;;;;;;:84;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;8896:146;:::o;9972:457::-;10052:15;10112:26;10154:10;;10141:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:53;;10172:17;10201:9;10213:1;10201:13;;10196:202;10220:10;;10216:1;:14;10196:202;;;10310:8;10294:26;;;;;;10266:11;:14;10278:1;10266:14;;;;;;;;;;;:22;;10250:40;;;;;;:::i;:::-;;;;;;;;:70;10246:124;;10346:11;:14;10358:1;10346:14;;;;;;;;;;;:24;;10322:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;10333:9;10322:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;10246:124;10379:11;;;;;:::i;:::-;;;;10232:3;;;;;:::i;:::-;;;;10196:202;;;;10413:10;10406:17;;;;9972:457;;;:::o;3760:375::-;3889:7;3960:46;;;;;;;;3975:11;3960:46;;;;3988:8;3960:46;;;;;;;;;;;;;;;;;;;;;;;;3938:9;:19;3948:8;;3938:19;;;;;;;;;;;:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;4040:9;4013:14;:24;4028:8;;4013:24;;;;;;;;;;;:36;;;;;;:::i;:::-;;4084:4;4056:12;:21;4069:7;4056:21;;;;;;;;;;;:25;;;:32;;;;;;;;;;;;;;;;;;4095:8;;:10;;;;;;;;;:::i;:::-;;;;;;4121:8;;4114:15;;3760:375;;;;;;:::o;4141:122::-;4248:9;4222:14;:23;4237:7;4222:23;;;;;;;;;;;:35;;;;;;:::i;:::-;;4141:122;;:::o;4269:225::-;4433:11;4401:9;:18;4411:7;4401:18;;;;;;;;;;;:29;;:43;;;;;;:::i;:::-;;4480:8;4451:9;:18;4461:7;4451:18;;;;;;;;;;;:26;;:37;;;;;;:::i;:::-;;4269:225;;;:::o;11242:470::-;11393:7;11439:4;11409:12;:22;11422:8;11409:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;11536:54;;;;;;;;11560:8;11536:54;;;;11570:9;11536:54;;;;11581:8;11536:54;;;11496:20;:37;11517:15;;11496:37;;;;;;;;;;;:94;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11597:15;;:17;;;;;;;;;:::i;:::-;;;;;;11625:8;11621:55;;;11645:23;11654:5;11645:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;11621:55;11691:15;;11684:22;;11242:470;;;;;;;:::o;1990:24::-;;;;:::o;11070:155::-;11129:13;11187:11;:22;11199:9;11187:22;;;;;;;;;;;:32;;11180:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11070:155;;;:::o;1891:27::-;;;;:::o;13436:341::-;13554:7;13650:62;;;;;;;;13670:11;13650:62;;;;13683:9;13650:62;;;;13694:7;13650:62;;;;13703:8;13650:62;;;13611:17;:36;13629:17;;13611:36;;;;;;;;;;;:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;13719:17;;:19;;;;;;;;;:::i;:::-;;;;;;13754:17;;13747:24;;13436:341;;;;;;:::o;9682:284::-;9728:15;9777:26;9819:10;;9806:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9777:53;;9842:9;9837:98;9861:10;;9857:1;:14;9837:98;;;9903:11;:14;9915:1;9903:14;;;;;;;;;;;:24;;9887:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;9898:1;9887:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;9873:3;;;;;:::i;:::-;;;;9837:98;;;;9950:10;9943:17;;;9682:284;:::o;10435:297::-;10517:7;10569:9;10581:1;10569:13;;10564:146;10588:10;;10584:1;:14;10564:146;;;10680:10;10664:28;;;;;;10634:11;:14;10646:1;10634:14;;;;;;;;;;;:24;;10618:42;;;;;;:::i;:::-;;;;;;;;:74;10614:88;;10701:1;10694:8;;;;;10614:88;10600:3;;;;;:::i;:::-;;;;10564:146;;;;10725:1;10718:8;;10435:297;;;;:::o;9364:312::-;9452:7;9473:9;9485:1;9473:13;;9468:183;9492:9;;9488:1;:13;9468:183;;;9551:6;9522:14;:17;9537:1;9522:17;;;;;;;;;;;:25;;;:35;9521:112;;;;;9624:6;9608:24;;;;;;9579:14;:17;9594:1;9579:17;;;;;;;;;;;:23;;9563:41;;;;;;:::i;:::-;;;;;;;;:69;9521:112;9517:126;;;9642:1;9635:8;;;;;9517:126;9503:3;;;;;:::i;:::-;;;;9468:183;;;;9666:4;9659:11;;9364:312;;;;;:::o;3644:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9048:310::-;9133:4;9151:9;9163:1;9151:13;;9146:186;9170:9;;9166:1;:13;9146:186;;;9229:6;9200:14;:17;9215:1;9200:17;;;;;;;;;;;:25;;;:35;9199:112;;;;;9302:6;9286:24;;;;;;9257:14;:17;9272:1;9257:17;;;;;;;;;;;:23;;9241:41;;;;;;:::i;:::-;;;;;;;;:69;9199:112;9195:129;;;9320:4;9313:11;;;;;9195:129;9181:3;;;;;:::i;:::-;;;;9146:186;;;;9347:5;9340:12;;9048:310;;;;;:::o;1960:25::-;;;;:::o;10738:326::-;10821:13;10879:9;10874:167;10898:10;;10894:1;:14;10874:167;;;10990:10;10974:28;;;;;;10944:11;:14;10956:1;10944:14;;;;;;;;;;;:24;;10928:42;;;;;;:::i;:::-;;;;;;;;:74;10924:109;;11011:11;:14;11023:1;11011:14;;;;;;;;;;;:22;;11004:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10924:109;10910:3;;;;;:::i;:::-;;;;10874:167;;;;11049:9;;;;;;;;;;;;;;10738:326;;;;:::o;14166:667::-;14206:9;14201:58;14225:8;;14221:1;:12;14201:58;;;14247:9;:12;14257:1;14247:12;;;;;;;;;;;;14240:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14235:3;;;;;:::i;:::-;;;;14201:58;;;;14271:9;14266:60;14290:9;;14286:1;:13;14266:60;;;14313:10;:13;14324:1;14313:13;;;;;;;;;;;;14306:20;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14301:3;;;;;:::i;:::-;;;;14266:60;;;;14338:9;14333:62;14357:10;;14353:1;:14;14333:62;;;14381:11;:14;14393:1;14381:14;;;;;;;;;;;;14374:21;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;14369:3;;;;;:::i;:::-;;;;14333:62;;;;14407:9;14402:71;14426:9;;14422:1;:13;14402:71;;;14449:21;:24;14471:1;14449:24;;;;;;;;;;;;14442:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14437:3;;;;;:::i;:::-;;;;14402:71;;;;14485:9;14480:65;14504:12;;14500:1;:16;14480:65;;;14530:12;:15;14543:1;14530:15;;;;;;;;;;;;14523:22;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14518:3;;;;;:::i;:::-;;;;14480:65;;;;14557:9;14552:62;14576:10;;14572:1;:14;14552:62;;;14600:11;:14;14612:1;14600:14;;;;;;;;;;;;14593:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14588:3;;;;;:::i;:::-;;;;14552:62;;;;14626:9;14621:76;14645:15;;14641:1;:19;14621:76;;;14674:20;:23;14695:1;14674:23;;;;;;;;;;;;14667:30;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;14662:3;;;;;:::i;:::-;;;;14621:76;;;;14715:1;14704:8;:12;;;;14735:1;14723:9;:13;;;;14756:1;14743:10;:14;;;;14779:1;14764:12;:16;;;;14800:1;14787:10;:14;;;;14826:1;14808:15;:19;;;;14166:667::o;5125:356::-;5249:7;5324:35;;;;;;;;5340:7;5324:35;;;;5349:9;5324:35;;;5300:10;:21;5311:9;;5300:21;;;;;;;;;;;:59;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5398:4;5368:12;:22;5381:8;5368:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;5409:9;;:11;;;;;;;;;:::i;:::-;;;;;;5427:23;5436:5;5427:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;5466:9;;5459:16;;5125:356;;;;;;:::o;3277:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4929:179::-;5027:57;;;;;;;;5039:9;;5027:57;;;;5050:15;5027:57;;;;5067:5;5027:57;;;;5074:9;5027:57;;;5007:6;:17;5014:9;;5007:17;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5091:9;;:11;;;;;;;;;:::i;:::-;;;;;;4929:179;;:::o;7978:129::-;8091:10;8056:11;:22;8068:9;8056:22;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;7978:129;;:::o;4500:274::-;4545:15;4593:26;4635:8;;4622:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4593:51;;4656:9;4651:92;4675:8;;4671:1;:12;4651:92;;;4715:9;:12;4725:1;4715:12;;;;;;;;;;;:20;;4699:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;4710:1;4699:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;4685:3;;;;;:::i;:::-;;;;4651:92;;;;4758:10;4751:17;;;4500:274;:::o;5487:142::-;5614:9;5582:10;:20;5593:8;5582:20;;;;;;;;;;;:29;;:41;;;;;;:::i;:::-;;5487:142;;:::o;1923:32::-;;;;:::o;11736:366::-;11859:7;11908:4;11875:12;:22;11888:8;11875:22;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;11989:58;;;;;;;;12004:12;;11989:58;;;;12018:9;11989:58;;;;12029:8;11989:58;;;;12039:7;11989:58;;;11960:12;:26;11973:12;;11960:26;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;12054:12;;:14;;;;;;;;;:::i;:::-;;;;;;12084:12;;12077:19;;11736:366;;;;;;:::o;3394:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13783:377::-;13869:4;13882:9;13894:5;13882:17;;13911:9;13906:229;13930:17;;13926:1;:21;13906:229;;;14002:11;13967:17;:20;13985:1;13967:20;;;;;;;;;;;:31;;;:46;:127;;;;;14063:17;:20;14081:1;14063:20;;;;;;;;;;;:29;;14047:47;;;;;;:::i;:::-;;;;;;;;14033:8;14017:26;;;;;;:77;13967:127;13963:165;;;14114:4;14107:11;;13963:165;13949:3;;;;;:::i;:::-;;;;13906:229;;;;14150:4;14143:11;;;13783:377;;;;:::o;1758:25::-;;;;:::o;12616:339::-;12729:7;12775:4;12745:12;:21;12758:7;12745:21;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;12849:55;;;;;;;;12862:10;;12849:55;;;;12874:11;12849:55;;;;12887:8;12849:55;;;;12897:6;12849:55;;;12823:11;:23;12835:10;;12823:23;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;12911:10;;:12;;;;;;;;;:::i;:::-;;;;;;12939:10;;12932:17;;12616:339;;;;;;:::o;7119:594::-;7280:7;7359:41;;;;;;;;7376:8;7359:41;;;;7386:10;7359:41;;;;7398:1;7359:41;;;7333:11;:23;7345:10;;7333:23;;;;;;;;;;;:67;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7438:4;7407:12;:22;7420:8;7407:22;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;7449:10;;:12;;;;;;;;;:::i;:::-;;;;;;7475:9;7470:182;7494:16;:23;7490:1;:27;7470:182;;;7533:81;7561:10;;7573:19;;7594:16;7611:1;7594:19;;;;;;;;:::i;:::-;;;;;;;;7533:27;:81::i;:::-;7623:19;;:21;;;;;;;;;:::i;:::-;;;;;;7519:3;;;;;:::i;:::-;;;;7470:182;;;;7658:23;7667:5;7658:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;7697:10;;7690:17;;7119:594;;;;;;;:::o;6953:149::-;7010:13;7067:10;:20;7078:8;7067:20;;;;;;;;;;;:29;;7060:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6953:149;;;:::o;1695:29::-;;;;:::o;2967:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7719:253::-;7893:73;;;;;;;;7919:9;7893:73;;;;7930:18;7893:73;;;;7950:15;7893:73;;;7849:21;:41;7871:18;7849:41;;;;;;;;;;;:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7719:253;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:509::-;2622:6;2671:2;2659:9;2650:7;2646:23;2642:32;2639:119;;;2677:79;;:::i;:::-;2639:119;2825:1;2814:9;2810:17;2797:31;2855:18;2847:6;2844:30;2841:117;;;2877:79;;:::i;:::-;2841:117;2982:63;3037:7;3028:6;3017:9;3013:22;2982:63;:::i;:::-;2972:73;;2768:287;2553:509;;;;:::o;3068:124::-;3145:6;3179:5;3173:12;3163:22;;3068:124;;;:::o;3198:194::-;3307:11;3341:6;3336:3;3329:19;3381:4;3376:3;3372:14;3357:29;;3198:194;;;;:::o;3398:142::-;3475:4;3498:3;3490:11;;3528:4;3523:3;3519:14;3511:22;;3398:142;;;:::o;3546:99::-;3598:6;3632:5;3626:12;3616:22;;3546:99;;;:::o;3651:159::-;3725:11;3759:6;3754:3;3747:19;3799:4;3794:3;3790:14;3775:29;;3651:159;;;;:::o;3816:246::-;3897:1;3907:113;3921:6;3918:1;3915:13;3907:113;;;4006:1;4001:3;3997:11;3991:18;3987:1;3982:3;3978:11;3971:39;3943:2;3940:1;3936:10;3931:15;;3907:113;;;4054:1;4045:6;4040:3;4036:16;4029:27;3878:184;3816:246;;;:::o;4068:357::-;4146:3;4174:39;4207:5;4174:39;:::i;:::-;4229:61;4283:6;4278:3;4229:61;:::i;:::-;4222:68;;4299:65;4357:6;4352:3;4345:4;4338:5;4334:16;4299:65;:::i;:::-;4389:29;4411:6;4389:29;:::i;:::-;4384:3;4380:39;4373:46;;4150:275;4068:357;;;;:::o;4431:196::-;4520:10;4555:66;4617:3;4609:6;4555:66;:::i;:::-;4541:80;;4431:196;;;;:::o;4633:123::-;4713:4;4745;4740:3;4736:14;4728:22;;4633:123;;;:::o;4790:991::-;4929:3;4958:64;5016:5;4958:64;:::i;:::-;5038:96;5127:6;5122:3;5038:96;:::i;:::-;5031:103;;5160:3;5205:4;5197:6;5193:17;5188:3;5184:27;5235:66;5295:5;5235:66;:::i;:::-;5324:7;5355:1;5340:396;5365:6;5362:1;5359:13;5340:396;;;5436:9;5430:4;5426:20;5421:3;5414:33;5487:6;5481:13;5515:84;5594:4;5579:13;5515:84;:::i;:::-;5507:92;;5622:70;5685:6;5622:70;:::i;:::-;5612:80;;5721:4;5716:3;5712:14;5705:21;;5400:336;5387:1;5384;5380:9;5375:14;;5340:396;;;5344:14;5752:4;5745:11;;5772:3;5765:10;;4934:847;;;;;4790:991;;;;:::o;5787:413::-;5950:4;5988:2;5977:9;5973:18;5965:26;;6037:9;6031:4;6027:20;6023:1;6012:9;6008:17;6001:47;6065:128;6188:4;6179:6;6065:128;:::i;:::-;6057:136;;5787:413;;;;:::o;6206:77::-;6243:7;6272:5;6261:16;;6206:77;;;:::o;6289:118::-;6376:24;6394:5;6376:24;:::i;:::-;6371:3;6364:37;6289:118;;:::o;6413:222::-;6506:4;6544:2;6533:9;6529:18;6521:26;;6557:71;6625:1;6614:9;6610:17;6601:6;6557:71;:::i;:::-;6413:222;;;;:::o;6641:122::-;6714:24;6732:5;6714:24;:::i;:::-;6707:5;6704:35;6694:63;;6753:1;6750;6743:12;6694:63;6641:122;:::o;6769:139::-;6815:5;6853:6;6840:20;6831:29;;6869:33;6896:5;6869:33;:::i;:::-;6769:139;;;;:::o;6914:329::-;6973:6;7022:2;7010:9;7001:7;6997:23;6993:32;6990:119;;;7028:79;;:::i;:::-;6990:119;7148:1;7173:53;7218:7;7209:6;7198:9;7194:22;7173:53;:::i;:::-;7163:63;;7119:117;6914:329;;;;:::o;7249:169::-;7333:11;7367:6;7362:3;7355:19;7407:4;7402:3;7398:14;7383:29;;7249:169;;;;:::o;7424:377::-;7512:3;7540:39;7573:5;7540:39;:::i;:::-;7595:71;7659:6;7654:3;7595:71;:::i;:::-;7588:78;;7675:65;7733:6;7728:3;7721:4;7714:5;7710:16;7675:65;:::i;:::-;7765:29;7787:6;7765:29;:::i;:::-;7760:3;7756:39;7749:46;;7516:285;7424:377;;;;:::o;7807:624::-;7996:4;8034:2;8023:9;8019:18;8011:26;;8083:9;8077:4;8073:20;8069:1;8058:9;8054:17;8047:47;8111:78;8184:4;8175:6;8111:78;:::i;:::-;8103:86;;8236:9;8230:4;8226:20;8221:2;8210:9;8206:18;8199:48;8264:78;8337:4;8328:6;8264:78;:::i;:::-;8256:86;;8352:72;8420:2;8409:9;8405:18;8396:6;8352:72;:::i;:::-;7807:624;;;;;;:::o;8437:1451::-;8562:6;8570;8578;8586;8594;8643:3;8631:9;8622:7;8618:23;8614:33;8611:120;;;8650:79;;:::i;:::-;8611:120;8798:1;8787:9;8783:17;8770:31;8828:18;8820:6;8817:30;8814:117;;;8850:79;;:::i;:::-;8814:117;8955:63;9010:7;9001:6;8990:9;8986:22;8955:63;:::i;:::-;8945:73;;8741:287;9067:2;9093:53;9138:7;9129:6;9118:9;9114:22;9093:53;:::i;:::-;9083:63;;9038:118;9195:2;9221:53;9266:7;9257:6;9246:9;9242:22;9221:53;:::i;:::-;9211:63;;9166:118;9351:2;9340:9;9336:18;9323:32;9382:18;9374:6;9371:30;9368:117;;;9404:79;;:::i;:::-;9368:117;9509:63;9564:7;9555:6;9544:9;9540:22;9509:63;:::i;:::-;9499:73;;9294:288;9649:3;9638:9;9634:19;9621:33;9681:18;9673:6;9670:30;9667:117;;;9703:79;;:::i;:::-;9667:117;9808:63;9863:7;9854:6;9843:9;9839:22;9808:63;:::i;:::-;9798:73;;9592:289;8437:1451;;;;;;;;:::o;9894:715::-;10103:4;10141:2;10130:9;10126:18;10118:26;;10190:9;10184:4;10180:20;10176:1;10165:9;10161:17;10154:47;10218:78;10291:4;10282:6;10218:78;:::i;:::-;10210:86;;10343:9;10337:4;10333:20;10328:2;10317:9;10313:18;10306:48;10371:78;10444:4;10435:6;10371:78;:::i;:::-;10363:86;;10496:9;10490:4;10486:20;10481:2;10470:9;10466:18;10459:48;10524:78;10597:4;10588:6;10524:78;:::i;:::-;10516:86;;9894:715;;;;;;:::o;10615:624::-;10804:4;10842:2;10831:9;10827:18;10819:26;;10891:9;10885:4;10881:20;10877:1;10866:9;10862:17;10855:47;10919:78;10992:4;10983:6;10919:78;:::i;:::-;10911:86;;11007:72;11075:2;11064:9;11060:18;11051:6;11007:72;:::i;:::-;11126:9;11120:4;11116:20;11111:2;11100:9;11096:18;11089:48;11154:78;11227:4;11218:6;11154:78;:::i;:::-;11146:86;;10615:624;;;;;;:::o;11245:644::-;11442:4;11480:3;11469:9;11465:19;11457:27;;11494:71;11562:1;11551:9;11547:17;11538:6;11494:71;:::i;:::-;11575:72;11643:2;11632:9;11628:18;11619:6;11575:72;:::i;:::-;11657;11725:2;11714:9;11710:18;11701:6;11657:72;:::i;:::-;11776:9;11770:4;11766:20;11761:2;11750:9;11746:18;11739:48;11804:78;11877:4;11868:6;11804:78;:::i;:::-;11796:86;;11245:644;;;;;;;:::o;11895:114::-;11962:6;11996:5;11990:12;11980:22;;11895:114;;;:::o;12015:184::-;12114:11;12148:6;12143:3;12136:19;12188:4;12183:3;12179:14;12164:29;;12015:184;;;;:::o;12205:132::-;12272:4;12295:3;12287:11;;12325:4;12320:3;12316:14;12308:22;;12205:132;;;:::o;12343:108::-;12420:24;12438:5;12420:24;:::i;:::-;12415:3;12408:37;12343:108;;:::o;12457:179::-;12526:10;12547:46;12589:3;12581:6;12547:46;:::i;:::-;12625:4;12620:3;12616:14;12602:28;;12457:179;;;;:::o;12642:113::-;12712:4;12744;12739:3;12735:14;12727:22;;12642:113;;;:::o;12791:732::-;12910:3;12939:54;12987:5;12939:54;:::i;:::-;13009:86;13088:6;13083:3;13009:86;:::i;:::-;13002:93;;13119:56;13169:5;13119:56;:::i;:::-;13198:7;13229:1;13214:284;13239:6;13236:1;13233:13;13214:284;;;13315:6;13309:13;13342:63;13401:3;13386:13;13342:63;:::i;:::-;13335:70;;13428:60;13481:6;13428:60;:::i;:::-;13418:70;;13274:224;13261:1;13258;13254:9;13249:14;;13214:284;;;13218:14;13514:3;13507:10;;12915:608;;;12791:732;;;;:::o;13529:373::-;13672:4;13710:2;13699:9;13695:18;13687:26;;13759:9;13753:4;13749:20;13745:1;13734:9;13730:17;13723:47;13787:108;13890:4;13881:6;13787:108;:::i;:::-;13779:116;;13529:373;;;;:::o;13908:735::-;14125:4;14163:3;14152:9;14148:19;14140:27;;14177:71;14245:1;14234:9;14230:17;14221:6;14177:71;:::i;:::-;14258:72;14326:2;14315:9;14311:18;14302:6;14258:72;:::i;:::-;14377:9;14371:4;14367:20;14362:2;14351:9;14347:18;14340:48;14405:78;14478:4;14469:6;14405:78;:::i;:::-;14397:86;;14530:9;14524:4;14520:20;14515:2;14504:9;14500:18;14493:48;14558:78;14631:4;14622:6;14558:78;:::i;:::-;14550:86;;13908:735;;;;;;;:::o;14649:313::-;14762:4;14800:2;14789:9;14785:18;14777:26;;14849:9;14843:4;14839:20;14835:1;14824:9;14820:17;14813:47;14877:78;14950:4;14941:6;14877:78;:::i;:::-;14869:86;;14649:313;;;;:::o;14968:1305::-;15084:6;15092;15100;15108;15157:3;15145:9;15136:7;15132:23;15128:33;15125:120;;;15164:79;;:::i;:::-;15125:120;15312:1;15301:9;15297:17;15284:31;15342:18;15334:6;15331:30;15328:117;;;15364:79;;:::i;:::-;15328:117;15469:63;15524:7;15515:6;15504:9;15500:22;15469:63;:::i;:::-;15459:73;;15255:287;15581:2;15607:53;15652:7;15643:6;15632:9;15628:22;15607:53;:::i;:::-;15597:63;;15552:118;15737:2;15726:9;15722:18;15709:32;15768:18;15760:6;15757:30;15754:117;;;15790:79;;:::i;:::-;15754:117;15895:63;15950:7;15941:6;15930:9;15926:22;15895:63;:::i;:::-;15885:73;;15680:288;16035:2;16024:9;16020:18;16007:32;16066:18;16058:6;16055:30;16052:117;;;16088:79;;:::i;:::-;16052:117;16193:63;16248:7;16239:6;16228:9;16224:22;16193:63;:::i;:::-;16183:73;;15978:288;14968:1305;;;;;;;:::o;16279:514::-;16440:4;16478:2;16467:9;16463:18;16455:26;;16527:9;16521:4;16517:20;16513:1;16502:9;16498:17;16491:47;16555:78;16628:4;16619:6;16555:78;:::i;:::-;16547:86;;16680:9;16674:4;16670:20;16665:2;16654:9;16650:18;16643:48;16708:78;16781:4;16772:6;16708:78;:::i;:::-;16700:86;;16279:514;;;;;:::o;16799:533::-;16968:4;17006:2;16995:9;16991:18;16983:26;;17055:9;17049:4;17045:20;17041:1;17030:9;17026:17;17019:47;17083:78;17156:4;17147:6;17083:78;:::i;:::-;17075:86;;17171:72;17239:2;17228:9;17224:18;17215:6;17171:72;:::i;:::-;17253;17321:2;17310:9;17306:18;17297:6;17253:72;:::i;:::-;16799:533;;;;;;:::o;17338:1305::-;17454:6;17462;17470;17478;17527:3;17515:9;17506:7;17502:23;17498:33;17495:120;;;17534:79;;:::i;:::-;17495:120;17682:1;17671:9;17667:17;17654:31;17712:18;17704:6;17701:30;17698:117;;;17734:79;;:::i;:::-;17698:117;17839:63;17894:7;17885:6;17874:9;17870:22;17839:63;:::i;:::-;17829:73;;17625:287;17979:2;17968:9;17964:18;17951:32;18010:18;18002:6;17999:30;17996:117;;;18032:79;;:::i;:::-;17996:117;18137:63;18192:7;18183:6;18172:9;18168:22;18137:63;:::i;:::-;18127:73;;17922:288;18277:2;18266:9;18262:18;18249:32;18308:18;18300:6;18297:30;18294:117;;;18330:79;;:::i;:::-;18294:117;18435:63;18490:7;18481:6;18470:9;18466:22;18435:63;:::i;:::-;18425:73;;18220:288;18547:2;18573:53;18618:7;18609:6;18598:9;18594:22;18573:53;:::i;:::-;18563:63;;18518:118;17338:1305;;;;;;;:::o;18649:654::-;18727:6;18735;18784:2;18772:9;18763:7;18759:23;18755:32;18752:119;;;18790:79;;:::i;:::-;18752:119;18910:1;18935:53;18980:7;18971:6;18960:9;18956:22;18935:53;:::i;:::-;18925:63;;18881:117;19065:2;19054:9;19050:18;19037:32;19096:18;19088:6;19085:30;19082:117;;;19118:79;;:::i;:::-;19082:117;19223:63;19278:7;19269:6;19258:9;19254:22;19223:63;:::i;:::-;19213:73;;19008:288;18649:654;;;;;:::o;19309:979::-;19406:6;19414;19422;19471:2;19459:9;19450:7;19446:23;19442:32;19439:119;;;19477:79;;:::i;:::-;19439:119;19597:1;19622:53;19667:7;19658:6;19647:9;19643:22;19622:53;:::i;:::-;19612:63;;19568:117;19752:2;19741:9;19737:18;19724:32;19783:18;19775:6;19772:30;19769:117;;;19805:79;;:::i;:::-;19769:117;19910:63;19965:7;19956:6;19945:9;19941:22;19910:63;:::i;:::-;19900:73;;19695:288;20050:2;20039:9;20035:18;20022:32;20081:18;20073:6;20070:30;20067:117;;;20103:79;;:::i;:::-;20067:117;20208:63;20263:7;20254:6;20243:9;20239:22;20208:63;:::i;:::-;20198:73;;19993:288;19309:979;;;;;:::o;20294:90::-;20328:7;20371:5;20364:13;20357:21;20346:32;;20294:90;;;:::o;20390:116::-;20460:21;20475:5;20460:21;:::i;:::-;20453:5;20450:32;20440:60;;20496:1;20493;20486:12;20440:60;20390:116;:::o;20512:133::-;20555:5;20593:6;20580:20;20571:29;;20609:30;20633:5;20609:30;:::i;:::-;20512:133;;;;:::o;20651:1445::-;20773:6;20781;20789;20797;20805;20854:3;20842:9;20833:7;20829:23;20825:33;20822:120;;;20861:79;;:::i;:::-;20822:120;21009:1;20998:9;20994:17;20981:31;21039:18;21031:6;21028:30;21025:117;;;21061:79;;:::i;:::-;21025:117;21166:63;21221:7;21212:6;21201:9;21197:22;21166:63;:::i;:::-;21156:73;;20952:287;21306:2;21295:9;21291:18;21278:32;21337:18;21329:6;21326:30;21323:117;;;21359:79;;:::i;:::-;21323:117;21464:63;21519:7;21510:6;21499:9;21495:22;21464:63;:::i;:::-;21454:73;;21249:288;21576:2;21602:53;21647:7;21638:6;21627:9;21623:22;21602:53;:::i;:::-;21592:63;;21547:118;21732:2;21721:9;21717:18;21704:32;21763:18;21755:6;21752:30;21749:117;;;21785:79;;:::i;:::-;21749:117;21890:63;21945:7;21936:6;21925:9;21921:22;21890:63;:::i;:::-;21880:73;;21675:288;22002:3;22029:50;22071:7;22062:6;22051:9;22047:22;22029:50;:::i;:::-;22019:60;;21973:116;20651:1445;;;;;;;;:::o;22102:945::-;22198:6;22206;22214;22222;22271:3;22259:9;22250:7;22246:23;22242:33;22239:120;;;22278:79;;:::i;:::-;22239:120;22398:1;22423:53;22468:7;22459:6;22448:9;22444:22;22423:53;:::i;:::-;22413:63;;22369:117;22525:2;22551:53;22596:7;22587:6;22576:9;22572:22;22551:53;:::i;:::-;22541:63;;22496:118;22653:2;22679:53;22724:7;22715:6;22704:9;22700:22;22679:53;:::i;:::-;22669:63;;22624:118;22809:2;22798:9;22794:18;22781:32;22840:18;22832:6;22829:30;22826:117;;;22862:79;;:::i;:::-;22826:117;22967:63;23022:7;23013:6;23002:9;22998:22;22967:63;:::i;:::-;22957:73;;22752:288;22102:945;;;;;;;:::o;23053:654::-;23131:6;23139;23188:2;23176:9;23167:7;23163:23;23159:32;23156:119;;;23194:79;;:::i;:::-;23156:119;23342:1;23331:9;23327:17;23314:31;23372:18;23364:6;23361:30;23358:117;;;23394:79;;:::i;:::-;23358:117;23499:63;23554:7;23545:6;23534:9;23530:22;23499:63;:::i;:::-;23489:73;;23285:287;23611:2;23637:53;23682:7;23673:6;23662:9;23658:22;23637:53;:::i;:::-;23627:63;;23582:118;23053:654;;;;;:::o;23713:109::-;23794:21;23809:5;23794:21;:::i;:::-;23789:3;23782:34;23713:109;;:::o;23828:1012::-;24097:4;24135:3;24124:9;24120:19;24112:27;;24149:71;24217:1;24206:9;24202:17;24193:6;24149:71;:::i;:::-;24230:66;24292:2;24281:9;24277:18;24268:6;24230:66;:::i;:::-;24306;24368:2;24357:9;24353:18;24344:6;24306:66;:::i;:::-;24382;24444:2;24433:9;24429:18;24420:6;24382:66;:::i;:::-;24458:67;24520:3;24509:9;24505:19;24496:6;24458:67;:::i;:::-;24535;24597:3;24586:9;24582:19;24573:6;24535:67;:::i;:::-;24612;24674:3;24663:9;24659:19;24650:6;24612:67;:::i;:::-;24689;24751:3;24740:9;24736:19;24727:6;24689:67;:::i;:::-;24766;24828:3;24817:9;24813:19;24804:6;24766:67;:::i;:::-;23828:1012;;;;;;;;;;;;:::o;24846:210::-;24933:4;24971:2;24960:9;24956:18;24948:26;;24984:65;25046:1;25035:9;25031:17;25022:6;24984:65;:::i;:::-;24846:210;;;;:::o;25062:1305::-;25178:6;25186;25194;25202;25251:3;25239:9;25230:7;25226:23;25222:33;25219:120;;;25258:79;;:::i;:::-;25219:120;25406:1;25395:9;25391:17;25378:31;25436:18;25428:6;25425:30;25422:117;;;25458:79;;:::i;:::-;25422:117;25563:63;25618:7;25609:6;25598:9;25594:22;25563:63;:::i;:::-;25553:73;;25349:287;25703:2;25692:9;25688:18;25675:32;25734:18;25726:6;25723:30;25720:117;;;25756:79;;:::i;:::-;25720:117;25861:63;25916:7;25907:6;25896:9;25892:22;25861:63;:::i;:::-;25851:73;;25646:288;25973:2;25999:53;26044:7;26035:6;26024:9;26020:22;25999:53;:::i;:::-;25989:63;;25944:118;26129:2;26118:9;26114:18;26101:32;26160:18;26152:6;26149:30;26146:117;;;26182:79;;:::i;:::-;26146:117;26287:63;26342:7;26333:6;26322:9;26318:22;26287:63;:::i;:::-;26277:73;;26072:288;25062:1305;;;;;;;:::o;26373:826::-;26610:4;26648:3;26637:9;26633:19;26625:27;;26662:71;26730:1;26719:9;26715:17;26706:6;26662:71;:::i;:::-;26780:9;26774:4;26770:20;26765:2;26754:9;26750:18;26743:48;26808:78;26881:4;26872:6;26808:78;:::i;:::-;26800:86;;26933:9;26927:4;26923:20;26918:2;26907:9;26903:18;26896:48;26961:78;27034:4;27025:6;26961:78;:::i;:::-;26953:86;;27086:9;27080:4;27076:20;27071:2;27060:9;27056:18;27049:48;27114:78;27187:4;27178:6;27114:78;:::i;:::-;27106:86;;26373:826;;;;;;;:::o;27205:834::-;27293:6;27301;27350:2;27338:9;27329:7;27325:23;27321:32;27318:119;;;27356:79;;:::i;:::-;27318:119;27504:1;27493:9;27489:17;27476:31;27534:18;27526:6;27523:30;27520:117;;;27556:79;;:::i;:::-;27520:117;27661:63;27716:7;27707:6;27696:9;27692:22;27661:63;:::i;:::-;27651:73;;27447:287;27801:2;27790:9;27786:18;27773:32;27832:18;27824:6;27821:30;27818:117;;;27854:79;;:::i;:::-;27818:117;27959:63;28014:7;28005:6;27994:9;27990:22;27959:63;:::i;:::-;27949:73;;27744:288;27205:834;;;;;:::o;28045:945::-;28141:6;28149;28157;28165;28214:3;28202:9;28193:7;28189:23;28185:33;28182:120;;;28221:79;;:::i;:::-;28182:120;28341:1;28366:53;28411:7;28402:6;28391:9;28387:22;28366:53;:::i;:::-;28356:63;;28312:117;28496:2;28485:9;28481:18;28468:32;28527:18;28519:6;28516:30;28513:117;;;28549:79;;:::i;:::-;28513:117;28654:63;28709:7;28700:6;28689:9;28685:22;28654:63;:::i;:::-;28644:73;;28439:288;28766:2;28792:53;28837:7;28828:6;28817:9;28813:22;28792:53;:::i;:::-;28782:63;;28737:118;28894:2;28920:53;28965:7;28956:6;28945:9;28941:22;28920:53;:::i;:::-;28910:63;;28865:118;28045:945;;;;;;;:::o;28996:321::-;29083:4;29173:18;29165:6;29162:30;29159:56;;;29195:18;;:::i;:::-;29159:56;29245:4;29237:6;29233:17;29225:25;;29305:4;29299;29295:15;29287:23;;28996:321;;;:::o;29323:117::-;29432:1;29429;29422:12;29462:945;29568:5;29593:91;29609:74;29676:6;29609:74;:::i;:::-;29593:91;:::i;:::-;29584:100;;29704:5;29733:6;29726:5;29719:21;29767:4;29760:5;29756:16;29749:23;;29820:4;29812:6;29808:17;29800:6;29796:30;29849:3;29841:6;29838:15;29835:122;;;29868:79;;:::i;:::-;29835:122;29983:6;29966:435;30000:6;29995:3;29992:15;29966:435;;;30089:3;30076:17;30125:18;30112:11;30109:35;30106:122;;;30147:79;;:::i;:::-;30106:122;30271:11;30263:6;30259:24;30309:47;30352:3;30340:10;30309:47;:::i;:::-;30304:3;30297:60;30386:4;30381:3;30377:14;30370:21;;30042:359;;30026:4;30021:3;30017:14;30010:21;;29966:435;;;29970:21;29574:833;;29462:945;;;;;:::o;30429:390::-;30510:5;30559:3;30552:4;30544:6;30540:17;30536:27;30526:122;;30567:79;;:::i;:::-;30526:122;30684:6;30671:20;30709:104;30809:3;30801:6;30794:4;30786:6;30782:17;30709:104;:::i;:::-;30700:113;;30516:303;30429:390;;;;:::o;30825:1681::-;30985:6;30993;31001;31009;31017;31066:3;31054:9;31045:7;31041:23;31037:33;31034:120;;;31073:79;;:::i;:::-;31034:120;31221:1;31210:9;31206:17;31193:31;31251:18;31243:6;31240:30;31237:117;;;31273:79;;:::i;:::-;31237:117;31378:63;31433:7;31424:6;31413:9;31409:22;31378:63;:::i;:::-;31368:73;;31164:287;31518:2;31507:9;31503:18;31490:32;31549:18;31541:6;31538:30;31535:117;;;31571:79;;:::i;:::-;31535:117;31676:63;31731:7;31722:6;31711:9;31707:22;31676:63;:::i;:::-;31666:73;;31461:288;31816:2;31805:9;31801:18;31788:32;31847:18;31839:6;31836:30;31833:117;;;31869:79;;:::i;:::-;31833:117;31974:88;32054:7;32045:6;32034:9;32030:22;31974:88;:::i;:::-;31964:98;;31759:313;32111:2;32137:53;32182:7;32173:6;32162:9;32158:22;32137:53;:::i;:::-;32127:63;;32082:118;32267:3;32256:9;32252:19;32239:33;32299:18;32291:6;32288:30;32285:117;;;32321:79;;:::i;:::-;32285:117;32426:63;32481:7;32472:6;32461:9;32457:22;32426:63;:::i;:::-;32416:73;;32210:289;30825:1681;;;;;;;;:::o;32512:533::-;32681:4;32719:2;32708:9;32704:18;32696:26;;32732:71;32800:1;32789:9;32785:17;32776:6;32732:71;:::i;:::-;32813:72;32881:2;32870:9;32866:18;32857:6;32813:72;:::i;:::-;32932:9;32926:4;32922:20;32917:2;32906:9;32902:18;32895:48;32960:78;33033:4;33024:6;32960:78;:::i;:::-;32952:86;;32512:533;;;;;;:::o;33051:180::-;33099:77;33096:1;33089:88;33196:4;33193:1;33186:15;33220:4;33217:1;33210:15;33237:320;33281:6;33318:1;33312:4;33308:12;33298:22;;33365:1;33359:4;33355:12;33386:18;33376:81;;33442:4;33434:6;33430:17;33420:27;;33376:81;33504:2;33496:6;33493:14;33473:18;33470:38;33467:84;;33523:18;;:::i;:::-;33467:84;33288:269;33237:320;;;:::o;33563:147::-;33664:11;33701:3;33686:18;;33563:147;;;;:::o;33716:144::-;33768:4;33791:3;33783:11;;33814:3;33811:1;33804:14;33848:4;33845:1;33835:18;33827:26;;33716:144;;;:::o;33888:878::-;33993:3;34030:5;34024:12;34059:36;34085:9;34059:36;:::i;:::-;34111:88;34192:6;34187:3;34111:88;:::i;:::-;34104:95;;34230:1;34219:9;34215:17;34246:1;34241:166;;;;34421:1;34416:344;;;;34208:552;;34241:166;34325:4;34321:9;34310;34306:25;34301:3;34294:38;34387:6;34380:14;34373:22;34365:6;34361:35;34356:3;34352:45;34345:52;;34241:166;;34416:344;34483:41;34518:5;34483:41;:::i;:::-;34546:1;34560:154;34574:6;34571:1;34568:13;34560:154;;;34648:7;34642:14;34638:1;34633:3;34629:11;34622:35;34698:1;34689:7;34685:15;34674:26;;34596:4;34593:1;34589:12;34584:17;;34560:154;;;34743:6;34738:3;34734:16;34727:23;;34423:337;;34208:552;;33997:769;;33888:878;;;;:::o;34772:273::-;34903:3;34925:94;35015:3;35006:6;34925:94;:::i;:::-;34918:101;;35036:3;35029:10;;34772:273;;;;:::o;35051:180::-;35099:77;35096:1;35089:88;35196:4;35193:1;35186:15;35220:4;35217:1;35210:15;35237:180;35285:77;35282:1;35275:88;35382:4;35379:1;35372:15;35406:4;35403:1;35396:15;35423:233;35462:3;35485:24;35503:5;35485:24;:::i;:::-;35476:33;;35531:66;35524:5;35521:77;35518:103;;35601:18;;:::i;:::-;35518:103;35648:1;35641:5;35637:13;35630:20;;35423:233;;;:::o;35662:191::-;35702:3;35721:20;35739:1;35721:20;:::i;:::-;35716:25;;35755:20;35773:1;35755:20;:::i;:::-;35750:25;;35798:1;35795;35791:9;35784:16;;35819:3;35816:1;35813:10;35810:36;;;35826:18;;:::i;:::-;35810:36;35662:191;;;;:::o;35859:141::-;35908:4;35931:3;35923:11;;35954:3;35951:1;35944:14;35988:4;35985:1;35975:18;35967:26;;35859:141;;;:::o;36006:93::-;36043:6;36090:2;36085;36078:5;36074:14;36070:23;36060:33;;36006:93;;;:::o;36105:107::-;36149:8;36199:5;36193:4;36189:16;36168:37;;36105:107;;;;:::o;36218:393::-;36287:6;36337:1;36325:10;36321:18;36360:97;36390:66;36379:9;36360:97;:::i;:::-;36478:39;36508:8;36497:9;36478:39;:::i;:::-;36466:51;;36550:4;36546:9;36539:5;36535:21;36526:30;;36599:4;36589:8;36585:19;36578:5;36575:30;36565:40;;36294:317;;36218:393;;;;;:::o;36617:60::-;36645:3;36666:5;36659:12;;36617:60;;;:::o;36683:142::-;36733:9;36766:53;36784:34;36793:24;36811:5;36793:24;:::i;:::-;36784:34;:::i;:::-;36766:53;:::i;:::-;36753:66;;36683:142;;;:::o;36831:75::-;36874:3;36895:5;36888:12;;36831:75;;;:::o;36912:269::-;37022:39;37053:7;37022:39;:::i;:::-;37083:91;37132:41;37156:16;37132:41;:::i;:::-;37124:6;37117:4;37111:11;37083:91;:::i;:::-;37077:4;37070:105;36988:193;36912:269;;;:::o;37187:73::-;37232:3;37187:73;:::o;37266:189::-;37343:32;;:::i;:::-;37384:65;37442:6;37434;37428:4;37384:65;:::i;:::-;37319:136;37266:189;;:::o;37461:186::-;37521:120;37538:3;37531:5;37528:14;37521:120;;;37592:39;37629:1;37622:5;37592:39;:::i;:::-;37565:1;37558:5;37554:13;37545:22;;37521:120;;;37461:186;;:::o;37653:543::-;37754:2;37749:3;37746:11;37743:446;;;37788:38;37820:5;37788:38;:::i;:::-;37872:29;37890:10;37872:29;:::i;:::-;37862:8;37858:44;38055:2;38043:10;38040:18;38037:49;;;38076:8;38061:23;;38037:49;38099:80;38155:22;38173:3;38155:22;:::i;:::-;38145:8;38141:37;38128:11;38099:80;:::i;:::-;37758:431;;37743:446;37653:543;;;:::o;38202:117::-;38256:8;38306:5;38300:4;38296:16;38275:37;;38202:117;;;;:::o;38325:169::-;38369:6;38402:51;38450:1;38446:6;38438:5;38435:1;38431:13;38402:51;:::i;:::-;38398:56;38483:4;38477;38473:15;38463:25;;38376:118;38325:169;;;;:::o;38499:295::-;38575:4;38721:29;38746:3;38740:4;38721:29;:::i;:::-;38713:37;;38783:3;38780:1;38776:11;38770:4;38767:21;38759:29;;38499:295;;;;:::o;38799:1395::-;38916:37;38949:3;38916:37;:::i;:::-;39018:18;39010:6;39007:30;39004:56;;;39040:18;;:::i;:::-;39004:56;39084:38;39116:4;39110:11;39084:38;:::i;:::-;39169:67;39229:6;39221;39215:4;39169:67;:::i;:::-;39263:1;39287:4;39274:17;;39319:2;39311:6;39308:14;39336:1;39331:618;;;;39993:1;40010:6;40007:77;;;40059:9;40054:3;40050:19;40044:26;40035:35;;40007:77;40110:67;40170:6;40163:5;40110:67;:::i;:::-;40104:4;40097:81;39966:222;39301:887;;39331:618;39383:4;39379:9;39371:6;39367:22;39417:37;39449:4;39417:37;:::i;:::-;39476:1;39490:208;39504:7;39501:1;39498:14;39490:208;;;39583:9;39578:3;39574:19;39568:26;39560:6;39553:42;39634:1;39626:6;39622:14;39612:24;;39681:2;39670:9;39666:18;39653:31;;39527:4;39524:1;39520:12;39515:17;;39490:208;;;39726:6;39717:7;39714:19;39711:179;;;39784:9;39779:3;39775:19;39769:26;39827:48;39869:4;39861:6;39857:17;39846:9;39827:48;:::i;:::-;39819:6;39812:64;39734:156;39711:179;39936:1;39932;39924:6;39920:14;39916:22;39910:4;39903:36;39338:611;;;39301:887;;38891:1303;;;38799:1395;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3951800","executionCost":"4504","totalCost":"3956304"},"external":{"_dao_ids()":"2519","_dao_uris(uint256)":"infinite","_donated(uint256)":"infinite","_donations(uint256)":"infinite","_donations_ids()":"2539","_feed_ids()":"2520","_feeds(uint256)":"infinite","_goal_ids()":"2543","_goal_uris(uint256)":"infinite","_ideas_ids()":"2540","_ideas_uris(uint256)":"infinite","_ideas_vote_ids()":"2498","_join_ids()":"2521","_joined_person(uint256)":"infinite","_message_ids()":"2497","_message_read_ids()":"2540","_reply_ids()":"2496","_smart_contract_ids()":"2498","_smart_contracts_uris(uint256)":"infinite","_template_uris(uint256)":"infinite","_user_badges(uint256)":"infinite","add_Feed(string,string)":"infinite","add_donation(string,uint256,uint256,string,string)":"infinite","all_goal_ideas_votes(uint256)":"infinite","all_messages(uint256)":"infinite","all_read_messages(uint256)":"infinite","all_replies(uint256)":"infinite","create_dao(string,string,string,uint256)":"infinite","create_goal(string,string,uint256,string)":"infinite","create_goal_ideas_vote(string,string,uint256,string,bool)":"infinite","create_ideas(string,string,string[],uint256,string)":"infinite","dao_uri(uint256)":"infinite","getMsgIDs(string)":"infinite","getReadMsg(uint256,string)":"infinite","getReplyIDs(uint256)":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(string)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(string)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_person_joinedID(string,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","is_person_joined(string,uint256)":"infinite","join_community(string,uint256,string,string)":"infinite","leave_community(uint256)":"infinite","reset_all()":"infinite","sendMsg(string,string,string,uint256)":"infinite","sendReadMsg(uint256,uint256,uint256,string)":"infinite","sendReply(uint256,string,uint256,uint256)":"infinite","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite","update_template(uint256,string)":"infinite"},"internal":{"create_ideas_smart_contract(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{"_dao_ids()":"7bbd582d","_dao_uris(uint256)":"27a568b9","_donated(uint256)":"20959ed0","_donations(uint256)":"7fc543ec","_donations_ids()":"ec245802","_feed_ids()":"8ac4110c","_feeds(uint256)":"54a9fb18","_goal_ids()":"13bf4cea","_goal_uris(uint256)":"7f2035d4","_ideas_ids()":"d3791b20","_ideas_uris(uint256)":"468d0c80","_ideas_vote_ids()":"4a797bd7","_join_ids()":"1171b621","_joined_person(uint256)":"330b8f26","_message_ids()":"9077007d","_message_read_ids()":"ca013f17","_reply_ids()":"aa2bf5d3","_smart_contract_ids()":"1b592aeb","_smart_contracts_uris(uint256)":"ff4a37ef","_template_uris(uint256)":"6ecda4ee","_user_badges(uint256)":"a428a47f","add_Feed(string,string)":"bda00335","add_donation(string,uint256,uint256,string,string)":"1fd4d664","all_goal_ideas_votes(uint256)":"1ba44c4c","all_messages(uint256)":"b527d45e","all_read_messages(uint256)":"cace8d46","all_replies(uint256)":"3f87a2f4","create_dao(string,string,string,uint256)":"86ffa45b","create_goal(string,string,uint256,string)":"b39a38bd","create_goal_ideas_vote(string,string,uint256,string,bool)":"89e93784","create_ideas(string,string,string[],uint256,string)":"dddb6f86","dao_uri(uint256)":"5d907da1","getMsgIDs(string)":"42f78f47","getReadMsg(uint256,string)":"cd230809","getReplyIDs(uint256)":"812fae1f","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(string)":"0377d44a","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(string)":"829a5d98","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_person_joinedID(string,uint256)":"a36adb9f","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","is_person_joined(string,uint256)":"a807c20e","join_community(string,uint256,string,string)":"7bc9724b","leave_community(uint256)":"826eeefe","reset_all()":"b16060a6","sendMsg(string,string,string,uint256)":"ca982104","sendReadMsg(uint256,uint256,uint256,string)":"934c5f00","sendReply(uint256,string,uint256,uint256)":"d9fc52db","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430","update_template(uint256,string)":"87633eb2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donations\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"ideas_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"userid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_donations_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_feed_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_feeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feed_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"Type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"goal_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_join_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_joined_person\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"daoId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"joined_date\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_read_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_template_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_user_badges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"dao\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"goal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ideas\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"donation\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"comment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reply\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"feed_text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"name\":\"add_Feed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_feed2\",\"type\":\"string\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"goal_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ideas_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_read_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ideas_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"feed_add\",\"type\":\"bool\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_goal_id\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ideas_id\",\"type\":\"string\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"getReadMsg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_id\",\"type\":\"string\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dao_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"get_person_joinedID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dao_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"is_person_joined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dao_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"joined_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"join_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"join_id\",\"type\":\"uint256\"}],\"name\":\"leave_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sender\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wallet\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"sendReadMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"update_template\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAOnation.sol\":\"DAOnation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/DAOnation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ncontract DAOnation {\\r\\n  struct dao_uri_struct {\\r\\n    string dao_wallet;\\r\\n    string dao_uri;\\r\\n    string finished;\\r\\n  }\\r\\n  struct goal_uri_struct {\\r\\n    string dao_id;\\r\\n    string goal_uri;\\r\\n  }\\r\\n\\r\\n  struct ideas_uri_struct {\\r\\n    string goal_id;\\r\\n    string ideas_uri;\\r\\n    uint256 donation;\\r\\n  }\\r\\n\\r\\n  struct donation_struct {\\r\\n    string ideas_id;\\r\\n    uint256 userid;\\r\\n    uint256 donation;\\r\\n  }\\r\\n\\r\\n  struct smart_contract_uri_struct {\\r\\n    uint256 smart_contract_id;\\r\\n    uint256 ideas_id;\\r\\n    string smart_contract_uri;\\r\\n  }\\r\\n  struct goal_ideas_votes_struct {\\r\\n    string goal_id;\\r\\n    string ideas_id;\\r\\n    uint256 user_id;\\r\\n  }\\r\\n  struct message_struct {\\r\\n    uint256 message_id;\\r\\n    string ideas_id;\\r\\n    string message;\\r\\n    string sender;\\r\\n  }\\r\\n  struct message_read_struct {\\r\\n    uint256 message_id;\\r\\n    uint256 ideas_id;\\r\\n    uint256 user_id;\\r\\n    string msg_type;\\r\\n  }\\r\\n  struct reply_struct {\\r\\n    uint256 reply_id;\\r\\n    uint256 message_id;\\r\\n    uint256 ideas_id;\\r\\n    string message;\\r\\n  }\\r\\n\\r\\n  struct UnbondingRequest {\\r\\n    int64 completionTime;\\r\\n    uint256 amount;\\r\\n  }\\r\\n\\r\\n  struct join_struct {\\r\\n    string daoId;\\r\\n    uint256 user_id;\\r\\n    string joined_date;\\r\\n  }\\r\\n\\r\\n  struct user_badge_struct {\\r\\n    uint256 user_id;\\r\\n    bool dao;\\r\\n    bool joined;\\r\\n    bool goal;\\r\\n    bool ideas;\\r\\n    bool vote;\\r\\n    bool donation;\\r\\n    bool comment;\\r\\n    bool reply;\\r\\n  }\\r\\n\\r\\n  struct feed_struct {\\r\\n    uint256 feed_id;\\r\\n    uint256 date;\\r\\n    string Type;\\r\\n    string data;\\r\\n  }\\r\\n  uint256 public _dao_ids;\\r\\n  uint256 public _donations_ids;\\r\\n  uint256 public _goal_ids;\\r\\n  uint256 public _ideas_ids;\\r\\n  uint256 public _join_ids;\\r\\n  uint256 public _smart_contract_ids;\\r\\n  uint256 public _ideas_vote_ids;\\r\\n  uint256 public _message_ids;\\r\\n  uint256 public _message_read_ids;\\r\\n  uint256 public _reply_ids;\\r\\n  uint256 public _feed_ids;\\r\\n  mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n  mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\\r\\n  mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\\r\\n\\r\\n  mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n  mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n  mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\\r\\n  mapping(uint256 => feed_struct) public _feeds; //_feed_ids            => (feed_struct)\\r\\n  mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\\r\\n  mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n  mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\\r\\n\\r\\n  mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n  mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\\r\\n\\r\\n  mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n  mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\\r\\n\\r\\n  //Daos\\r\\n  function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template, uint256 user_id) public returns (uint256) {\\r\\n    //Create Dao into _dao_uris\\r\\n    _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\\r\\n    _template_uris[_dao_ids] = _template;\\r\\n    _user_badges[user_id].dao = true;\\r\\n    _dao_ids++;\\r\\n\\r\\n    return _dao_ids;\\r\\n  }\\r\\n\\r\\n  function update_template(uint256 _dao_id, string memory _template) public {\\r\\n    _template_uris[_dao_id] = _template;\\r\\n  }\\r\\n\\r\\n  function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\\r\\n    //Set Dao of wallet and uri\\r\\n    _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n    _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n  }\\r\\n\\r\\n  function get_all_daos() public view returns (string[] memory) {\\r\\n    //Getting all doas\\r\\n    string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n    for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n      _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n    //Getting one dao URI\\r\\n    return _dao_uris[_dao_id].dao_uri;\\r\\n  }\\r\\n\\r\\n  function add_Feed(string memory feed_text, string memory _type) public {\\r\\n    _feeds[_feed_ids] = feed_struct(_feed_ids, block.timestamp, _type, feed_text);\\r\\n    _feed_ids++;\\r\\n  }\\r\\n\\r\\n  //Goals\\r\\n  function create_goal(string memory _goal_uri, string memory _dao_id, uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n    //Create goal into _goal_uris\\r\\n    _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n\\r\\n    _user_badges[_user_id].goal = true;\\r\\n    _goal_ids++;\\r\\n    add_Feed(_feed, 'goal');\\r\\n\\r\\n    return _goal_ids;\\r\\n  }\\r\\n\\r\\n  function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n    //Set goal uri\\r\\n    _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n  }\\r\\n\\r\\n  function get_all_goals() public view returns (string[] memory) {\\r\\n    //Getting all goals\\r\\n    string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\\r\\n    //Getting all goals by dao id\\r\\n    string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n    uint256 _store_id;\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\\r\\n        _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n        _store_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\\r\\n    //Getting goal id by uri\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\\r\\n    }\\r\\n\\r\\n    return 0;\\r\\n  }\\r\\n  \\r\\n  // function get_dao_id_by_ideas_id(uint256 ideas_id) public view returns (string memory) {\\r\\n    \\r\\n  //   string memory  goal_id= _ideas_uris[ideas_id].goal_id;\\r\\n  //   string memory dao_id = _goal_uris[goal_id].dao_id;\\r\\n    \\r\\n  //   return dao_id;\\r\\n  // }\\r\\n\\r\\n  function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n    //Getting one goal URI\\r\\n    return _goal_uris[_goal_id].goal_uri;\\r\\n  }\\r\\n\\r\\n  //Ideas\\r\\n  function create_ideas(string memory _ideas_uri, string memory _goal_id, string[] memory _smart_contracts, uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n    //Create ideas into _ideas_uris\\r\\n    _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n    _user_badges[_user_id].ideas = true;\\r\\n    _ideas_ids++;\\r\\n\\r\\n    for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n      create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\\r\\n      _smart_contract_ids++;\\r\\n    }\\r\\n    add_Feed(_feed, 'idea');\\r\\n\\r\\n    return _ideas_ids;\\r\\n  }\\r\\n\\r\\n  function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\\r\\n    _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\\r\\n  }\\r\\n\\r\\n  function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n    _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n  }\\r\\n\\r\\n  function add_donation(string memory _ideas_id, uint256 _doantion, uint256 _userid, string memory _feed1, string memory _feed2) public {\\r\\n    if (_user_badges[_userid].donation == false) {\\r\\n      add_Feed(_feed1, 'badge');\\r\\n    }\\r\\n    add_Feed(_feed2, 'donation');\\r\\n\\r\\n    _user_badges[_userid].donation = true;\\r\\n    _donated[_userid] += _doantion;\\r\\n    _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\\r\\n    _donations_ids++;\\r\\n  }\\r\\n\\r\\n  function join_community(string memory dao_id, uint256 person,string memory joined_date, string memory _feed) public {\\r\\n    _user_badges[person].joined = true;\\r\\n    _joined_person[_join_ids] = join_struct({daoId: dao_id, user_id: person,joined_date:joined_date});\\r\\n    _join_ids++;\\r\\n    add_Feed(_feed, 'join');\\r\\n  }\\r\\n\\r\\n  function leave_community(uint256 join_id) public {\\r\\n    _joined_person[join_id] = join_struct({daoId: \\\"9999\\\", user_id: 9999,joined_date:\\\"\\\"});\\r\\n  }\\r\\n\\r\\n  function is_person_joined(string memory dao_id, uint256 person) public view returns (bool) {\\r\\n    for (uint256 i = 0; i < _join_ids; i++) {\\r\\n      if ((_joined_person[i].user_id == person) && (keccak256(bytes(_joined_person[i].daoId)) == keccak256(bytes(dao_id)))) return true;\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n  }\\r\\n\\r\\n  function get_person_joinedID(string memory dao_id, uint256 person) public view returns (uint256) {\\r\\n    for (uint256 i = 0; i < _join_ids; i++) {\\r\\n      if ((_joined_person[i].user_id == person) && (keccak256(bytes(_joined_person[i].daoId)) == keccak256(bytes(dao_id)))) return i;\\r\\n    }\\r\\n\\r\\n    return 9999;\\r\\n  }\\r\\n\\r\\n  function get_all_ideas() public view returns (string[] memory) {\\r\\n    //Getting all ideas\\r\\n    string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_all_ideas_by_goal_id(string memory  _goal_id) public view returns (string[] memory) {\\r\\n    //Getting all ideas by goal id\\r\\n    string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n    uint256 _store_id;\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (keccak256(bytes(_ideas_uris[i].goal_id)) == keccak256(bytes(_goal_id))) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n      _store_id++;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n    //Getting ideas id by uri\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\\r\\n    }\\r\\n\\r\\n    return 0;\\r\\n  }\\r\\n\\r\\n  function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (string memory) {\\r\\n    //Getting ideas id by uri\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\\r\\n    }\\r\\n\\r\\n    return \\\"\\\";\\r\\n  }\\r\\n\\r\\n  function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n    //Getting one ideas URI\\r\\n    return _ideas_uris[_ideas_id].ideas_uri;\\r\\n  }\\r\\n\\r\\n  //Votes\\r\\n  function create_goal_ideas_vote(string memory _goal_id, string memory _ideas_id, uint256 _user_id, string memory _feed,bool  feed_add) public returns (uint256) {\\r\\n    _user_badges[_user_id].vote = true;\\r\\n    //Create votes into all_goal_ideas_votes\\r\\n    all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\\r\\n    _ideas_vote_ids++;\\r\\n    if (feed_add){\\r\\n        add_Feed(_feed, 'vote');\\r\\n    }\\r\\n\\r\\n    return _ideas_vote_ids;\\r\\n  }\\r\\n  \\r\\n    //Messages\\r\\n  function sendMsg(string memory _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\\r\\n    _user_badges[_user_id].comment = true;\\r\\n    //Create messsage into all_messages\\r\\n    all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\\r\\n    _message_ids++;\\r\\n\\r\\n    return _message_ids;\\r\\n  }\\r\\n\\r\\n  function getMsgIDs(string memory ideas_id) public view returns (uint256[] memory) {\\r\\n    //Getting all messages ids by idea id\\r\\n    uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n    uint256 _msg_id;\\r\\n    for (uint256 i = 0; i < _message_ids; i++) {\\r\\n      if (keccak256(bytes(all_messages[i].ideas_id)) == keccak256(bytes(ideas_id))) {\\r\\n        _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n        _msg_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _All_Ideas_Messages;\\r\\n  }\\r\\n\\r\\n  function sendReply(uint256 _message_id, string memory _reply, uint256 ideas_id, uint256 _userid) public returns (uint256) {\\r\\n    _user_badges[_userid].reply = true;\\r\\n    //Create reply into all_replies\\r\\n    all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id, ideas_id, _reply);\\r\\n    _reply_ids++;\\r\\n\\r\\n    return _reply_ids;\\r\\n  }\\r\\n\\r\\n  function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\\r\\n    //Getting all messages ids by idea id\\r\\n    uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n    uint256 _reply_id;\\r\\n    for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n      if (all_replies[i].message_id == message_id) {\\r\\n        _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n        _reply_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _All_Messages_Replys;\\r\\n  }\\r\\n\\r\\n  function sendReadMsg(uint256 _message_id, uint256 _ideas_id, uint256 _wallet, string memory msg_type) public returns (uint256) {\\r\\n    //Create messsage into all_messages\\r\\n    all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet, msg_type);\\r\\n    _message_read_ids++;\\r\\n\\r\\n    return _message_read_ids;\\r\\n  }\\r\\n\\r\\n  function getReadMsg(uint256 _message_id, string memory msg_type) public view returns (bool) {\\r\\n    bool read = false;\\r\\n    for (uint256 i = 0; i < _message_read_ids; i++) {\\r\\n      if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\\r\\n        read = true;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return read;\\r\\n  }\\r\\n\\r\\n  function reset_all() public {\\r\\n    for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n    for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n    for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\\r\\n    _dao_ids = 0;\\r\\n    _goal_ids = 0;\\r\\n    _ideas_ids = 0;\\r\\n    _message_ids = 0;\\r\\n    _reply_ids = 0;\\r\\n    _ideas_vote_ids = 0;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xa4d4612a8e7dd38f1c91ee13b19cdd330b00c41fe4730521f038ea6c4fa756ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1864,"contract":"contracts/DAOnation.sol:DAOnation","label":"_dao_ids","offset":0,"slot":"0","type":"t_uint256"},{"astId":1866,"contract":"contracts/DAOnation.sol:DAOnation","label":"_donations_ids","offset":0,"slot":"1","type":"t_uint256"},{"astId":1868,"contract":"contracts/DAOnation.sol:DAOnation","label":"_goal_ids","offset":0,"slot":"2","type":"t_uint256"},{"astId":1870,"contract":"contracts/DAOnation.sol:DAOnation","label":"_ideas_ids","offset":0,"slot":"3","type":"t_uint256"},{"astId":1872,"contract":"contracts/DAOnation.sol:DAOnation","label":"_join_ids","offset":0,"slot":"4","type":"t_uint256"},{"astId":1874,"contract":"contracts/DAOnation.sol:DAOnation","label":"_smart_contract_ids","offset":0,"slot":"5","type":"t_uint256"},{"astId":1876,"contract":"contracts/DAOnation.sol:DAOnation","label":"_ideas_vote_ids","offset":0,"slot":"6","type":"t_uint256"},{"astId":1878,"contract":"contracts/DAOnation.sol:DAOnation","label":"_message_ids","offset":0,"slot":"7","type":"t_uint256"},{"astId":1880,"contract":"contracts/DAOnation.sol:DAOnation","label":"_message_read_ids","offset":0,"slot":"8","type":"t_uint256"},{"astId":1882,"contract":"contracts/DAOnation.sol:DAOnation","label":"_reply_ids","offset":0,"slot":"9","type":"t_uint256"},{"astId":1884,"contract":"contracts/DAOnation.sol:DAOnation","label":"_feed_ids","offset":0,"slot":"10","type":"t_uint256"},{"astId":1889,"contract":"contracts/DAOnation.sol:DAOnation","label":"_dao_uris","offset":0,"slot":"11","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)1762_storage)"},{"astId":1893,"contract":"contracts/DAOnation.sol:DAOnation","label":"_template_uris","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":1898,"contract":"contracts/DAOnation.sol:DAOnation","label":"_joined_person","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(join_struct)1834_storage)"},{"astId":1903,"contract":"contracts/DAOnation.sol:DAOnation","label":"_goal_uris","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)1767_storage)"},{"astId":1908,"contract":"contracts/DAOnation.sol:DAOnation","label":"_ideas_uris","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)1774_storage)"},{"astId":1912,"contract":"contracts/DAOnation.sol:DAOnation","label":"_donated","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1917,"contract":"contracts/DAOnation.sol:DAOnation","label":"_feeds","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_struct(feed_struct)1862_storage)"},{"astId":1922,"contract":"contracts/DAOnation.sol:DAOnation","label":"_donations","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_struct(donation_struct)1781_storage)"},{"astId":1927,"contract":"contracts/DAOnation.sol:DAOnation","label":"_smart_contracts_uris","offset":0,"slot":"19","type":"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1788_storage)"},{"astId":1932,"contract":"contracts/DAOnation.sol:DAOnation","label":"all_goal_ideas_votes","offset":0,"slot":"20","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1795_storage)"},{"astId":1937,"contract":"contracts/DAOnation.sol:DAOnation","label":"all_messages","offset":0,"slot":"21","type":"t_mapping(t_uint256,t_struct(message_struct)1804_storage)"},{"astId":1942,"contract":"contracts/DAOnation.sol:DAOnation","label":"all_read_messages","offset":0,"slot":"22","type":"t_mapping(t_uint256,t_struct(message_read_struct)1813_storage)"},{"astId":1947,"contract":"contracts/DAOnation.sol:DAOnation","label":"all_replies","offset":0,"slot":"23","type":"t_mapping(t_uint256,t_struct(reply_struct)1822_storage)"},{"astId":1952,"contract":"contracts/DAOnation.sol:DAOnation","label":"_user_badges","offset":0,"slot":"24","type":"t_mapping(t_uint256,t_struct(user_badge_struct)1853_storage)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(dao_uri_struct)1762_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)1762_storage"},"t_mapping(t_uint256,t_struct(donation_struct)1781_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.donation_struct)","numberOfBytes":"32","value":"t_struct(donation_struct)1781_storage"},"t_mapping(t_uint256,t_struct(feed_struct)1862_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.feed_struct)","numberOfBytes":"32","value":"t_struct(feed_struct)1862_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1795_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)1795_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)1767_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)1767_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)1774_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)1774_storage"},"t_mapping(t_uint256,t_struct(join_struct)1834_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.join_struct)","numberOfBytes":"32","value":"t_struct(join_struct)1834_storage"},"t_mapping(t_uint256,t_struct(message_read_struct)1813_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.message_read_struct)","numberOfBytes":"32","value":"t_struct(message_read_struct)1813_storage"},"t_mapping(t_uint256,t_struct(message_struct)1804_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.message_struct)","numberOfBytes":"32","value":"t_struct(message_struct)1804_storage"},"t_mapping(t_uint256,t_struct(reply_struct)1822_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.reply_struct)","numberOfBytes":"32","value":"t_struct(reply_struct)1822_storage"},"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1788_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.smart_contract_uri_struct)","numberOfBytes":"32","value":"t_struct(smart_contract_uri_struct)1788_storage"},"t_mapping(t_uint256,t_struct(user_badge_struct)1853_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DAOnation.user_badge_struct)","numberOfBytes":"32","value":"t_struct(user_badge_struct)1853_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(dao_uri_struct)1762_storage":{"encoding":"inplace","label":"struct DAOnation.dao_uri_struct","members":[{"astId":1757,"contract":"contracts/DAOnation.sol:DAOnation","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1759,"contract":"contracts/DAOnation.sol:DAOnation","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1761,"contract":"contracts/DAOnation.sol:DAOnation","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(donation_struct)1781_storage":{"encoding":"inplace","label":"struct DAOnation.donation_struct","members":[{"astId":1776,"contract":"contracts/DAOnation.sol:DAOnation","label":"ideas_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1778,"contract":"contracts/DAOnation.sol:DAOnation","label":"userid","offset":0,"slot":"1","type":"t_uint256"},{"astId":1780,"contract":"contracts/DAOnation.sol:DAOnation","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(feed_struct)1862_storage":{"encoding":"inplace","label":"struct DAOnation.feed_struct","members":[{"astId":1855,"contract":"contracts/DAOnation.sol:DAOnation","label":"feed_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1857,"contract":"contracts/DAOnation.sol:DAOnation","label":"date","offset":0,"slot":"1","type":"t_uint256"},{"astId":1859,"contract":"contracts/DAOnation.sol:DAOnation","label":"Type","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1861,"contract":"contracts/DAOnation.sol:DAOnation","label":"data","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(goal_ideas_votes_struct)1795_storage":{"encoding":"inplace","label":"struct DAOnation.goal_ideas_votes_struct","members":[{"astId":1790,"contract":"contracts/DAOnation.sol:DAOnation","label":"goal_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1792,"contract":"contracts/DAOnation.sol:DAOnation","label":"ideas_id","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1794,"contract":"contracts/DAOnation.sol:DAOnation","label":"user_id","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)1767_storage":{"encoding":"inplace","label":"struct DAOnation.goal_uri_struct","members":[{"astId":1764,"contract":"contracts/DAOnation.sol:DAOnation","label":"dao_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1766,"contract":"contracts/DAOnation.sol:DAOnation","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)1774_storage":{"encoding":"inplace","label":"struct DAOnation.ideas_uri_struct","members":[{"astId":1769,"contract":"contracts/DAOnation.sol:DAOnation","label":"goal_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1771,"contract":"contracts/DAOnation.sol:DAOnation","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1773,"contract":"contracts/DAOnation.sol:DAOnation","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(join_struct)1834_storage":{"encoding":"inplace","label":"struct DAOnation.join_struct","members":[{"astId":1829,"contract":"contracts/DAOnation.sol:DAOnation","label":"daoId","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1831,"contract":"contracts/DAOnation.sol:DAOnation","label":"user_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1833,"contract":"contracts/DAOnation.sol:DAOnation","label":"joined_date","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(message_read_struct)1813_storage":{"encoding":"inplace","label":"struct DAOnation.message_read_struct","members":[{"astId":1806,"contract":"contracts/DAOnation.sol:DAOnation","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1808,"contract":"contracts/DAOnation.sol:DAOnation","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1810,"contract":"contracts/DAOnation.sol:DAOnation","label":"user_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":1812,"contract":"contracts/DAOnation.sol:DAOnation","label":"msg_type","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(message_struct)1804_storage":{"encoding":"inplace","label":"struct DAOnation.message_struct","members":[{"astId":1797,"contract":"contracts/DAOnation.sol:DAOnation","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1799,"contract":"contracts/DAOnation.sol:DAOnation","label":"ideas_id","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1801,"contract":"contracts/DAOnation.sol:DAOnation","label":"message","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1803,"contract":"contracts/DAOnation.sol:DAOnation","label":"sender","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(reply_struct)1822_storage":{"encoding":"inplace","label":"struct DAOnation.reply_struct","members":[{"astId":1815,"contract":"contracts/DAOnation.sol:DAOnation","label":"reply_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1817,"contract":"contracts/DAOnation.sol:DAOnation","label":"message_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1819,"contract":"contracts/DAOnation.sol:DAOnation","label":"ideas_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":1821,"contract":"contracts/DAOnation.sol:DAOnation","label":"message","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(smart_contract_uri_struct)1788_storage":{"encoding":"inplace","label":"struct DAOnation.smart_contract_uri_struct","members":[{"astId":1783,"contract":"contracts/DAOnation.sol:DAOnation","label":"smart_contract_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1785,"contract":"contracts/DAOnation.sol:DAOnation","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1787,"contract":"contracts/DAOnation.sol:DAOnation","label":"smart_contract_uri","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(user_badge_struct)1853_storage":{"encoding":"inplace","label":"struct DAOnation.user_badge_struct","members":[{"astId":1836,"contract":"contracts/DAOnation.sol:DAOnation","label":"user_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1838,"contract":"contracts/DAOnation.sol:DAOnation","label":"dao","offset":0,"slot":"1","type":"t_bool"},{"astId":1840,"contract":"contracts/DAOnation.sol:DAOnation","label":"joined","offset":1,"slot":"1","type":"t_bool"},{"astId":1842,"contract":"contracts/DAOnation.sol:DAOnation","label":"goal","offset":2,"slot":"1","type":"t_bool"},{"astId":1844,"contract":"contracts/DAOnation.sol:DAOnation","label":"ideas","offset":3,"slot":"1","type":"t_bool"},{"astId":1846,"contract":"contracts/DAOnation.sol:DAOnation","label":"vote","offset":4,"slot":"1","type":"t_bool"},{"astId":1848,"contract":"contracts/DAOnation.sol:DAOnation","label":"donation","offset":5,"slot":"1","type":"t_bool"},{"astId":1850,"contract":"contracts/DAOnation.sol:DAOnation","label":"comment","offset":6,"slot":"1","type":"t_bool"},{"astId":1852,"contract":"contracts/DAOnation.sol:DAOnation","label":"reply","offset":7,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}